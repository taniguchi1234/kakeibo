/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseComboBoxLike } from "./BaseComboBoxLike";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { WCNativeHelper } from "./WCNativeHelper";
import { DatePickerMode_$type } from "./DatePickerMode";
import { DatePickerHeaderOrientation_$type } from "./DatePickerHeaderOrientation";
import { DatePickerOrientation_$type } from "./DatePickerOrientation";
import { DateRangeDescriptor } from "./DateRangeDescriptor";
import { CalendarResourceStrings } from "./CalendarResourceStrings";
import { WeekDays_$type } from "./WeekDays";
import { VoidEventArgs } from "./VoidEventArgs";
import { ComponentDateValueChangedEventArgs } from "./ComponentDateValueChangedEventArgs";
import { DatePart_$type } from "./DatePart";
import { SelectionRangeDirection_$type } from "./SelectionRangeDirection";
import { RangeTextSelectMode_$type } from "./RangeTextSelectMode";
/**
 * @hidden
 */
var DatePicker = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DatePicker, _super);
    function DatePicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.opening = null;
        _this.opened = null;
        _this.closing = null;
        _this.closed = null;
        _this.change = null;
        _this.input = null;
        return _this;
    }
    Object.defineProperty(DatePicker.prototype, "ap", {
        get: function () {
            var ret_ = this.b.n("label");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("label", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "s", {
        get: function () {
            var ret_ = this.b.n("mode");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(DatePickerMode_$type, EnumUtil.getEnumValue(DatePickerMode_$type, this.b.f(DatePickerMode_$type, ret_)));
            return EnumUtil.getEnumValue(DatePickerMode_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(DatePickerMode_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.b.w("mode", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ad", {
        get: function () {
            var ret_ = this.b.n("nonEditable");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("nonEditable", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "af", {
        get: function () {
            var ret_ = this.b.n("readOnly");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("readOnly", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "al", {
        get: function () {
            var ret_ = this.b.n("value");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("value", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ai", {
        get: function () {
            var ret_ = this.b.n("activeDate");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("activeDate", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ak", {
        get: function () {
            var ret_ = this.b.n("min");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("min", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "aj", {
        get: function () {
            var ret_ = this.b.n("max");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("max", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "r", {
        get: function () {
            var ret_ = this.b.n("headerOrientation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(DatePickerHeaderOrientation_$type, EnumUtil.getEnumValue(DatePickerHeaderOrientation_$type, this.b.f(DatePickerHeaderOrientation_$type, ret_)));
            return EnumUtil.getEnumValue(DatePickerHeaderOrientation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(DatePickerHeaderOrientation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.b.w("headerOrientation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "t", {
        get: function () {
            var ret_ = this.b.n("orientation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(DatePickerOrientation_$type, EnumUtil.getEnumValue(DatePickerOrientation_$type, this.b.f(DatePickerOrientation_$type, ret_)));
            return EnumUtil.getEnumValue(DatePickerOrientation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(DatePickerOrientation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.b.w("orientation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "aa", {
        get: function () {
            var ret_ = this.b.n("hideHeader");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("hideHeader", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ab", {
        get: function () {
            var ret_ = this.b.n("hideOutsideDays");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("hideOutsideDays", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "m", {
        get: function () {
            var ret_ = this.b.m("disabledDates", function (a) { return new DateRangeDescriptor(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("disabledDates", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "n", {
        get: function () {
            var ret_ = this.b.m("specialDates", function (a) { return new DateRangeDescriptor(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("specialDates", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ae", {
        get: function () {
            var ret_ = this.b.n("outlined");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("outlined", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "as", {
        get: function () {
            var ret_ = this.b.n("placeholder");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("placeholder", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "am", {
        get: function () {
            var ret_ = this.b.n("visibleMonths");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("visibleMonths", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ah", {
        get: function () {
            var ret_ = this.b.n("showWeekNumbers");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("showWeekNumbers", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "an", {
        get: function () {
            var ret_ = this.b.n("displayFormat");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("displayFormat", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ao", {
        get: function () {
            var ret_ = this.b.n("inputFormat");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("inputFormat", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "aq", {
        get: function () {
            var ret_ = this.b.n("locale");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("locale", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "at", {
        get: function () {
            var ret_ = this.b.n("prompt");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("prompt", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "o", {
        get: function () {
            var ret_ = this.b.m("resourceStrings", function (a) { return new CalendarResourceStrings(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("resourceStrings", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "y", {
        get: function () {
            var ret_ = this.b.n("weekStart");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(WeekDays_$type, EnumUtil.getEnumValue(WeekDays_$type, this.b.f(WeekDays_$type, ret_)));
            return EnumUtil.getEnumValue(WeekDays_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(WeekDays_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.b.w("weekStart", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "z", {
        get: function () {
            var ret_ = this.b.n("disabled");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("disabled", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ag", {
        get: function () {
            var ret_ = this.b.n("required");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("required", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ar", {
        get: function () {
            var ret_ = this.b.n("name");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("name", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "ac", {
        get: function () {
            var ret_ = this.b.n("invalid");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.b.w("invalid", value_);
        },
        enumerable: false,
        configurable: true
    });
    DatePicker.prototype.openingChanged = function () {
        var _this = this;
        if (this.opening != null) {
            this.b.s("opening", function (a) { return _this.opening(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.b.v("opening");
        }
    };
    DatePicker.prototype.openedChanged = function () {
        var _this = this;
        if (this.opened != null) {
            this.b.s("opened", function (a) { return _this.opened(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.b.v("opened");
        }
    };
    DatePicker.prototype.closingChanged = function () {
        var _this = this;
        if (this.closing != null) {
            this.b.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.b.v("closing");
        }
    };
    DatePicker.prototype.closedChanged = function () {
        var _this = this;
        if (this.closed != null) {
            this.b.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.b.v("closed");
        }
    };
    DatePicker.prototype.changeChanged = function () {
        var _this = this;
        if (this.change != null) {
            this.b.s("change", function (a) { return _this.change(_this, ComponentDateValueChangedEventArgs.a(a)); });
        }
        else {
            this.b.v("change");
        }
    };
    DatePicker.prototype.inputChanged = function () {
        var _this = this;
        if (this.input != null) {
            this.b.s("input", function (a) { return _this.input(_this, ComponentDateValueChangedEventArgs.a(a)); });
        }
        else {
            this.b.v("input");
        }
    };
    DatePicker.prototype.az = function () {
        this.nativeElement.connectedCallback();
    };
    DatePicker.prototype.aw = function () {
        this.nativeElement.clear();
    };
    DatePicker.prototype.a9 = function (a, b) {
        if (b === void 0) {
            b = -1;
        }
        this.nativeElement.stepUp(this.b.i(enumGetBox(DatePart_$type, a)), this.b.i(b));
    };
    DatePicker.prototype.a8 = function (a, b) {
        if (b === void 0) {
            b = -1;
        }
        this.nativeElement.stepDown(this.b.i(enumGetBox(DatePart_$type, a)), this.b.i(b));
    };
    DatePicker.prototype.a4 = function () {
        this.nativeElement.select();
    };
    DatePicker.prototype.a7 = function (a, b, c) {
        this.nativeElement.setSelectionRange(this.b.i(a), this.b.i(b), this.b.i(enumGetBox(SelectionRangeDirection_$type, c)));
    };
    DatePicker.prototype.a6 = function (a, b, c, d) {
        this.nativeElement.setRangeText(this.b.i(a), this.b.i(b), this.b.i(c), this.b.i(enumGetBox(RangeTextSelectMode_$type, d)));
    };
    DatePicker.prototype.a3 = function () {
        this.nativeElement.reportValidity();
    };
    DatePicker.prototype.av = function () {
        this.nativeElement.checkValidity();
    };
    DatePicker.prototype.a5 = function (a) {
        this.nativeElement.setCustomValidity(this.b.i(a));
    };
    DatePicker.$t = markType(DatePicker, 'DatePicker', BaseComboBoxLike.$);
    return DatePicker;
}(BaseComboBoxLike));
export { DatePicker };
