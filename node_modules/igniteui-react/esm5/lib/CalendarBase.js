/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { CalendarBaseSelection_$type } from "./CalendarBaseSelection";
import { WeekDays_$type } from "./WeekDays";
import { DateRangeDescriptor } from "./DateRangeDescriptor";
/**
 * @hidden
 */
var CalendarBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalendarBase, _super);
    function CalendarBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = new WCNativeHelper();
        _this.h = null;
        return _this;
    }
    Object.defineProperty(CalendarBase.prototype, "e", {
        get: function () {
            return this.d;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarBase.prototype, "nativeElement", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.d.o = this.h;
        },
        enumerable: false,
        configurable: true
    });
    CalendarBase.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(CalendarBase.prototype, "c", {
        get: function () {
            var ret_ = this.e.n("selection");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(CalendarBaseSelection_$type, EnumUtil.getEnumValue(CalendarBaseSelection_$type, this.e.f(CalendarBaseSelection_$type, ret_)));
            return EnumUtil.getEnumValue(CalendarBaseSelection_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(CalendarBaseSelection_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("selection", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarBase.prototype, "g", {
        get: function () {
            var ret_ = this.e.n("showWeekNumbers");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("showWeekNumbers", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarBase.prototype, "f", {
        get: function () {
            var ret_ = this.e.n("weekStart");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(WeekDays_$type, EnumUtil.getEnumValue(WeekDays_$type, this.e.f(WeekDays_$type, ret_)));
            return EnumUtil.getEnumValue(WeekDays_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(WeekDays_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("weekStart", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarBase.prototype, "j", {
        get: function () {
            var ret_ = this.e.n("locale");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("locale", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarBase.prototype, "b", {
        get: function () {
            var ret_ = this.e.m("specialDates", function (a) { return new DateRangeDescriptor(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("specialDates", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarBase.prototype, "a", {
        get: function () {
            var ret_ = this.e.m("disabledDates", function (a) { return new DateRangeDescriptor(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("disabledDates", value_);
        },
        enumerable: false,
        configurable: true
    });
    CalendarBase.$t = markType(CalendarBase, 'CalendarBase', BaseElement.$);
    return CalendarBase;
}(BaseElement));
export { CalendarBase };
