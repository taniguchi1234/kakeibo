/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CalendarBase } from "./CalendarBase";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { WCNativeHelper } from "./WCNativeHelper";
import { CalendarHeaderOrientation_$type } from "./CalendarHeaderOrientation";
import { CalendarOrientation_$type } from "./CalendarOrientation";
import { CalendarActiveView_$type } from "./CalendarActiveView";
import { CalendarFormatOptions } from "./CalendarFormatOptions";
import { CalendarResourceStrings } from "./CalendarResourceStrings";
import { ComponentDataValueChangedEventArgs } from "./ComponentDataValueChangedEventArgs";
/**
 * @hidden
 */
var Calendar = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Calendar, _super);
    function Calendar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.change = null;
        return _this;
    }
    Object.defineProperty(Calendar.prototype, "v", {
        get: function () {
            var ret_ = this.e.n("value");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("value", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "l", {
        get: function () {
            var ret_ = this.e.n("values");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("values", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "u", {
        get: function () {
            var ret_ = this.e.n("activeDate");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("activeDate", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "t", {
        get: function () {
            var ret_ = this.e.n("hideOutsideDays");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("hideOutsideDays", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "s", {
        get: function () {
            var ret_ = this.e.n("hideHeader");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("hideHeader", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "o", {
        get: function () {
            var ret_ = this.e.n("headerOrientation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(CalendarHeaderOrientation_$type, EnumUtil.getEnumValue(CalendarHeaderOrientation_$type, this.e.f(CalendarHeaderOrientation_$type, ret_)));
            return EnumUtil.getEnumValue(CalendarHeaderOrientation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(CalendarHeaderOrientation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("headerOrientation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "p", {
        get: function () {
            var ret_ = this.e.n("orientation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(CalendarOrientation_$type, EnumUtil.getEnumValue(CalendarOrientation_$type, this.e.f(CalendarOrientation_$type, ret_)));
            return EnumUtil.getEnumValue(CalendarOrientation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(CalendarOrientation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("orientation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "w", {
        get: function () {
            var ret_ = this.e.n("visibleMonths");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("visibleMonths", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "m", {
        get: function () {
            var ret_ = this.e.n("activeView");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(CalendarActiveView_$type, EnumUtil.getEnumValue(CalendarActiveView_$type, this.e.f(CalendarActiveView_$type, ret_)));
            return EnumUtil.getEnumValue(CalendarActiveView_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(CalendarActiveView_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("activeView", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "n", {
        get: function () {
            var ret_ = this.e.m("formatOptions", function (a) { return new CalendarFormatOptions(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("formatOptions", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "q", {
        get: function () {
            var ret_ = this.e.m("resourceStrings", function (a) { return new CalendarResourceStrings(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("resourceStrings", value_);
        },
        enumerable: false,
        configurable: true
    });
    Calendar.prototype.changeChanged = function () {
        var _this = this;
        if (this.change != null) {
            this.e.s("change", function (a) { return _this.change(_this, ComponentDataValueChangedEventArgs.a(a)); });
        }
        else {
            this.e.v("change");
        }
    };
    Calendar.$t = markType(Calendar, 'Calendar', CalendarBase.$);
    return Calendar;
}(CalendarBase));
export { Calendar };
