/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { TreeSelection_$type } from "./TreeSelection";
import { TreeSelectionChangeEventArgs } from "./TreeSelectionChangeEventArgs";
import { TreeItemComponentEventArgs } from "./TreeItemComponentEventArgs";
/**
 * @hidden
 */
var Tree = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Tree, _super);
    function Tree() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.h = new WCNativeHelper();
        _this.l = null;
        _this.selectionChanged = null;
        _this.itemExpanding = null;
        _this.itemExpanded = null;
        _this.itemCollapsing = null;
        _this.itemCollapsed = null;
        _this.activeItem = null;
        return _this;
    }
    Object.defineProperty(Tree.prototype, "i", {
        get: function () {
            return this.h;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Tree.prototype, "nativeElement", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.h.o = this.l;
        },
        enumerable: false,
        configurable: true
    });
    Tree.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(Tree.prototype, "j", {
        get: function () {
            var ret_ = this.i.n("singleBranchExpand");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.i.w("singleBranchExpand", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Tree.prototype, "k", {
        get: function () {
            var ret_ = this.i.n("toggleNodeOnClick");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.i.w("toggleNodeOnClick", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Tree.prototype, "f", {
        get: function () {
            var ret_ = this.i.n("selection");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(TreeSelection_$type, EnumUtil.getEnumValue(TreeSelection_$type, this.i.f(TreeSelection_$type, ret_)));
            return EnumUtil.getEnumValue(TreeSelection_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(TreeSelection_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.i.w("selection", value_);
        },
        enumerable: false,
        configurable: true
    });
    Tree.prototype.selectionChangedChanged = function () {
        var _this = this;
        if (this.selectionChanged != null) {
            this.i.s("selection", function (a) { return _this.selectionChanged(_this, TreeSelectionChangeEventArgs.b(a)); });
        }
        else {
            this.i.v("selection");
        }
    };
    Tree.prototype.itemExpandingChanged = function () {
        var _this = this;
        if (this.itemExpanding != null) {
            this.i.s("itemExpanding", function (a) { return _this.itemExpanding(_this, TreeItemComponentEventArgs.b(a)); });
        }
        else {
            this.i.v("itemExpanding");
        }
    };
    Tree.prototype.itemExpandedChanged = function () {
        var _this = this;
        if (this.itemExpanded != null) {
            this.i.s("itemExpanded", function (a) { return _this.itemExpanded(_this, TreeItemComponentEventArgs.b(a)); });
        }
        else {
            this.i.v("itemExpanded");
        }
    };
    Tree.prototype.itemCollapsingChanged = function () {
        var _this = this;
        if (this.itemCollapsing != null) {
            this.i.s("itemCollapsing", function (a) { return _this.itemCollapsing(_this, TreeItemComponentEventArgs.b(a)); });
        }
        else {
            this.i.v("itemCollapsing");
        }
    };
    Tree.prototype.itemCollapsedChanged = function () {
        var _this = this;
        if (this.itemCollapsed != null) {
            this.i.s("itemCollapsed", function (a) { return _this.itemCollapsed(_this, TreeItemComponentEventArgs.b(a)); });
        }
        else {
            this.i.v("itemCollapsed");
        }
    };
    Tree.prototype.activeItemChanged = function () {
        var _this = this;
        if (this.activeItem != null) {
            this.i.s("activeItem", function (a) { return _this.activeItem(_this, TreeItemComponentEventArgs.b(a)); });
        }
        else {
            this.i.v("activeItem");
        }
    };
    Tree.prototype.o = function () {
        this.nativeElement.connectedCallback();
    };
    Tree.prototype.p = function (a) {
        this.nativeElement.expandToItem(this.i.i(a));
    };
    Tree.$t = markType(Tree, 'Tree', BaseElement.$);
    return Tree;
}(BaseElement));
export { Tree };
