/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { Step } from "./Step";
import { StepperOrientation_$type } from "./StepperOrientation";
import { StepperStepType_$type } from "./StepperStepType";
import { StepperVerticalAnimation_$type } from "./StepperVerticalAnimation";
import { StepperHorizontalAnimation_$type } from "./StepperHorizontalAnimation";
import { StepperTitlePosition_$type } from "./StepperTitlePosition";
import { ActiveStepChangingArgsEventArgs } from "./ActiveStepChangingArgsEventArgs";
import { ActiveStepChangedArgsEventArgs } from "./ActiveStepChangedArgsEventArgs";
/**
 * @hidden
 */
var Stepper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Stepper, _super);
    function Stepper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.i = new WCNativeHelper();
        _this.n = null;
        _this.activeStepChanging = null;
        _this.activeStepChanged = null;
        return _this;
    }
    Object.defineProperty(Stepper.prototype, "j", {
        get: function () {
            return this.i;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "nativeElement", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.i.o = this.n;
        },
        enumerable: false,
        configurable: true
    });
    Stepper.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(Stepper.prototype, "a", {
        get: function () {
            var ret_ = this.j.m("steps", function (a) { return new Step(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("steps", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "e", {
        get: function () {
            var ret_ = this.j.n("orientation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(StepperOrientation_$type, EnumUtil.getEnumValue(StepperOrientation_$type, this.j.f(StepperOrientation_$type, ret_)));
            return EnumUtil.getEnumValue(StepperOrientation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(StepperOrientation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("orientation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "f", {
        get: function () {
            var ret_ = this.j.n("stepType");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(StepperStepType_$type, EnumUtil.getEnumValue(StepperStepType_$type, this.j.f(StepperStepType_$type, ret_)));
            return EnumUtil.getEnumValue(StepperStepType_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(StepperStepType_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("stepType", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "l", {
        get: function () {
            var ret_ = this.j.n("linear");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("linear", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "k", {
        get: function () {
            var ret_ = this.j.n("contentTop");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("contentTop", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "h", {
        get: function () {
            var ret_ = this.j.n("verticalAnimation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(StepperVerticalAnimation_$type, EnumUtil.getEnumValue(StepperVerticalAnimation_$type, this.j.f(StepperVerticalAnimation_$type, ret_)));
            return EnumUtil.getEnumValue(StepperVerticalAnimation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(StepperVerticalAnimation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("verticalAnimation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "d", {
        get: function () {
            var ret_ = this.j.n("horizontalAnimation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(StepperHorizontalAnimation_$type, EnumUtil.getEnumValue(StepperHorizontalAnimation_$type, this.j.f(StepperHorizontalAnimation_$type, ret_)));
            return EnumUtil.getEnumValue(StepperHorizontalAnimation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(StepperHorizontalAnimation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("horizontalAnimation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "m", {
        get: function () {
            var ret_ = this.j.n("animationDuration");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("animationDuration", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Stepper.prototype, "g", {
        get: function () {
            var ret_ = this.j.n("titlePosition");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(StepperTitlePosition_$type, EnumUtil.getEnumValue(StepperTitlePosition_$type, this.j.f(StepperTitlePosition_$type, ret_)));
            return EnumUtil.getEnumValue(StepperTitlePosition_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(StepperTitlePosition_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("titlePosition", value_);
        },
        enumerable: false,
        configurable: true
    });
    Stepper.prototype.activeStepChangingChanged = function () {
        var _this = this;
        if (this.activeStepChanging != null) {
            this.j.s("activeStepChanging", function (a) { return _this.activeStepChanging(_this, ActiveStepChangingArgsEventArgs.b(a)); });
        }
        else {
            this.j.v("activeStepChanging");
        }
    };
    Stepper.prototype.activeStepChangedChanged = function () {
        var _this = this;
        if (this.activeStepChanged != null) {
            this.j.s("activeStepChanged", function (a) { return _this.activeStepChanged(_this, ActiveStepChangedArgsEventArgs.b(a)); });
        }
        else {
            this.j.v("activeStepChanged");
        }
    };
    Stepper.prototype.r = function () {
        this.nativeElement.connectedCallback();
    };
    Stepper.prototype.s = function (a) {
        this.nativeElement.navigateTo(this.j.i(a));
    };
    Stepper.prototype.t = function () {
        this.nativeElement.next();
    };
    Stepper.prototype.u = function () {
        this.nativeElement.prev();
    };
    Stepper.prototype.v = function () {
        this.nativeElement.reset();
    };
    Stepper.$t = markType(Stepper, 'Stepper', BaseElement.$);
    return Stepper;
}(BaseElement));
export { Stepper };
