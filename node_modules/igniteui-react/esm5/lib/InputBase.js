/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, markType } from "igniteui-react-core";
import { ComponentValueChangedEventArgs } from "./ComponentValueChangedEventArgs";
import { VoidEventArgs } from "./VoidEventArgs";
import { SelectionRangeDirection_$type } from "./SelectionRangeDirection";
import { RangeTextSelectMode_$type } from "./RangeTextSelectMode";
/**
 * @hidden
 */
var InputBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(InputBase, _super);
    function InputBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = new WCNativeHelper();
        _this.k = null;
        _this.inputOcurred = null;
        _this.focus = null;
        _this.blur = null;
        return _this;
    }
    Object.defineProperty(InputBase.prototype, "e", {
        get: function () {
            return this.d;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "nativeElement", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.d.o = this.k;
        },
        enumerable: false,
        configurable: true
    });
    InputBase.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(InputBase.prototype, "h", {
        get: function () {
            var ret_ = this.e.n("outlined");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("outlined", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "i", {
        get: function () {
            var ret_ = this.e.n("readOnly");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("readOnly", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "o", {
        get: function () {
            var ret_ = this.e.n("placeholder");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("placeholder", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "m", {
        get: function () {
            var ret_ = this.e.n("label");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("label", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "f", {
        get: function () {
            var ret_ = this.e.n("disabled");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("disabled", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "j", {
        get: function () {
            var ret_ = this.e.n("required");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("required", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "n", {
        get: function () {
            var ret_ = this.e.n("name");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("name", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(InputBase.prototype, "g", {
        get: function () {
            var ret_ = this.e.n("invalid");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("invalid", value_);
        },
        enumerable: false,
        configurable: true
    });
    InputBase.prototype.inputOcurredChanged = function () {
        var _this = this;
        if (this.inputOcurred != null) {
            this.e.s("input", function (a) { return _this.inputOcurred(_this, ComponentValueChangedEventArgs.a(a)); });
        }
        else {
            this.e.v("input");
        }
    };
    InputBase.prototype.focusChanged = function () {
        var _this = this;
        if (this.focus != null) {
            this.e.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
        }
        else {
            this.e.v("focus");
        }
    };
    InputBase.prototype.blurChanged = function () {
        var _this = this;
        if (this.blur != null) {
            this.e.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
        }
        else {
            this.e.v("blur");
        }
    };
    InputBase.prototype.t = function (a) {
        this.nativeElement.focus(this.e.i(a));
    };
    InputBase.prototype.q = function () {
        this.nativeElement.blur();
    };
    InputBase.prototype.z = function (a, b, c) {
        this.nativeElement.setSelectionRange(this.e.i(a), this.e.i(b), this.e.i(enumGetBox(SelectionRangeDirection_$type, c)));
    };
    InputBase.prototype.y = function (a, b, c, d) {
        this.nativeElement.setRangeText(this.e.i(a), this.e.i(b), this.e.i(c), this.e.i(enumGetBox(RangeTextSelectMode_$type, d)));
    };
    InputBase.prototype.v = function () {
        this.nativeElement.reportValidity();
    };
    InputBase.prototype.r = function () {
        this.nativeElement.checkValidity();
    };
    InputBase.prototype.w = function (a) {
        this.nativeElement.setCustomValidity(this.e.i(a));
    };
    InputBase.$t = markType(InputBase, 'InputBase', BaseElement.$);
    return InputBase;
}(BaseElement));
export { InputBase };
