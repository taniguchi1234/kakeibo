import { __extends } from "tslib";
import { PaneDragActionType_$type } from "./PaneDragActionType";
import { IgrDockingIndicator } from "./igr-docking-indicator";
import { IgrDockManagerPane } from "./igr-dock-manager-pane";
import { IgrPaneDragAction } from "./igr-pane-drag-action";
import { DockPaneAction } from "./DockPaneAction";
import { ensureEnum } from "igniteui-react-core";
var IgrDockPaneAction = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrDockPaneAction, _super);
    function IgrDockPaneAction(props) {
        return _super.call(this, props) || this;
    }
    IgrDockPaneAction.prototype.createImplementation = function () {
        return new DockPaneAction();
    };
    Object.defineProperty(IgrDockPaneAction.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockPaneAction.prototype, "type", {
        get: function () {
            return this.i.c;
        },
        set: function (v) {
            this.i.c = ensureEnum(PaneDragActionType_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockPaneAction.prototype, "dockingIndicator", {
        get: function () {
            var r = this.i.a;
            if (r == null) {
                return null;
            }
            if (!r.externalObject) {
                var e = new IgrDockingIndicator();
                if (r.$type) {
                    e._implementation = r;
                }
                else {
                    if (e.i.setNativeElement) {
                        e.i.setNativeElement(r);
                    }
                }
                r.externalObject = e;
            }
            return r.externalObject;
        },
        set: function (v) {
            v == null ? this.i.a = null : this.i.a = v.i;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockPaneAction.prototype, "targetPane", {
        get: function () {
            var r = this.i.b;
            if (r == null) {
                return null;
            }
            if (!r.externalObject) {
                var e = IgrDockManagerPane._createFromInternal(r);
                if (e) {
                    e._implementation = r;
                }
                r.externalObject = e;
            }
            return r.externalObject;
        },
        set: function (v) {
            if (v != null && this._stylingContainer && v._styling)
                v._styling(this._stylingContainer, this, this);
            v == null ? this.i.b = null : this.i.b = v.i;
        },
        enumerable: false,
        configurable: true
    });
    IgrDockPaneAction.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.dockingIndicator && this.dockingIndicator.name && this.dockingIndicator.name == name) {
            return this.dockingIndicator;
        }
        if (this.targetPane && this.targetPane.name && this.targetPane.name == name) {
            return this.targetPane;
        }
        return null;
    };
    IgrDockPaneAction.prototype._styling = function (container, component, parent) {
        _super.prototype._styling.call(this, container, component, parent);
        this._inStyling = true;
        if (this.targetPane && this.targetPane._styling) {
            this.targetPane._styling(container, component, this);
        }
        this._inStyling = false;
    };
    IgrDockPaneAction.prototype.setNativeElement = function (element) {
        this.i.setNativeElement(element);
    };
    return IgrDockPaneAction;
}(IgrPaneDragAction));
export { IgrDockPaneAction };
