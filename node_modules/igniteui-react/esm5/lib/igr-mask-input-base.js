import { __extends } from "tslib";
import { IgrInputBase } from "./igr-input-base";
var IgrMaskInputBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrMaskInputBase, _super);
    function IgrMaskInputBase(props) {
        return _super.call(this, props) || this;
    }
    Object.defineProperty(IgrMaskInputBase.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrMaskInputBase.prototype, "prompt", {
        /**
         * The prompt symbol to use for unfilled parts of the mask.
        */
        get: function () {
            return this.i.aa;
        },
        set: function (v) {
            this.i.aa = v;
        },
        enumerable: false,
        configurable: true
    });
    IgrMaskInputBase.prototype.connectedCallback = function () {
        this.i.ab();
    };
    /**
     * Selects all text within the input.
    
    */
    IgrMaskInputBase.prototype.select = function () {
        this.i.ac();
    };
    return IgrMaskInputBase;
}(IgrInputBase));
export { IgrMaskInputBase };
