/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { MaskInputBase } from "./MaskInputBase";
import { enumGetBox, markType } from "igniteui-react-core";
import { DatePartDeltas } from "./DatePartDeltas";
import { ComponentDateValueChangedEventArgs } from "./ComponentDateValueChangedEventArgs";
import { DatePart_$type } from "./DatePart";
/**
 * @hidden
 */
var DateTimeInput = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DateTimeInput, _super);
    function DateTimeInput() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.change = null;
        return _this;
    }
    Object.defineProperty(DateTimeInput.prototype, "ak", {
        get: function () {
            var ret_ = this.e.n("inputFormat");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("inputFormat", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeInput.prototype, "ai", {
        get: function () {
            var ret_ = this.e.n("value");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("value", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeInput.prototype, "ah", {
        get: function () {
            var ret_ = this.e.n("min");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("min", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeInput.prototype, "ag", {
        get: function () {
            var ret_ = this.e.n("max");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("max", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeInput.prototype, "aj", {
        get: function () {
            var ret_ = this.e.n("displayFormat");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("displayFormat", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeInput.prototype, "ae", {
        get: function () {
            var ret_ = this.e.m("spinDelta", function (a) { return new DatePartDeltas(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("spinDelta", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeInput.prototype, "af", {
        get: function () {
            var ret_ = this.e.n("spinLoop");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("spinLoop", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeInput.prototype, "al", {
        get: function () {
            var ret_ = this.e.n("locale");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("locale", value_);
        },
        enumerable: false,
        configurable: true
    });
    DateTimeInput.prototype.changeChanged = function () {
        var _this = this;
        if (this.change != null) {
            this.e.s("change", function (a) { return _this.change(_this, ComponentDateValueChangedEventArgs.a(a)); });
        }
        else {
            this.e.v("change");
        }
    };
    DateTimeInput.prototype.ao = function () {
        this.nativeElement.connectedCallback();
    };
    DateTimeInput.prototype.aq = function (a, b) {
        if (b === void 0) {
            b = -1;
        }
        this.nativeElement.stepUp(this.e.i(enumGetBox(DatePart_$type, a)), this.e.i(b));
    };
    DateTimeInput.prototype.ap = function (a, b) {
        if (b === void 0) {
            b = -1;
        }
        this.nativeElement.stepDown(this.e.i(enumGetBox(DatePart_$type, a)), this.e.i(b));
    };
    DateTimeInput.prototype.an = function () {
        this.nativeElement.clear();
    };
    DateTimeInput.$t = markType(DateTimeInput, 'DateTimeInput', MaskInputBase.$);
    return DateTimeInput;
}(MaskInputBase));
export { DateTimeInput };
