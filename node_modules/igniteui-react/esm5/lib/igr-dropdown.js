import { __assign, __extends } from "tslib";
import * as React from 'react';
import { delegateCombine, delegateRemove } from "igniteui-react-core";
import { DropdownPlacement_$type } from "./DropdownPlacement";
import { DropdownScrollStrategy_$type } from "./DropdownScrollStrategy";
import { IgrDropdownItem } from "./igr-dropdown-item";
import { IgrVoidEventArgs } from "./igr-void-event-args";
import { IgrDropdownItemComponentEventArgs } from "./igr-dropdown-item-component-event-args";
import { IgrBaseComboBoxLike } from "./igr-base-combo-box-like";
import { Dropdown } from "./Dropdown";
import { IgcDropdownComponent, defineComponents } from "igniteui-webcomponents";
import { isValidProp, ensureEnum, ensureBool } from "igniteui-react-core";
import { IgrDropdownGroup } from "./igr-dropdown-group";
/**
 * Represents a DropDown component.
*/
var IgrDropdown = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrDropdown, _super);
    function IgrDropdown(props) {
        var _this = _super.call(this, props) || this;
        _this._opening = null;
        _this._opening_wrapped = null;
        _this._opened = null;
        _this._opened_wrapped = null;
        _this._closing = null;
        _this._closing_wrapped = null;
        _this._closed = null;
        _this._closed_wrapped = null;
        _this._change = null;
        _this._change_wrapped = null;
        _this._getMainRef = _this._getMainRef.bind(_this);
        defineComponents(IgcDropdownComponent);
        return _this;
    }
    IgrDropdown.prototype.createImplementation = function () {
        return new Dropdown();
    };
    Object.defineProperty(IgrDropdown.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrDropdown.prototype.componentDidMount = function () {
        this.i.nativeElement = this._elRef;
        this.mounted = true;
        _super.prototype.componentDidMount.call(this);
    };
    IgrDropdown.prototype.render = function () {
        var _this = this;
        var nativePropsName = Object.keys(this.props).filter(function (prop) { return !isValidProp(_this, prop) && prop !== "originalRef"; });
        var nativeProps = {};
        nativePropsName.forEach(function (propName) {
            nativeProps[propName] = _this.props[propName];
        });
        var propChildren = this.props.children;
        var children = [];
        React.Children.forEach(propChildren, function (ch) {
            children.push(React.cloneElement(ch));
        });
        this._portalManager.onRender(children);
        var style = {};
        if (this.props.style) {
            style = this.props.style;
        }
        var div = React.createElement("igc-dropdown", __assign(__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
        return div;
    };
    IgrDropdown.prototype._getMainRef = function (ref) {
        this._elRef = ref;
    };
    Object.defineProperty(IgrDropdown.prototype, "placement", {
        /**
         * The preferred placement of the component around the target element.
         * @type {'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'right' | 'right-start' | 'right-end' | 'left' | 'left-start' | 'left-end'}
        */
        get: function () {
            return this.i.s;
        },
        set: function (v) {
            this.i.s = ensureEnum(DropdownPlacement_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "scrollStrategy", {
        /**
         * Determines the behavior of the component during scrolling of the parent container.
        */
        get: function () {
            return this.i.t;
        },
        set: function (v) {
            this.i.t = ensureEnum(DropdownScrollStrategy_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "flip", {
        /**
         * Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.
         * When true, once enough space is detected on its preferred side, it will flip back.
        */
        get: function () {
            return this.i.y;
        },
        set: function (v) {
            this.i.y = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "distance", {
        /**
         * The distance from the target element.
        */
        get: function () {
            return this.i.aa;
        },
        set: function (v) {
            this.i.aa = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "sameWidth", {
        /**
         * Whether the dropdown's width should be the same as the target's one.
        */
        get: function () {
            return this.i.z;
        },
        set: function (v) {
            this.i.z = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "items", {
        /**
         * Returns the items of the dropdown.
        */
        get: function () {
            if (!this.i.n) {
                return undefined;
            }
            var ret = [];
            for (var i = 0; i < this.i.n.length; i++) {
                var impl = this.i.n[i];
                if (!impl.externalObject) {
                    if (impl instanceof IgrDropdownItem) {
                        ret.push(impl);
                        continue;
                    }
                    var e = IgrDropdownItem._createFromInternal(impl);
                    e._implementation = impl;
                    impl.externalObject = e;
                }
                ret.push(impl.externalObject);
            }
            return ret;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "groups", {
        /**
         * Returns the group items of the dropdown.
        */
        get: function () {
            if (!this.i.m) {
                return undefined;
            }
            var ret = [];
            for (var i = 0; i < this.i.m.length; i++) {
                var impl = this.i.m[i];
                if (!impl.externalObject) {
                    if (impl instanceof IgrDropdownGroup) {
                        ret.push(impl);
                        continue;
                    }
                    var e = IgrDropdownGroup._createFromInternal(impl);
                    e._implementation = impl;
                    impl.externalObject = e;
                }
                ret.push(impl.externalObject);
            }
            return ret;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "selectedItem", {
        /**
         * Returns the selected item from the dropdown or null.
        */
        get: function () {
            var r = this.i.q;
            if (r == null) {
                return null;
            }
            if (!r.externalObject) {
                var e = new IgrDropdownItem({});
                if (r.$type) {
                    e._implementation = r;
                }
                else {
                    if (e.i.setNativeElement) {
                        e.i.setNativeElement(r);
                    }
                }
                r.externalObject = e;
            }
            return r.externalObject;
        },
        enumerable: false,
        configurable: true
    });
    IgrDropdown.prototype._styling = function (container, component, parent) {
        _super.prototype._styling.call(this, container, component, parent);
        this._inStyling = true;
        if (this.selectedItem && this.selectedItem._styling) {
            this.selectedItem._styling(container, component, this);
        }
        this._inStyling = false;
    };
    /**
     * Shows the dropdown.
    
    */
    IgrDropdown.prototype.showTarget = function (target_) {
        this.i.showTarget(target_);
    };
    /**
     * Toggles the open state of the dropdown.
    
    */
    IgrDropdown.prototype.toggleTarget = function (target_) {
        this.i.toggleTarget(target_);
    };
    /**
     * Navigates to the item at the specified index. If it exists, returns the found item, otherwise - null.
    
    */
    IgrDropdown.prototype.navigateTo = function (index) {
        var iv = this.i.o(index);
        var ret = null;
        if (iv && iv.externalObject) {
            ret = iv.externalObject;
        }
        else {
            if (iv) {
                var e = IgrDropdownItem._createFromInternal(iv);
                e._implementation = iv;
                iv.externalObject = e;
                ret = e;
            }
        }
        return ret;
    };
    /**
     * Selects the item with the specified value. If it exists, returns the found item, otherwise - null.
    
    */
    IgrDropdown.prototype.select = function (value) {
        var iv = this.i.p(value);
        var ret = null;
        if (iv && iv.externalObject) {
            ret = iv.externalObject;
        }
        else {
            if (iv) {
                var e = IgrDropdownItem._createFromInternal(iv);
                e._implementation = iv;
                iv.externalObject = e;
                ret = e;
            }
        }
        return ret;
    };
    IgrDropdown.prototype.disconnectedCallback = function () {
        this.i.af();
    };
    /**
     * Clears the current selection of the dropdown.
    
    */
    IgrDropdown.prototype.clearSelection = function () {
        this.i.ac();
    };
    Object.defineProperty(IgrDropdown.prototype, "opening", {
        get: function () {
            return this._opening;
        },
        set: function (ev) {
            var _this = this;
            if (this._opening_wrapped !== null) {
                this.i.opening = delegateRemove(this.i.opening, this._opening_wrapped);
                this._opening_wrapped = null;
                this._opening = null;
            }
            this._opening = ev;
            this._opening_wrapped = function (o, e) {
                var outerArgs = new IgrVoidEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeOpening) {
                    _this.beforeOpening(_this, outerArgs);
                }
                if (_this._opening) {
                    _this._opening(_this, outerArgs);
                }
            };
            this.i.opening = delegateCombine(this.i.opening, this._opening_wrapped);
            if (this.i.openingChanged) {
                this.i.openingChanged();
            }
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "opened", {
        get: function () {
            return this._opened;
        },
        set: function (ev) {
            var _this = this;
            if (this._opened_wrapped !== null) {
                this.i.opened = delegateRemove(this.i.opened, this._opened_wrapped);
                this._opened_wrapped = null;
                this._opened = null;
            }
            this._opened = ev;
            this._opened_wrapped = function (o, e) {
                var outerArgs = new IgrVoidEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeOpened) {
                    _this.beforeOpened(_this, outerArgs);
                }
                if (_this._opened) {
                    _this._opened(_this, outerArgs);
                }
            };
            this.i.opened = delegateCombine(this.i.opened, this._opened_wrapped);
            if (this.i.openedChanged) {
                this.i.openedChanged();
            }
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "closing", {
        get: function () {
            return this._closing;
        },
        set: function (ev) {
            var _this = this;
            if (this._closing_wrapped !== null) {
                this.i.closing = delegateRemove(this.i.closing, this._closing_wrapped);
                this._closing_wrapped = null;
                this._closing = null;
            }
            this._closing = ev;
            this._closing_wrapped = function (o, e) {
                var outerArgs = new IgrVoidEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeClosing) {
                    _this.beforeClosing(_this, outerArgs);
                }
                if (_this._closing) {
                    _this._closing(_this, outerArgs);
                }
            };
            this.i.closing = delegateCombine(this.i.closing, this._closing_wrapped);
            if (this.i.closingChanged) {
                this.i.closingChanged();
            }
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "closed", {
        get: function () {
            return this._closed;
        },
        set: function (ev) {
            var _this = this;
            if (this._closed_wrapped !== null) {
                this.i.closed = delegateRemove(this.i.closed, this._closed_wrapped);
                this._closed_wrapped = null;
                this._closed = null;
            }
            this._closed = ev;
            this._closed_wrapped = function (o, e) {
                var outerArgs = new IgrVoidEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeClosed) {
                    _this.beforeClosed(_this, outerArgs);
                }
                if (_this._closed) {
                    _this._closed(_this, outerArgs);
                }
            };
            this.i.closed = delegateCombine(this.i.closed, this._closed_wrapped);
            if (this.i.closedChanged) {
                this.i.closedChanged();
            }
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDropdown.prototype, "change", {
        get: function () {
            return this._change;
        },
        set: function (ev) {
            var _this = this;
            if (this._change_wrapped !== null) {
                this.i.change = delegateRemove(this.i.change, this._change_wrapped);
                this._change_wrapped = null;
                this._change = null;
            }
            this._change = ev;
            this._change_wrapped = function (o, e) {
                var outerArgs = new IgrDropdownItemComponentEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeChange) {
                    _this.beforeChange(_this, outerArgs);
                }
                if (_this._change) {
                    _this._change(_this, outerArgs);
                }
            };
            this.i.change = delegateCombine(this.i.change, this._change_wrapped);
            if (this.i.changeChanged) {
                this.i.changeChanged();
            }
            ;
        },
        enumerable: false,
        configurable: true
    });
    return IgrDropdown;
}(IgrBaseComboBoxLike));
export { IgrDropdown };
