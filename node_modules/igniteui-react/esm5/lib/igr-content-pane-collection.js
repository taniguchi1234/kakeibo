import { __extends } from "tslib";
import { IgCollection } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
import { SyncableObservableCollection$2 } from "igniteui-react-core";
import { ContentPane as ContentPane_internal } from './ContentPane';
import { IgrContentPane as IgrContentPane } from './igr-content-pane';
var IgrContentPaneCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrContentPaneCollection, _super);
    function IgrContentPaneCollection(list) {
        var _this = _super.call(this) || this;
        if (!IgrContentPane.$type) {
            IgrContentPane.$type = markType(IgrContentPane, "IgrContentPane");
        }
        if (list) {
            for (var i = 0; i < list.length; i++) {
                _this.add(list[i]);
            }
        }
        return _this;
    }
    IgrContentPaneCollection.prototype._createInnerColl = function () {
        if (!IgrContentPane.$type) {
            IgrContentPane.$type = markType(IgrContentPane, "IgrContentPane");
        }
        var coll = new SyncableObservableCollection$2(IgrContentPane.$type, ContentPane_internal.$type, 0);
        coll.compare = function (ext, int) {
            var comp = ext;
            if (comp._implementation) {
                comp = comp._implementation;
            }
            if (comp.equals) {
                return comp.equals(int);
            }
            return comp === int;
        };
        coll.createTo = function (ext) {
            return ext._implementation;
        };
        coll.createFrom = function (int) {
            var ext = int.externalObject;
            if (!ext) {
                ext = IgrContentPane._createFromInternal(int);
                if (ext) {
                    if (!int.$type && ext._implementation.setNativeElement) {
                        ext._implementation.setNativeElement(int);
                    }
                    else {
                        ext._implementation = int;
                    }
                }
            }
            return ext;
        };
        return coll;
    };
    return IgrContentPaneCollection;
}(IgCollection));
export { IgrContentPaneCollection };
