import { IgrContentPane } from "./igr-content-pane";
import { PaneScrollEventArgsDetail as PaneScrollEventArgsDetail_internal } from "./PaneScrollEventArgsDetail";
var IgrPaneScrollEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
    function IgrPaneScrollEventArgsDetail() {
        this.mounted = false;
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    IgrPaneScrollEventArgsDetail.prototype.createImplementation = function () {
        return new PaneScrollEventArgsDetail_internal();
    };
    Object.defineProperty(IgrPaneScrollEventArgsDetail.prototype, "nativeElement", {
        get: function () {
            return this._implementation.nativeElement;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrPaneScrollEventArgsDetail.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrPaneScrollEventArgsDetail.prototype.onImplementationCreated = function () {
    };
    IgrPaneScrollEventArgsDetail.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    };
    Object.defineProperty(IgrPaneScrollEventArgsDetail.prototype, "pane", {
        /**
         * Gets the content pane that is scrolled.
        */
        get: function () {
            var r = this.i.a;
            if (r == null) {
                return null;
            }
            if (!r.externalObject) {
                var e = IgrContentPane._createFromInternal(r);
                if (e) {
                    e._implementation = r;
                }
                r.externalObject = e;
            }
            return r.externalObject;
        },
        set: function (v) {
            v == null ? this.i.a = null : this.i.a = v.i;
        },
        enumerable: false,
        configurable: true
    });
    IgrPaneScrollEventArgsDetail.prototype.findByName = function (name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        if (this.pane && this.pane.name && this.pane.name == name) {
            return this.pane;
        }
        return null;
    };
    IgrPaneScrollEventArgsDetail.prototype.setNativeElement = function (element) {
        this.i.setNativeElement(element);
    };
    return IgrPaneScrollEventArgsDetail;
}());
export { IgrPaneScrollEventArgsDetail };
