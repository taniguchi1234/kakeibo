import { IgrTreeItemCollection } from "./igr-tree-item-collection";
import { TreeSelectionOptionsEventDetail as TreeSelectionOptionsEventDetail_internal } from "./TreeSelectionOptionsEventDetail";
import { TreeItemCollection as TreeItemCollection_internal } from "./TreeItemCollection";
import { TreeItem } from "./TreeItem";
import { SyncableObservableCollection$1 } from "igniteui-react-core";
var IgrTreeSelectionOptionsEventDetail = /** @class */ /*@__PURE__*/ (function () {
    function IgrTreeSelectionOptionsEventDetail() {
        this.mounted = false;
        this._newSelection = null;
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    IgrTreeSelectionOptionsEventDetail.prototype.createImplementation = function () {
        return new TreeSelectionOptionsEventDetail_internal();
    };
    Object.defineProperty(IgrTreeSelectionOptionsEventDetail.prototype, "nativeElement", {
        get: function () {
            return this._implementation.nativeElement;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrTreeSelectionOptionsEventDetail.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrTreeSelectionOptionsEventDetail.prototype.onImplementationCreated = function () {
    };
    IgrTreeSelectionOptionsEventDetail.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    };
    Object.defineProperty(IgrTreeSelectionOptionsEventDetail.prototype, "newSelection", {
        get: function () {
            if (this._newSelection === null) {
                var coll = new IgrTreeItemCollection();
                var innerColl = this.i.a;
                if (!innerColl) {
                    innerColl = new TreeItemCollection_internal();
                }
                this._newSelection = coll._fromInner(innerColl);
                this.i.a = innerColl;
            }
            return this._newSelection;
        },
        set: function (v) {
            if (this._newSelection !== null) {
                this._newSelection._setSyncTarget(null);
                this._newSelection = null;
            }
            var coll = new IgrTreeItemCollection();
            this._newSelection = coll._fromOuter(v);
            var syncColl = new SyncableObservableCollection$1(TreeItem.$type);
            var innerColl = this.i.a;
            if (!innerColl) {
                innerColl = new TreeItemCollection_internal();
            }
            syncColl._inner = innerColl;
            syncColl.clear();
            this._newSelection._setSyncTarget(syncColl);
            this.i.a = innerColl;
        },
        enumerable: false,
        configurable: true
    });
    IgrTreeSelectionOptionsEventDetail.prototype.findByName = function (name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        if (this.newSelection != null && this.newSelection.findByName && this.newSelection.findByName(name)) {
            return this.newSelection.findByName(name);
        }
        return null;
    };
    return IgrTreeSelectionOptionsEventDetail;
}());
export { IgrTreeSelectionOptionsEventDetail };
