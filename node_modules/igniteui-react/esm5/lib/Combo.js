/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { GroupingDirection_$type } from "./GroupingDirection";
import { FilteringOptions } from "./FilteringOptions";
import { ComboChangeEventArgs } from "./ComboChangeEventArgs";
import { VoidEventArgs } from "./VoidEventArgs";
/**
 * @hidden
 */
var Combo = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Combo, _super);
    function Combo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.m = new WCNativeHelper();
        _this.ab = null;
        _this.change = null;
        _this.focus = null;
        _this.blur = null;
        _this.opening = null;
        _this.opened = null;
        _this.closing = null;
        _this.closed = null;
        _this.ae = null;
        _this.ad = null;
        return _this;
    }
    Object.defineProperty(Combo.prototype, "n", {
        get: function () {
            return this.m;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "nativeElement", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.m.o = this.ab;
        },
        enumerable: false,
        configurable: true
    });
    Combo.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(Combo.prototype, "a", {
        get: function () {
            var ret_ = this.n.n("data");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("data", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "w", {
        get: function () {
            var ret_ = this.n.n("outlined");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("outlined", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "z", {
        get: function () {
            var ret_ = this.n.n("singleSelect");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("singleSelect", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "o", {
        get: function () {
            var ret_ = this.n.n("autofocus");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("autofocus", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "p", {
        get: function () {
            var ret_ = this.n.n("autofocusList");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("autofocusList", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "ah", {
        get: function () {
            var ret_ = this.n.n("label");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("label", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "aj", {
        get: function () {
            var ret_ = this.n.n("placeholder");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("placeholder", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "ak", {
        get: function () {
            var ret_ = this.n.n("placeholderSearch");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("placeholderSearch", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "v", {
        get: function () {
            var ret_ = this.n.n("open");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("open", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "al", {
        get: function () {
            var ret_ = this.n.n("valueKey");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("valueKey", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "af", {
        get: function () {
            var ret_ = this.n.n("displayKey");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("displayKey", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "ag", {
        get: function () {
            var ret_ = this.n.n("groupKey");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("groupKey", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "f", {
        get: function () {
            var ret_ = this.n.n("groupSorting");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(GroupingDirection_$type, EnumUtil.getEnumValue(GroupingDirection_$type, this.n.f(GroupingDirection_$type, ret_)));
            return EnumUtil.getEnumValue(GroupingDirection_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(GroupingDirection_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.n.w("groupSorting", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "e", {
        get: function () {
            var ret_ = this.n.m("filteringOptions", function (a) { return new FilteringOptions(); });
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("filteringOptions", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "q", {
        get: function () {
            var ret_ = this.n.n("caseSensitiveIcon");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("caseSensitiveIcon", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "s", {
        get: function () {
            var ret_ = this.n.n("disableFiltering");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("disableFiltering", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "c", {
        get: function () {
            var ret_ = this.n.n("value");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("value", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "b", {
        get: function () {
            var ret_ = this.n.n("selection");
            return ret_;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "r", {
        get: function () {
            var ret_ = this.n.n("disabled");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("disabled", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "x", {
        get: function () {
            var ret_ = this.n.n("required");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("required", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "ai", {
        get: function () {
            var ret_ = this.n.n("name");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("name", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Combo.prototype, "u", {
        get: function () {
            var ret_ = this.n.n("invalid");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.n.w("invalid", value_);
        },
        enumerable: false,
        configurable: true
    });
    Combo.prototype.changeChanged = function () {
        var _this = this;
        if (this.change != null) {
            this.n.s("change", function (a) { return _this.change(_this, ComboChangeEventArgs.a(a)); });
        }
        else {
            this.n.v("change");
        }
    };
    Combo.prototype.focusChanged = function () {
        var _this = this;
        if (this.focus != null) {
            this.n.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
        }
        else {
            this.n.v("focus");
        }
    };
    Combo.prototype.blurChanged = function () {
        var _this = this;
        if (this.blur != null) {
            this.n.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
        }
        else {
            this.n.v("blur");
        }
    };
    Combo.prototype.openingChanged = function () {
        var _this = this;
        if (this.opening != null) {
            this.n.s("opening", function (a) { return _this.opening(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.n.v("opening");
        }
    };
    Combo.prototype.openedChanged = function () {
        var _this = this;
        if (this.opened != null) {
            this.n.s("opened", function (a) { return _this.opened(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.n.v("opened");
        }
    };
    Combo.prototype.closingChanged = function () {
        var _this = this;
        if (this.closing != null) {
            this.n.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.n.v("closing");
        }
    };
    Combo.prototype.closedChanged = function () {
        var _this = this;
        if (this.closed != null) {
            this.n.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.n.v("closed");
        }
    };
    Combo.prototype.as = function () {
        this.nativeElement.connectedCallback();
    };
    Combo.prototype.av = function (a) {
        this.nativeElement.focus(this.n.i(a));
    };
    Combo.prototype.an = function () {
        this.nativeElement.blur();
    };
    Combo.prototype.az = function (a) {
        this.nativeElement.select(this.n.i(a));
    };
    Combo.prototype.at = function (a) {
        this.nativeElement.deselect(this.n.i(a));
    };
    Combo.prototype.y = function () {
        return (this.nativeElement.show());
    };
    Combo.prototype.t = function () {
        return (this.nativeElement.hide());
    };
    Combo.prototype.aa = function () {
        return (this.nativeElement.toggle());
    };
    Combo.prototype.ay = function () {
        this.nativeElement.reportValidity();
    };
    Combo.prototype.ap = function () {
        this.nativeElement.checkValidity();
    };
    Combo.prototype.a0 = function (a) {
        this.nativeElement.setCustomValidity(this.n.i(a));
    };
    Combo.$t = markType(Combo, 'Combo', BaseElement.$);
    return Combo;
}(BaseElement));
export { Combo };
