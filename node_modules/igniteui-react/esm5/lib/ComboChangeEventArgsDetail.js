/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { WCNativeHelper } from "./WCNativeHelper";
import { ComboChangeType_$type } from "./ComboChangeType";
/**
 * @hidden
 */
var ComboChangeEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ComboChangeEventArgsDetail, _super);
    function ComboChangeEventArgsDetail() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = new WCNativeHelper();
        _this.f = null;
        return _this;
    }
    Object.defineProperty(ComboChangeEventArgsDetail.prototype, "b", {
        get: function () {
            var ret_ = this.e.n("newValue");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("newValue", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ComboChangeEventArgsDetail.prototype, "a", {
        get: function () {
            var ret_ = this.e.n("items");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("items", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ComboChangeEventArgsDetail.prototype, "c", {
        get: function () {
            var ret_ = this.e.n("type");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(ComboChangeType_$type, EnumUtil.getEnumValue(ComboChangeType_$type, this.e.f(ComboChangeType_$type, ret_)));
            return EnumUtil.getEnumValue(ComboChangeType_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(ComboChangeType_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("type", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ComboChangeEventArgsDetail.prototype, "e", {
        get: function () {
            return this.d;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ComboChangeEventArgsDetail.prototype, "nativeElement", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.d.o = this.f;
        },
        enumerable: false,
        configurable: true
    });
    ComboChangeEventArgsDetail.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    ComboChangeEventArgsDetail.$t = markType(ComboChangeEventArgsDetail, 'ComboChangeEventArgsDetail');
    return ComboChangeEventArgsDetail;
}(Base));
export { ComboChangeEventArgsDetail };
