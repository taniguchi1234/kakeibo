import { __assign, __extends } from "tslib";
import * as React from 'react';
import { IgrBaseOptionLike } from "./igr-base-option-like";
import { SelectItem } from "./SelectItem";
import { IgcSelectItemComponent, defineComponents } from "igniteui-webcomponents";
import { isValidProp } from "igniteui-react-core";
/**
 * Represents an item in a select list.
*/
var IgrSelectItem = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrSelectItem, _super);
    function IgrSelectItem(props) {
        var _this = _super.call(this, props) || this;
        _this._getMainRef = _this._getMainRef.bind(_this);
        defineComponents(IgcSelectItemComponent);
        return _this;
    }
    IgrSelectItem.prototype.createImplementation = function () {
        return new SelectItem();
    };
    Object.defineProperty(IgrSelectItem.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrSelectItem.prototype.componentDidMount = function () {
        this.i.nativeElement = this._elRef;
        this.mounted = true;
        _super.prototype.componentDidMount.call(this);
    };
    IgrSelectItem.prototype.render = function () {
        var _this = this;
        var nativePropsName = Object.keys(this.props).filter(function (prop) { return !isValidProp(_this, prop) && prop !== "originalRef"; });
        var nativeProps = {};
        nativePropsName.forEach(function (propName) {
            nativeProps[propName] = _this.props[propName];
        });
        var propChildren = this.props.children;
        var children = [];
        React.Children.forEach(propChildren, function (ch) {
            children.push(React.cloneElement(ch));
        });
        this._portalManager.onRender(children);
        var style = {};
        if (this.props.style) {
            style = this.props.style;
        }
        var div = React.createElement("igc-select-item", __assign(__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
        return div;
    };
    IgrSelectItem.prototype._getMainRef = function (ref) {
        this._elRef = ref;
    };
    return IgrSelectItem;
}(IgrBaseOptionLike));
export { IgrSelectItem };
