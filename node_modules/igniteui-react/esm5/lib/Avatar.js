/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { AvatarShape_$type } from "./AvatarShape";
/**
 * @hidden
 */
var Avatar = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Avatar, _super);
    function Avatar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = new WCNativeHelper();
        _this.d = null;
        return _this;
    }
    Object.defineProperty(Avatar.prototype, "c", {
        get: function () {
            return this.b;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Avatar.prototype, "nativeElement", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            this.d = a;
            this.b.o = this.d;
        },
        enumerable: false,
        configurable: true
    });
    Avatar.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(Avatar.prototype, "h", {
        get: function () {
            var ret_ = this.c.n("src");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.c.w("src", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Avatar.prototype, "f", {
        get: function () {
            var ret_ = this.c.n("alt");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.c.w("alt", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Avatar.prototype, "g", {
        get: function () {
            var ret_ = this.c.n("initials");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.c.w("initials", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Avatar.prototype, "a", {
        get: function () {
            var ret_ = this.c.n("shape");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(AvatarShape_$type, EnumUtil.getEnumValue(AvatarShape_$type, this.c.f(AvatarShape_$type, ret_)));
            return EnumUtil.getEnumValue(AvatarShape_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(AvatarShape_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.c.w("shape", value_);
        },
        enumerable: false,
        configurable: true
    });
    Avatar.$t = markType(Avatar, 'Avatar', BaseElement.$);
    return Avatar;
}(BaseElement));
export { Avatar };
