import { __assign, __extends } from "tslib";
import * as React from 'react';
import { delegateCombine, delegateRemove } from "igniteui-react-core";
import { IgrVoidEventArgs } from "./igr-void-event-args";
import { IgrBaseAlertLike } from "./igr-base-alert-like";
import { Snackbar } from "./Snackbar";
import { IgcSnackbarComponent, defineComponents } from "igniteui-webcomponents";
import { isValidProp } from "igniteui-react-core";
/**
 * A snackbar component is used to provide feedback about an operation
 * by showing a brief message at the bottom of the screen.
*/
var IgrSnackbar = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrSnackbar, _super);
    function IgrSnackbar(props) {
        var _this = _super.call(this, props) || this;
        _this._action = null;
        _this._action_wrapped = null;
        _this._getMainRef = _this._getMainRef.bind(_this);
        defineComponents(IgcSnackbarComponent);
        return _this;
    }
    IgrSnackbar.prototype.createImplementation = function () {
        return new Snackbar();
    };
    Object.defineProperty(IgrSnackbar.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrSnackbar.prototype.componentDidMount = function () {
        this.i.nativeElement = this._elRef;
        this.mounted = true;
        _super.prototype.componentDidMount.call(this);
    };
    IgrSnackbar.prototype.render = function () {
        var _this = this;
        var nativePropsName = Object.keys(this.props).filter(function (prop) { return !isValidProp(_this, prop) && prop !== "originalRef"; });
        var nativeProps = {};
        nativePropsName.forEach(function (propName) {
            nativeProps[propName] = _this.props[propName];
        });
        var propChildren = this.props.children;
        var children = [];
        React.Children.forEach(propChildren, function (ch) {
            children.push(React.cloneElement(ch));
        });
        this._portalManager.onRender(children);
        var style = {};
        if (this.props.style) {
            style = this.props.style;
        }
        var div = React.createElement("igc-snackbar", __assign(__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
        return div;
    };
    IgrSnackbar.prototype._getMainRef = function (ref) {
        this._elRef = ref;
    };
    Object.defineProperty(IgrSnackbar.prototype, "actionText", {
        /**
         * The snackbar action button.
        */
        get: function () {
            return this.i.n;
        },
        set: function (v) {
            this.i.n = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrSnackbar.prototype, "action", {
        get: function () {
            return this._action;
        },
        set: function (ev) {
            var _this = this;
            if (this._action_wrapped !== null) {
                this.i.action = delegateRemove(this.i.action, this._action_wrapped);
                this._action_wrapped = null;
                this._action = null;
            }
            this._action = ev;
            this._action_wrapped = function (o, e) {
                var outerArgs = new IgrVoidEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeAction) {
                    _this.beforeAction(_this, outerArgs);
                }
                if (_this._action) {
                    _this._action(_this, outerArgs);
                }
            };
            this.i.action = delegateCombine(this.i.action, this._action_wrapped);
            if (this.i.actionChanged) {
                this.i.actionChanged();
            }
            ;
        },
        enumerable: false,
        configurable: true
    });
    return IgrSnackbar;
}(IgrBaseAlertLike));
export { IgrSnackbar };
