/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { SliderBaseTickOrientation_$type } from "./SliderBaseTickOrientation";
import { TickLabelRotation_$type } from "./TickLabelRotation";
/**
 * @hidden
 */
var SliderBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SliderBase, _super);
    function SliderBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = new WCNativeHelper();
        _this.r = null;
        return _this;
    }
    Object.defineProperty(SliderBase.prototype, "e", {
        get: function () {
            return this.d;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "nativeElement", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.d.o = this.r;
        },
        enumerable: false,
        configurable: true
    });
    SliderBase.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(SliderBase.prototype, "m", {
        get: function () {
            var ret_ = this.e.n("min");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("min", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "l", {
        get: function () {
            var ret_ = this.e.n("max");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("max", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "k", {
        get: function () {
            var ret_ = this.e.n("lowerBound");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("lowerBound", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "q", {
        get: function () {
            var ret_ = this.e.n("upperBound");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("upperBound", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "f", {
        get: function () {
            var ret_ = this.e.n("disabled");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("disabled", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "g", {
        get: function () {
            var ret_ = this.e.n("discreteTrack");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("discreteTrack", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "j", {
        get: function () {
            var ret_ = this.e.n("hideTooltip");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("hideTooltip", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "p", {
        get: function () {
            var ret_ = this.e.n("step");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("step", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "n", {
        get: function () {
            var ret_ = this.e.n("primaryTicks");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("primaryTicks", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "o", {
        get: function () {
            var ret_ = this.e.n("secondaryTicks");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("secondaryTicks", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "b", {
        get: function () {
            var ret_ = this.e.n("tickOrientation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(SliderBaseTickOrientation_$type, EnumUtil.getEnumValue(SliderBaseTickOrientation_$type, this.e.f(SliderBaseTickOrientation_$type, ret_)));
            return EnumUtil.getEnumValue(SliderBaseTickOrientation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(SliderBaseTickOrientation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("tickOrientation", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "h", {
        get: function () {
            var ret_ = this.e.n("hidePrimaryLabels");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("hidePrimaryLabels", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "i", {
        get: function () {
            var ret_ = this.e.n("hideSecondaryLabels");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("hideSecondaryLabels", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "t", {
        get: function () {
            var ret_ = this.e.n("locale");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("locale", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "u", {
        get: function () {
            var ret_ = this.e.n("valueFormat");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("valueFormat", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliderBase.prototype, "c", {
        get: function () {
            var ret_ = this.e.n("tickLabelRotation");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(TickLabelRotation_$type, EnumUtil.getEnumValue(TickLabelRotation_$type, this.e.f(TickLabelRotation_$type, ret_)));
            return EnumUtil.getEnumValue(TickLabelRotation_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(TickLabelRotation_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("tickLabelRotation", value_);
        },
        enumerable: false,
        configurable: true
    });
    SliderBase.prototype.v = function () {
        this.nativeElement.connectedCallback();
    };
    Object.defineProperty(SliderBase.prototype, "a", {
        get: function () {
            var ret_ = this.e.n("valueFormatOptions");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.e.w("valueFormatOptions", value_);
        },
        enumerable: false,
        configurable: true
    });
    SliderBase.$t = markType(SliderBase, 'SliderBase', BaseElement.$);
    return SliderBase;
}(BaseElement));
export { SliderBase };
