/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, IList_$type, typeCast, String_$type, Boolean_$type, Delegate_$type, Type, getBoxIfEnum, markType, EnumBox, EnumUtil, Number_$type, runOn, delegateCombine, fromEn } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { toSpinal } from "igniteui-react-core";
import { Tuple$2 } from "igniteui-react-core";
import { INotifyCollectionChanged_$type } from "igniteui-react-core";
/**
 * @hidden
 */
var WCNativeHelper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WCNativeHelper, _super);
    function WCNativeHelper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.e = null;
        _this.a = new Dictionary$2(String_$type, Delegate_$type, 0);
        _this.b = new Dictionary$2(String_$type, Delegate_$type, 0);
        _this.d = new Dictionary$2(String_$type, Base.$, 0);
        _this.c = new Dictionary$2(String_$type, Base.$, 0);
        return _this;
    }
    Object.defineProperty(WCNativeHelper.prototype, "o", {
        get: function () {
            return this.e;
        },
        set: function (a) {
            var val_ = a;
            if ((val_.___wcElement)) {
                val_ = val_.___wcElement;
            }
            this.e = val_;
        },
        enumerable: false,
        configurable: true
    });
    WCNativeHelper.prototype.n = function (propertyName_) {
        var target_ = this.o;
        var a = target_[propertyName_];
        return a;
    };
    WCNativeHelper.prototype.m = function (propertyName_, a) {
        var target_ = this.o;
        var b = target_[propertyName_];
        b = this.g(b, a);
        return b;
    };
    WCNativeHelper.prototype.k = function (propertyName_, a, b) {
        var target_ = this.o;
        var c = target_[propertyName_];
        if (c == null || c == undefined) {
            return null;
        }
        c = this.g(c, b);
        if (!(typeCast(IList_$type, c) !== null)) {
            var d = a(c);
            var e = c;
            for (var f = 0; f < e.length; f++) {
                d.add(e[f]);
            }
            c = d;
        }
        return c;
    };
    WCNativeHelper.prototype.l = function (propertyName_, a, b, c) {
        var target_ = this.o;
        var d = target_[propertyName_];
        if (d == null || d == undefined || !(typeCast(IList_$type, d) !== null)) {
            d = a(null);
        }
        var e = new List$1(String_$type, 0);
        for (var g = 0; g < c.length; g++) {
            var f = c[g];
            var h = "igc-" + toSpinal(f);
            e.add(h);
        }
        var i = new HtmlMarkupHelperCollection(target_, "igc", function (j) { return e.contains((j.tagName).toLowerCase()); }, d);
        return d;
    };
    WCNativeHelper.prototype.g = function (obj_, a) {
        return WCNativeHelper.h(obj_, a);
    };
    WCNativeHelper.h = function (obj_, a) {
        if (obj_ == null || obj_ == undefined) {
            return null;
        }
        if (obj_ != null) {
            if ((obj_.___wcElement)) {
                obj_ = obj_.___wcElement;
            }
        }
        if (obj_ != null) {
            if ((obj_._implementation) || ((obj_.nativeElement) && (obj_.setNativeElement))) {
                return obj_;
            }
        }
        if (obj_ != null) {
            var arr_ = (Array.isArray(obj_) ? obj_ : null);
            if (arr_ != null) {
                var b = new Array(arr_.length);
                for (var c = 0; c < arr_.length; c++) {
                    b[c] = WCNativeHelper.h(arr_[c], a);
                }
                return b;
            }
        }
        var d = (obj_.externalObject);
        var ext_ = null;
        if (!d) {
            ext_ = a(obj_);
            if (ext_ != obj_) {
                obj_.externalObject = ext_;
                if ((ext_.setNativeElement)) {
                    ext_.setNativeElement(obj_);
                }
                else {
                    return obj_;
                }
            }
        }
        else {
            ext_ = obj_.externalObject;
        }
        return ext_;
    };
    WCNativeHelper.prototype.i = function (obj_) {
        return WCNativeHelper.j(obj_);
    };
    WCNativeHelper.j = function (obj_) {
        if (obj_ == null) {
            return obj_;
        }
        var arr_ = (Array.isArray(obj_) ? obj_ : null);
        if (arr_ != null) {
            var a = new Array(arr_.length);
            for (var b = 0; b < arr_.length; b++) {
                a[b] = WCNativeHelper.j(arr_[b]);
            }
            return a;
        }
        if (obj_ != null && (obj_._implementation)) {
            obj_ = obj_._implementation;
        }
        if (obj_ != null && (obj_.$type) && (obj_.setNativeElement)) {
            obj_ = obj_.nativeElement;
        }
        if ((obj_ && obj_ instanceof EnumBox)) {
            obj_ = WCNativeHelper.camel(obj_.toString());
        }
        if (obj_ != null && (obj_._ngElementStrategy) && (obj_._ngElementStrategy.componentRef) && (obj_._ngElementStrategy.componentRef.instance)) {
            obj_ = obj_._ngElementStrategy.componentRef.instance;
        }
        return obj_;
    };
    WCNativeHelper.prototype.w = function (propertyName_, value_) {
        var target_ = this.o;
        if (typeCast(Boolean_$type, value_) !== null && (target_ instanceof HTMLElement)) {
            var a = (toSpinal(propertyName_));
            var b = value_;
            if (b) {
                target_.setAttribute(propertyName_, "");
            }
            else {
                target_.removeAttribute(propertyName_);
            }
        }
        value_ = this.i(value_);
        if ((value_ && value_ instanceof EnumBox)) {
            value_ = value_.value;
        }
        target_[propertyName_] = value_;
    };
    WCNativeHelper.r = function (a) {
        if (a == null) {
            return a;
        }
        return a.substr(0, 1).toUpperCase() + a.substr(1);
    };
    WCNativeHelper.camel = function (a) {
        if (a == null) {
            return a;
        }
        return a.substr(0, 1).toLowerCase() + a.substr(1);
    };
    WCNativeHelper.getActualName = function (a) {
        return (a.getActualName());
    };
    WCNativeHelper.prototype.s = function (a, b, c) {
        if (c === void 0) {
            c = true;
        }
        var wcName_ = "igc" + WCNativeHelper.r(a);
        if (!c) {
            wcName_ = a;
        }
        var d = null;
        var e = null;
        if (this.a.containsKey(a)) {
            d = this.a.item(a);
            e = this.b.item(a);
        }
        var f = b;
        var target_ = this.o;
        if (d != null) {
            var old_ = e;
            target_.removeEventListener(wcName_, old_);
            this.a.removeItem(a);
            this.b.removeItem(a);
        }
        if (f != null) {
            var nativeHandler_ = function (ev_) {
                var g = null;
                if (ev_ != null) {
                    g = ev_.detail;
                }
                f(g);
            };
            this.a.addItem(a, f);
            this.b.addItem(a, nativeHandler_);
            target_.addEventListener(wcName_, nativeHandler_);
        }
    };
    WCNativeHelper.prototype.t = function (a, b, c) {
        var d = null;
        var e = null;
        if (this.d.containsKey(a)) {
            d = this.d.item(a);
            e = this.c.item(a);
        }
        var f = c;
        var target_ = this.o;
        var g = null;
        if (d != null) {
            var old_ = d;
            this.d.removeItem(a);
            this.c.removeItem(a);
            g = null;
        }
        if (f != null) {
            var nativeTemplate_ = function (args_) {
                var h = (args_.externalObject);
                var ext_ = null;
                if (!h) {
                    ext_ = b(args_);
                    if (ext_ != args_) {
                        args_.externalObject = ext_;
                        ext_.setNativeElement(args_);
                    }
                }
                else {
                    ext_ = args_.externalObject;
                }
                return f(ext_);
            };
            this.u(nativeTemplate_, f);
            this.d.addItem(a, f);
            this.c.addItem(a, nativeTemplate_);
            g = nativeTemplate_;
        }
        this.w(a, g);
    };
    WCNativeHelper.prototype.f = function ($t, a) {
        if (typeof a === 'string') {
            var b = Type.createInstance($t);
            var c = EnumUtil.tryParse$1($t, a, true, b);
            b = c.p2;
            return getBoxIfEnum($t, b);
        }
        return a;
    };
    WCNativeHelper.prototype.u = function (nativeTemplate_, newTemplate_) {
        if ((newTemplate_.___isBridged)) {
            nativeTemplate_.___isBridged = newTemplate_.___isBridged;
            nativeTemplate_.___templateId = newTemplate_.___templateId;
            nativeTemplate_.___containerId = newTemplate_.___containerId;
            nativeTemplate_.___container = newTemplate_.___container;
            nativeTemplate_.___onTemplateInit = newTemplate_.___onTemplateInit;
            nativeTemplate_.___onTemplateTeardown = newTemplate_.___onTemplateTeardown;
            nativeTemplate_.___checkHost = newTemplate_.___checkHost;
            nativeTemplate_.___onTemplateContextChanged = newTemplate_.___onTemplateContextChanged;
        }
    };
    WCNativeHelper.prototype.v = function (a) {
        var wcName_ = "igc" + WCNativeHelper.r(a);
        var target_ = this.o;
        var b = null;
        var c = null;
        if (this.a.containsKey(a)) {
            b = this.a.item(a);
            c = this.b.item(a);
        }
        if (b != null) {
            var old_ = c;
            target_.removeEventListener(wcName_, old_);
            this.a.removeItem(a);
            this.b.removeItem(a);
        }
    };
    WCNativeHelper.$t = markType(WCNativeHelper, 'WCNativeHelper');
    return WCNativeHelper;
}(Base));
export { WCNativeHelper };
/**
 * @hidden
 */
var HtmlMarkupHelperCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HtmlMarkupHelperCollection, _super);
    function HtmlMarkupHelperCollection(a, b, c, d) {
        var _this = _super.call(this) || this;
        _this._target = null;
        _this.e = null;
        _this.d = null;
        _this._target = a;
        _this.e = c;
        _this.d = d;
        _this.h();
        if (typeCast(INotifyCollectionChanged_$type, _this.d) !== null) {
            var e = _this.d;
            e.collectionChanged = delegateCombine(e.collectionChanged, runOn(_this, _this.i));
        }
        return _this;
    }
    Object.defineProperty(HtmlMarkupHelperCollection.prototype, "b", {
        get: function () {
            var a = Array.from(this._target.children);
            return a;
        },
        enumerable: false,
        configurable: true
    });
    HtmlMarkupHelperCollection.prototype.a = function () {
        return this.c(this._target, 1);
    };
    HtmlMarkupHelperCollection.prototype.c = function (a, b) {
        if (b === void 0) {
            b = 0;
        }
        var c = new List$1(Tuple$2.$.specialize(Number_$type, Base.$), 0);
        var d = (Array.from((a === null || a === void 0 ? void 0 : a.children) || []));
        for (var e = 0; e < d.length; e++) {
            var f = d[e];
            if (this.e(f)) {
                c.add(new Tuple$2(Number_$type, Base.$, e, f));
            }
            else if (b >= 1) {
                var g = getComputedStyle(f).getPropertyValue("display");
                if (f.tagName.toLowerCase() == "div" && g != null && g.toLowerCase() == "none") {
                    var h = this.c(f, b - 1);
                    c.o(h);
                }
            }
        }
        return c.toArray();
    };
    HtmlMarkupHelperCollection.prototype.k = function () {
        var a = this.a();
        for (var b = 0; b < a.length; b++) {
            a[b].d.remove();
        }
    };
    HtmlMarkupHelperCollection.prototype.n = function (a, b) {
        var c = this.a();
        if (a > c.length - 1 || a < 0) {
            return;
        }
        c[a].d.replaceWith(b);
        return;
    };
    HtmlMarkupHelperCollection.prototype.m = function (a) {
        var b = this.a();
        if (a > b.length - 1 || a < 0) {
            return;
        }
        var c = b[a];
        c.d.remove();
    };
    HtmlMarkupHelperCollection.prototype.l = function (a, b) {
        var c = this.a();
        if (c.length == 0) {
            this._target.append(b);
        }
        else {
            if (c.length - 1 < a) {
                var d = c[c.length - 1].d;
                d.after(b);
                return;
            }
            var e = c[a].d;
            e.after(b);
        }
    };
    HtmlMarkupHelperCollection.prototype.j = function (a) {
        var b = this.a();
        if (b.length == 0) {
            this._target.append(a);
        }
        else {
            var c = b[b.length - 1].d;
            c.after(a);
        }
    };
    HtmlMarkupHelperCollection.prototype.h = function () {
        var a = this.a();
        for (var c = 0; c < a.length; c++) {
            var b = a[c];
            this.d.add(b.d);
        }
    };
    HtmlMarkupHelperCollection.prototype.g = function (a) {
        return WCNativeHelper.j(a);
    };
    HtmlMarkupHelperCollection.prototype.i = function (a, b) {
        var e_1, _a;
        switch (b.action) {
            case 0:
                if (b.newItems != null) {
                    for (var c = 0; c < b.newItems.count; c++) {
                        var d = b.newItems.item(c);
                        this.l(c + b.newStartingIndex, this.g(d));
                    }
                }
                break;
            case 1:
                if (b.oldItems != null) {
                    for (var e = 0; e < b.oldItems.count; e++) {
                        this.m(b.oldStartingIndex);
                    }
                }
                break;
            case 2:
                if (b.oldItems != null) {
                    for (var f = 0; f < b.oldItems.count; f++) {
                        this.m(b.oldStartingIndex);
                    }
                }
                if (b.newItems != null) {
                    for (var g = 0; g < b.newItems.count; g++) {
                        var h = b.newItems.item(g);
                        this.l(g + b.newStartingIndex, this.g(b.newItems.item(g)));
                    }
                }
                break;
            case 4:
                this.k();
                try {
                    for (var _b = __values(fromEn(this.d)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var i = _c.value;
                        var j = i;
                        this.j(this.g(j));
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                break;
        }
    };
    HtmlMarkupHelperCollection.$t = markType(HtmlMarkupHelperCollection, 'HtmlMarkupHelperCollection');
    return HtmlMarkupHelperCollection;
}(Base));
export { HtmlMarkupHelperCollection };
