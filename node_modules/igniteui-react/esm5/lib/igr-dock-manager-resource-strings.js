import { DockManagerResourceStrings as DockManagerResourceStrings_internal } from "./DockManagerResourceStrings";
/**
 * Describes dock manager resource strings.
*/
var IgrDockManagerResourceStrings = /** @class */ /*@__PURE__*/ (function () {
    function IgrDockManagerResourceStrings() {
        this.mounted = false;
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    IgrDockManagerResourceStrings.prototype.createImplementation = function () {
        return new DockManagerResourceStrings_internal();
    };
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "nativeElement", {
        get: function () {
            return this._implementation.nativeElement;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrDockManagerResourceStrings.prototype.onImplementationCreated = function () {
    };
    IgrDockManagerResourceStrings.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    };
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "close", {
        get: function () {
            return this.i.e;
        },
        set: function (v) {
            this.i.e = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "pin", {
        get: function () {
            return this.i.l;
        },
        set: function (v) {
            this.i.l = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "unpin", {
        get: function () {
            return this.i.m;
        },
        set: function (v) {
            this.i.m = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "maximize", {
        get: function () {
            return this.i.g;
        },
        set: function (v) {
            this.i.g = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "minimize", {
        get: function () {
            return this.i.h;
        },
        set: function (v) {
            this.i.h = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "moreOptions", {
        get: function () {
            return this.i.i;
        },
        set: function (v) {
            this.i.i = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "moreTabs", {
        get: function () {
            return this.i.j;
        },
        set: function (v) {
            this.i.j = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "panes", {
        get: function () {
            return this.i.k;
        },
        set: function (v) {
            this.i.k = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrDockManagerResourceStrings.prototype, "documents", {
        get: function () {
            return this.i.f;
        },
        set: function (v) {
            this.i.f = v;
        },
        enumerable: false,
        configurable: true
    });
    IgrDockManagerResourceStrings.prototype.findByName = function (name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        return null;
    };
    IgrDockManagerResourceStrings.prototype.setNativeElement = function (element) {
        this.i.setNativeElement(element);
    };
    return IgrDockManagerResourceStrings;
}());
export { IgrDockManagerResourceStrings };
