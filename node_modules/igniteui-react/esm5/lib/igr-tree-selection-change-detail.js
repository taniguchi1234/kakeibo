import { TreeSelectionChangeDetail as TreeSelectionChangeDetail_internal } from "./TreeSelectionChangeDetail";
import { IgrTreeItem } from "./igr-tree-item";
var IgrTreeSelectionChangeDetail = /** @class */ /*@__PURE__*/ (function () {
    function IgrTreeSelectionChangeDetail() {
        this.mounted = false;
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    IgrTreeSelectionChangeDetail.prototype.createImplementation = function () {
        return new TreeSelectionChangeDetail_internal();
    };
    Object.defineProperty(IgrTreeSelectionChangeDetail.prototype, "nativeElement", {
        get: function () {
            return this._implementation.nativeElement;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrTreeSelectionChangeDetail.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrTreeSelectionChangeDetail.prototype.onImplementationCreated = function () {
    };
    IgrTreeSelectionChangeDetail.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    };
    Object.defineProperty(IgrTreeSelectionChangeDetail.prototype, "newSelection", {
        get: function () {
            if (!this.i.a) {
                return undefined;
            }
            var ret = [];
            for (var i = 0; i < this.i.a.length; i++) {
                var impl = this.i.a[i];
                if (!impl.externalObject) {
                    if (impl instanceof IgrTreeItem) {
                        ret.push(impl);
                        continue;
                    }
                    var e = IgrTreeItem._createFromInternal(impl);
                    e._implementation = impl;
                    impl.externalObject = e;
                }
                ret.push(impl.externalObject);
            }
            return ret;
        },
        set: function (v) {
            var arr = [];
            for (var i = 0; i < v.length; i++) {
                arr.push(v[i].i);
            }
            this.i.a = arr;
        },
        enumerable: false,
        configurable: true
    });
    IgrTreeSelectionChangeDetail.prototype.findByName = function (name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        return null;
    };
    return IgrTreeSelectionChangeDetail;
}());
export { IgrTreeSelectionChangeDetail };
