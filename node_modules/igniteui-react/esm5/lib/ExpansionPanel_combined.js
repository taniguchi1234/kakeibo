/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { Base, enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { ExpansionPanelIndicatorPosition_$type } from "./ExpansionPanelIndicatorPosition";
/**
 * @hidden
 */
var ExpansionPanel = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ExpansionPanel, _super);
    function ExpansionPanel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.f = new WCNativeHelper();
        _this.m = null;
        _this.opening = null;
        _this.opened = null;
        _this.closing = null;
        _this.closed = null;
        return _this;
    }
    Object.defineProperty(ExpansionPanel.prototype, "g", {
        get: function () {
            return this.f;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanel.prototype, "nativeElement", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.f.o = this.m;
        },
        enumerable: false,
        configurable: true
    });
    ExpansionPanel.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(ExpansionPanel.prototype, "j", {
        get: function () {
            var ret_ = this.g.n("open");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.g.w("open", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanel.prototype, "h", {
        get: function () {
            var ret_ = this.g.n("disabled");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.g.w("disabled", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanel.prototype, "e", {
        get: function () {
            var ret_ = this.g.n("indicatorPosition");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(ExpansionPanelIndicatorPosition_$type, EnumUtil.getEnumValue(ExpansionPanelIndicatorPosition_$type, this.g.f(ExpansionPanelIndicatorPosition_$type, ret_)));
            return EnumUtil.getEnumValue(ExpansionPanelIndicatorPosition_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(ExpansionPanelIndicatorPosition_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.g.w("indicatorPosition", value_);
        },
        enumerable: false,
        configurable: true
    });
    ExpansionPanel.prototype.openingChanged = function () {
        var _this = this;
        if (this.opening != null) {
            this.g.s("opening", function (a) { return _this.opening(_this, ExpansionPanelComponentEventArgs.b(a)); });
        }
        else {
            this.g.v("opening");
        }
    };
    ExpansionPanel.prototype.openedChanged = function () {
        var _this = this;
        if (this.opened != null) {
            this.g.s("opened", function (a) { return _this.opened(_this, ExpansionPanelComponentEventArgs.b(a)); });
        }
        else {
            this.g.v("opened");
        }
    };
    ExpansionPanel.prototype.closingChanged = function () {
        var _this = this;
        if (this.closing != null) {
            this.g.s("closing", function (a) { return _this.closing(_this, ExpansionPanelComponentEventArgs.b(a)); });
        }
        else {
            this.g.v("closing");
        }
    };
    ExpansionPanel.prototype.closedChanged = function () {
        var _this = this;
        if (this.closed != null) {
            this.g.s("closed", function (a) { return _this.closed(_this, ExpansionPanelComponentEventArgs.b(a)); });
        }
        else {
            this.g.v("closed");
        }
    };
    ExpansionPanel.prototype.q = function () {
        this.nativeElement.connectedCallback();
    };
    ExpansionPanel.prototype.l = function () {
        return (this.nativeElement.toggle());
    };
    ExpansionPanel.prototype.i = function () {
        return (this.nativeElement.hide());
    };
    ExpansionPanel.prototype.k = function () {
        return (this.nativeElement.show());
    };
    ExpansionPanel.$t = markType(ExpansionPanel, 'ExpansionPanel', BaseElement.$);
    return ExpansionPanel;
}(BaseElement));
export { ExpansionPanel };
/**
 * @hidden
 */
var ExpansionPanelComponentEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ExpansionPanelComponentEventArgs, _super);
    function ExpansionPanelComponentEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        return _this;
    }
    ExpansionPanelComponentEventArgs.b = function (a) {
        return ((function () {
            var $ret = new ExpansionPanelComponentEventArgs();
            $ret.a = a;
            return $ret;
        })());
    };
    ExpansionPanelComponentEventArgs.$t = markType(ExpansionPanelComponentEventArgs, 'ExpansionPanelComponentEventArgs');
    return ExpansionPanelComponentEventArgs;
}(Base));
export { ExpansionPanelComponentEventArgs };
