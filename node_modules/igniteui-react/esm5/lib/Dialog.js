/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { markType } from "igniteui-react-core";
import { VoidEventArgs } from "./VoidEventArgs";
/**
 * @hidden
 */
var Dialog = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Dialog, _super);
    function Dialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = new WCNativeHelper();
        _this.l = null;
        _this.closing = null;
        _this.closed = null;
        return _this;
    }
    Object.defineProperty(Dialog.prototype, "d", {
        get: function () {
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dialog.prototype, "nativeElement", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.c.o = this.l;
        },
        enumerable: false,
        configurable: true
    });
    Dialog.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(Dialog.prototype, "h", {
        get: function () {
            var ret_ = this.d.n("keepOpenOnEscape");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.d.w("keepOpenOnEscape", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dialog.prototype, "e", {
        get: function () {
            var ret_ = this.d.n("closeOnOutsideClick");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.d.w("closeOnOutsideClick", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dialog.prototype, "g", {
        get: function () {
            var ret_ = this.d.n("hideDefaultAction");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.d.w("hideDefaultAction", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dialog.prototype, "i", {
        get: function () {
            var ret_ = this.d.n("open");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.d.w("open", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dialog.prototype, "o", {
        get: function () {
            var ret_ = this.d.n("title");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.d.w("title", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dialog.prototype, "n", {
        get: function () {
            var ret_ = this.d.n("returnValue");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.d.w("returnValue", value_);
        },
        enumerable: false,
        configurable: true
    });
    Dialog.prototype.closingChanged = function () {
        var _this = this;
        if (this.closing != null) {
            this.d.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.d.v("closing");
        }
    };
    Dialog.prototype.closedChanged = function () {
        var _this = this;
        if (this.closed != null) {
            this.d.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
        }
        else {
            this.d.v("closed");
        }
    };
    Dialog.prototype.j = function () {
        return (this.nativeElement.show());
    };
    Dialog.prototype.f = function () {
        return (this.nativeElement.hide());
    };
    Dialog.prototype.k = function () {
        return (this.nativeElement.toggle());
    };
    Dialog.$t = markType(Dialog, 'Dialog', BaseElement.$);
    return Dialog;
}(BaseElement));
export { Dialog };
