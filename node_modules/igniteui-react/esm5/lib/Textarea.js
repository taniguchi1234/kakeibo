/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { TextareaAutocapitalize_$type } from "./TextareaAutocapitalize";
import { TextareaInputMode_$type } from "./TextareaInputMode";
import { TextareaResize_$type } from "./TextareaResize";
import { TextareaWrap_$type } from "./TextareaWrap";
import { ComponentValueChangedEventArgs } from "./ComponentValueChangedEventArgs";
import { VoidEventArgs } from "./VoidEventArgs";
import { SelectionRangeDirection_$type } from "./SelectionRangeDirection";
import { RangeTextSelectMode_$type } from "./RangeTextSelectMode";
/**
 * @hidden
 */
var Textarea = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Textarea, _super);
    function Textarea() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.i = new WCNativeHelper();
        _this.u = null;
        _this.input = null;
        _this.change = null;
        _this.focus = null;
        _this.blur = null;
        return _this;
    }
    Object.defineProperty(Textarea.prototype, "j", {
        get: function () {
            return this.i;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "nativeElement", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.i.o = this.u;
        },
        enumerable: false,
        configurable: true
    });
    Textarea.prototype.setNativeElement = function (a) {
        this.nativeElement = a;
    };
    Object.defineProperty(Textarea.prototype, "w", {
        get: function () {
            var ret_ = this.j.n("autocomplete");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("autocomplete", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "c", {
        get: function () {
            var ret_ = this.j.n("autocapitalize");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(TextareaAutocapitalize_$type, EnumUtil.getEnumValue(TextareaAutocapitalize_$type, this.j.f(TextareaAutocapitalize_$type, ret_)));
            return EnumUtil.getEnumValue(TextareaAutocapitalize_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(TextareaAutocapitalize_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("autocapitalize", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "d", {
        get: function () {
            var ret_ = this.j.n("inputMode");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(TextareaInputMode_$type, EnumUtil.getEnumValue(TextareaInputMode_$type, this.j.f(TextareaInputMode_$type, ret_)));
            return EnumUtil.getEnumValue(TextareaInputMode_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(TextareaInputMode_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("inputMode", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "x", {
        get: function () {
            var ret_ = this.j.n("label");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("label", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "r", {
        get: function () {
            var ret_ = this.j.n("maxLength");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("maxLength", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "s", {
        get: function () {
            var ret_ = this.j.n("minLength");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("minLength", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "m", {
        get: function () {
            var ret_ = this.j.n("outlined");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("outlined", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "z", {
        get: function () {
            var ret_ = this.j.n("placeholder");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("placeholder", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "n", {
        get: function () {
            var ret_ = this.j.n("readOnly");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("readOnly", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "e", {
        get: function () {
            var ret_ = this.j.n("resize");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(TextareaResize_$type, EnumUtil.getEnumValue(TextareaResize_$type, this.j.f(TextareaResize_$type, ret_)));
            return EnumUtil.getEnumValue(TextareaResize_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(TextareaResize_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("resize", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "t", {
        get: function () {
            var ret_ = this.j.n("rows");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("rows", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "aa", {
        get: function () {
            var ret_ = this.j.n("value");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("value", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "p", {
        get: function () {
            var ret_ = this.j.n("spellcheck");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("spellcheck", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "f", {
        get: function () {
            var ret_ = this.j.n("wrap");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(TextareaWrap_$type, EnumUtil.getEnumValue(TextareaWrap_$type, this.j.f(TextareaWrap_$type, ret_)));
            return EnumUtil.getEnumValue(TextareaWrap_$type, ret_);
        },
        set: function (a) {
            var value_ = enumGetBox(TextareaWrap_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.j.w("wrap", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "q", {
        get: function () {
            var ret_ = this.j.n("validateOnly");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("validateOnly", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "k", {
        get: function () {
            var ret_ = this.j.n("disabled");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("disabled", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "o", {
        get: function () {
            var ret_ = this.j.n("required");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("required", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "y", {
        get: function () {
            var ret_ = this.j.n("name");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("name", value_);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Textarea.prototype, "l", {
        get: function () {
            var ret_ = this.j.n("invalid");
            return ret_;
        },
        set: function (a) {
            var value_ = a;
            this.j.w("invalid", value_);
        },
        enumerable: false,
        configurable: true
    });
    Textarea.prototype.inputChanged = function () {
        var _this = this;
        if (this.input != null) {
            this.j.s("input", function (a) { return _this.input(_this, ComponentValueChangedEventArgs.a(a)); });
        }
        else {
            this.j.v("input");
        }
    };
    Textarea.prototype.changeChanged = function () {
        var _this = this;
        if (this.change != null) {
            this.j.s("change", function (a) { return _this.change(_this, ComponentValueChangedEventArgs.a(a)); });
        }
        else {
            this.j.v("change");
        }
    };
    Textarea.prototype.focusChanged = function () {
        var _this = this;
        if (this.focus != null) {
            this.j.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
        }
        else {
            this.j.v("focus");
        }
    };
    Textarea.prototype.blurChanged = function () {
        var _this = this;
        if (this.blur != null) {
            this.j.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
        }
        else {
            this.j.v("blur");
        }
    };
    Textarea.prototype.ae = function () {
        this.nativeElement.connectedCallback();
    };
    Textarea.prototype.af = function () {
        this.nativeElement.disconnectedCallback();
    };
    Textarea.prototype.aj = function () {
        this.nativeElement.select();
    };
    Textarea.prototype.an = function (a, b, c) {
        this.nativeElement.setSelectionRange(this.j.i(a), this.j.i(b), this.j.i(enumGetBox(SelectionRangeDirection_$type, c)));
    };
    Textarea.prototype.am = function (a, b, c, d) {
        this.nativeElement.setRangeText(this.j.i(a), this.j.i(b), this.j.i(c), this.j.i(enumGetBox(RangeTextSelectMode_$type, d)));
    };
    Textarea.prototype.ai = function () {
        this.nativeElement.reportValidity();
    };
    Textarea.prototype.ad = function () {
        this.nativeElement.checkValidity();
    };
    Textarea.prototype.ak = function (a) {
        this.nativeElement.setCustomValidity(this.j.i(a));
    };
    Textarea.$t = markType(Textarea, 'Textarea', BaseElement.$);
    return Textarea;
}(BaseElement));
export { Textarea };
