import { IgrContentPane } from "./igr-content-pane";
import { IgrContentPaneCollection } from "./igr-content-pane-collection";
import { UnpinnedLocation } from "./UnpinnedLocation";
import { PanePinnedEventArgsDetail as PanePinnedEventArgsDetail_internal } from "./PanePinnedEventArgsDetail";
import { ContentChildrenManager } from "igniteui-react-core";
export declare class IgrPanePinnedEventArgsDetail {
    protected createImplementation(): PanePinnedEventArgsDetail_internal;
    protected _implementation: any;
    protected mounted: boolean;
    get nativeElement(): HTMLElement;
    /**
     * @hidden
     */
    get i(): PanePinnedEventArgsDetail_internal;
    protected onImplementationCreated(): void;
    protected _contentChildrenManager: ContentChildrenManager;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets the source pane that triggers the pinned state change.
    */
    get sourcePane(): IgrContentPane;
    set sourcePane(v: IgrContentPane);
    private _panes;
    /**
     * Gets/sets the panes that are about to get pinned/unpinned.
    */
    get panes(): IgrContentPaneCollection;
    set panes(v: IgrContentPaneCollection);
    /**
     * Gets the new pinned value.
    */
    get newValue(): boolean;
    set newValue(v: boolean);
    /**
     * Gets the unpinned location.
    */
    get location(): UnpinnedLocation;
    set location(v: UnpinnedLocation);
    findByName(name: string): any;
    setNativeElement(element: any): void;
}
