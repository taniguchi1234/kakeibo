import * as React from 'react';
import { BaseComboBoxLike } from "./BaseComboBoxLike";
import { ReactRenderer, PortalManager } from "igniteui-react-core";
import { ContentChildrenManager } from "igniteui-react-core";
export declare abstract class IgrBaseComboBoxLike<P extends IIgrBaseComboBoxLikeProps = IIgrBaseComboBoxLikeProps> extends React.Component<P & Omit<React.HTMLAttributes<HTMLElement>, keyof P>, {}> {
    protected createImplementation(): BaseComboBoxLike;
    protected _implementation: any;
    protected mounted: boolean;
    get nativeElement(): HTMLElement;
    /**
     * @hidden
     */
    get i(): BaseComboBoxLike; /**
                                 * @hidden
                                 */
    static _createFromInternal(internal: any): IgrBaseComboBoxLike;
    protected _renderer: ReactRenderer;
    protected _portalManager: PortalManager;
    protected onImplementationCreated(): void;
    protected _contentChildrenManager: ContentChildrenManager;
    constructor(props: P & Omit<React.HTMLAttributes<HTMLElement>, keyof P>);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): any;
    get emitEvent(): any;
    set emitEvent(v: any);
    /**
     * Whether the component dropdown should be kept open on selection.
    */
    get keepOpenOnSelect(): boolean;
    set keepOpenOnSelect(v: boolean);
    /**
     * Whether the component dropdown should be kept open on clicking outside of it.
    */
    get keepOpenOnOutsideClick(): boolean;
    set keepOpenOnOutsideClick(v: boolean);
    /**
     * Sets the open state of the component.
    */
    get open(): boolean;
    set open(v: boolean);
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected get hasUserValues(): Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    setNativeElement(element: any): void;
    /**
     * Shows the component.
    
    */
    show(): boolean;
    /**
     * Hides the component.
    
    */
    hide(): boolean;
    /**
     * Toggles the open state of the component.
    
    */
    toggle(): boolean;
}
export interface IIgrBaseComboBoxLikeProps {
    children?: React.ReactNode;
    id?: string | undefined;
    className?: string | undefined;
    style?: React.CSSProperties | undefined;
    emitEvent?: any;
    /**
     * Whether the component dropdown should be kept open on selection.
    */
    keepOpenOnSelect?: boolean | string;
    /**
     * Whether the component dropdown should be kept open on clicking outside of it.
    */
    keepOpenOnOutsideClick?: boolean | string;
    /**
     * Sets the open state of the component.
    */
    open?: boolean | string;
}
