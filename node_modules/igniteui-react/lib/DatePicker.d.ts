import { BaseComboBoxLike } from "./BaseComboBoxLike";
import { Type } from "igniteui-react-core";
import { DatePickerMode } from "./DatePickerMode";
import { DatePickerHeaderOrientation } from "./DatePickerHeaderOrientation";
import { DatePickerOrientation } from "./DatePickerOrientation";
import { IDateRangeDescriptor } from "./IDateRangeDescriptor";
import { CalendarResourceStrings } from "./CalendarResourceStrings";
import { WeekDays } from "./WeekDays";
import { VoidEventArgs } from "./VoidEventArgs";
import { ComponentDateValueChangedEventArgs } from "./ComponentDateValueChangedEventArgs";
import { DatePart } from "./DatePart";
import { SelectionRangeDirection } from "./SelectionRangeDirection";
import { RangeTextSelectMode } from "./RangeTextSelectMode";
/**
 * @hidden
 */
export declare class DatePicker extends BaseComboBoxLike {
    static $t: Type;
    get ap(): string;
    set ap(a: string);
    get s(): DatePickerMode;
    set s(a: DatePickerMode);
    get ad(): boolean;
    set ad(a: boolean);
    get af(): boolean;
    set af(a: boolean);
    get al(): Date;
    set al(a: Date);
    get ai(): Date;
    set ai(a: Date);
    get ak(): Date;
    set ak(a: Date);
    get aj(): Date;
    set aj(a: Date);
    get r(): DatePickerHeaderOrientation;
    set r(a: DatePickerHeaderOrientation);
    get t(): DatePickerOrientation;
    set t(a: DatePickerOrientation);
    get aa(): boolean;
    set aa(a: boolean);
    get ab(): boolean;
    set ab(a: boolean);
    get m(): IDateRangeDescriptor[];
    set m(a: IDateRangeDescriptor[]);
    get n(): IDateRangeDescriptor[];
    set n(a: IDateRangeDescriptor[]);
    get ae(): boolean;
    set ae(a: boolean);
    get as(): string;
    set as(a: string);
    get am(): number;
    set am(a: number);
    get ah(): boolean;
    set ah(a: boolean);
    get an(): string;
    set an(a: string);
    get ao(): string;
    set ao(a: string);
    get aq(): string;
    set aq(a: string);
    get at(): string;
    set at(a: string);
    get o(): CalendarResourceStrings;
    set o(a: CalendarResourceStrings);
    get y(): WeekDays;
    set y(a: WeekDays);
    get z(): boolean;
    set z(a: boolean);
    get ag(): boolean;
    set ag(a: boolean);
    get ar(): string;
    set ar(a: string);
    get ac(): boolean;
    set ac(a: boolean);
    opening: (sender: any, args: VoidEventArgs) => void;
    openingChanged(): void;
    opened: (sender: any, args: VoidEventArgs) => void;
    openedChanged(): void;
    closing: (sender: any, args: VoidEventArgs) => void;
    closingChanged(): void;
    closed: (sender: any, args: VoidEventArgs) => void;
    closedChanged(): void;
    change: (sender: any, args: ComponentDateValueChangedEventArgs) => void;
    changeChanged(): void;
    input: (sender: any, args: ComponentDateValueChangedEventArgs) => void;
    inputChanged(): void;
    az(): void;
    aw(): void;
    a9(a: DatePart, b?: number): void;
    a8(a: DatePart, b?: number): void;
    a4(): void;
    a7(a: number, b: number, c: SelectionRangeDirection): void;
    a6(a: string, b: number, c: number, d: RangeTextSelectMode): void;
    a3(): void;
    av(): void;
    a5(a: string): void;
}
