import * as React from 'react';
import { StyleVariant } from "./StyleVariant";
import { ProgressBase } from "./ProgressBase";
import { ReactRenderer, PortalManager } from "igniteui-react-core";
import { ContentChildrenManager } from "igniteui-react-core";
export declare abstract class IgrProgressBase<P extends IIgrProgressBaseProps = IIgrProgressBaseProps> extends React.Component<P & Omit<React.HTMLAttributes<HTMLElement>, keyof P>, {}> {
    protected createImplementation(): ProgressBase;
    protected _implementation: any;
    protected mounted: boolean;
    get nativeElement(): HTMLElement;
    /**
     * @hidden
     */
    get i(): ProgressBase; /**
                                 * @hidden
                                 */
    static _createFromInternal(internal: any): IgrProgressBase;
    protected _renderer: ReactRenderer;
    protected _portalManager: PortalManager;
    protected onImplementationCreated(): void;
    protected _contentChildrenManager: ContentChildrenManager;
    constructor(props: P & Omit<React.HTMLAttributes<HTMLElement>, keyof P>);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): any;
    /**
     * Maximum value of the control.
    */
    get max(): number;
    set max(v: number);
    /**
     * The value of the control.
    */
    get value(): number;
    set value(v: number);
    /**
     * The variant of the control.
    */
    get variant(): StyleVariant;
    set variant(v: StyleVariant);
    /**
     * Animation duration in milliseconds.
    */
    get animationDuration(): number;
    set animationDuration(v: number);
    /**
     * The indeterminate state of the control.
    */
    get indeterminate(): boolean;
    set indeterminate(v: boolean);
    /**
     * Shows/hides the label of the control.
    */
    get hideLabel(): boolean;
    set hideLabel(v: boolean);
    /**
     * Format string for the default label of the control.
     * Placeholders:
     * {0} - current value of the control.
     * {1} - max value of the control.
    */
    get labelFormat(): string;
    set labelFormat(v: string);
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected get hasUserValues(): Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    setNativeElement(element: any): void;
    connectedCallback(): void;
}
export interface IIgrProgressBaseProps {
    children?: React.ReactNode;
    id?: string | undefined;
    className?: string | undefined;
    style?: React.CSSProperties | undefined;
    /**
     * Maximum value of the control.
    */
    max?: number | string;
    /**
     * The value of the control.
    */
    value?: number | string;
    /**
     * The variant of the control.
    */
    variant?: StyleVariant | string;
    /**
     * Animation duration in milliseconds.
    */
    animationDuration?: number | string;
    /**
     * The indeterminate state of the control.
    */
    indeterminate?: boolean | string;
    /**
     * Shows/hides the label of the control.
    */
    hideLabel?: boolean | string;
    /**
     * Format string for the default label of the control.
     * Placeholders:
     * {0} - current value of the control.
     * {1} - max value of the control.
    */
    labelFormat?: string;
}
