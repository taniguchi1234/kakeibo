import { Base, Type } from "igniteui-react-core";
import { WCNativeHelper } from "./WCNativeHelper";
import { DockManagerPaneType } from "./DockManagerPaneType";
import { UnpinnedLocation } from "./UnpinnedLocation";
import { ObservableCollection$1 } from "igniteui-react-core";
import { SplitPaneOrientation } from "./SplitPaneOrientation";
import { DockManagerPoint } from "./DockManagerPoint";
/**
 * @hidden
 */
export declare abstract class DockManagerPane extends Base {
    static $t: Type;
    private ___mustPassByValue;
    protected abstract b(): WCNativeHelper;
    get d(): string;
    set d(a: string);
    static createFromNative(native_: any): DockManagerPane;
}
/**
 * @hidden
 */
export declare class DocumentHost extends DockManagerPane {
    static $t: Type;
    private g;
    protected get h(): WCNativeHelper;
    private j;
    protected get nativeElement(): any;
    protected set nativeElement(a: any);
    setNativeElement(a: any): void;
    get l(): string;
    set l(a: string);
    get e(): DockManagerPaneType;
    set e(a: DockManagerPaneType);
    get f(): SplitPane;
    set f(a: SplitPane);
    get i(): number;
    set i(a: number);
    protected b(): WCNativeHelper;
}
/**
 * @hidden
 */
export declare class TabGroupPane extends DockManagerPane {
    static $t: Type;
    private g;
    protected get h(): WCNativeHelper;
    private m;
    protected get nativeElement(): any;
    protected set nativeElement(a: any);
    setNativeElement(a: any): void;
    get o(): string;
    set o(a: string);
    get f(): DockManagerPaneType;
    set f(a: DockManagerPaneType);
    get e(): ContentPaneCollection;
    get l(): number;
    set l(a: number);
    get k(): number;
    set k(a: number);
    get i(): boolean;
    set i(a: boolean);
    get j(): boolean;
    set j(a: boolean);
    protected b(): WCNativeHelper;
}
/**
 * @hidden
 */
export declare class ContentPane extends DockManagerPane {
    static $t: Type;
    protected b(): WCNativeHelper;
    private g;
    protected get h(): WCNativeHelper;
    private v;
    protected get nativeElement(): any;
    protected set nativeElement(a: any);
    setNativeElement(a: any): void;
    get ab(): string;
    set ab(a: string);
    get e(): DockManagerPaneType;
    set e(a: DockManagerPaneType);
    get x(): string;
    set x(a: string);
    get z(): string;
    set z(a: string);
    get aa(): string;
    set aa(a: string);
    get ac(): string;
    set ac(a: string);
    get ad(): string;
    set ad(a: string);
    get y(): string;
    set y(a: string);
    get t(): number;
    set t(a: number);
    get j(): boolean;
    set j(a: boolean);
    get m(): boolean;
    set m(a: boolean);
    get n(): boolean;
    set n(a: boolean);
    get k(): boolean;
    set k(a: boolean);
    get i(): boolean;
    set i(a: boolean);
    get l(): boolean;
    set l(a: boolean);
    get u(): number;
    set u(a: number);
    get s(): boolean;
    set s(a: boolean);
    get r(): boolean;
    set r(a: boolean);
    get f(): UnpinnedLocation;
    set f(a: UnpinnedLocation);
    get q(): boolean;
    set q(a: boolean);
    get o(): boolean;
    set o(a: boolean);
    get p(): boolean;
    set p(a: boolean);
}
/**
 * @hidden
 */
export declare class ContentPaneCollection extends ObservableCollection$1<ContentPane> {
    static $t: Type;
    constructor();
}
/**
 * @hidden
 */
export declare class SplitPane extends DockManagerPane {
    static $t: Type;
    protected b(): WCNativeHelper;
    private i;
    protected get j(): WCNativeHelper;
    private q;
    protected get nativeElement(): any;
    protected set nativeElement(a: any);
    setNativeElement(a: any): void;
    get s(): string;
    set s(a: string);
    get f(): DockManagerPaneType;
    set f(a: DockManagerPaneType);
    get h(): SplitPaneOrientation;
    set h(a: SplitPaneOrientation);
    get e(): DockManagerPaneCollection;
    get p(): number;
    set p(a: number);
    get g(): DockManagerPoint;
    set g(a: DockManagerPoint);
    get o(): number;
    set o(a: number);
    get n(): number;
    set n(a: number);
    get l(): boolean;
    set l(a: boolean);
    get k(): boolean;
    set k(a: boolean);
    get m(): boolean;
    set m(a: boolean);
}
/**
 * @hidden
 */
export declare class DockManagerPaneCollection extends ObservableCollection$1<DockManagerPane> {
    static $t: Type;
    constructor();
}
