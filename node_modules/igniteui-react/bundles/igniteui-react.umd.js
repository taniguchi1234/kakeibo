/*!
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
  */
  
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('react'), require('igniteui-react-core'), require('igniteui-webcomponents'), require('igniteui-dockmanager/loader'), require('lit-html')) :
    typeof define === 'function' && define.amd ? define(['exports', 'tslib', 'react', 'igniteui-react-core', 'igniteui-webcomponents', 'igniteui-dockmanager/loader', 'lit-html'], factory) :
    (global = global || self, factory(global['igniteui-react'] = {}, global.tslib, global.React, global.igniteuiReactCore, global.igniteuiWebcomponents, global.loader, global.litHtml));
}(this, (function (exports, tslib, React, igniteuiReactCore, igniteuiWebcomponents, loader, litHtml) { 'use strict';

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrBaseComboBoxLikeModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrBaseComboBoxLikeModule() {
        }
        IgrBaseComboBoxLikeModule.register = function () {
        };
        return IgrBaseComboBoxLikeModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var CalendarBaseSelection = /*@__PURE__*/ (function (CalendarBaseSelection) {
        CalendarBaseSelection[CalendarBaseSelection["Single"] = 0] = "Single";
        CalendarBaseSelection[CalendarBaseSelection["Multiple"] = 1] = "Multiple";
        CalendarBaseSelection[CalendarBaseSelection["Range"] = 2] = "Range";
        return CalendarBaseSelection;
    })({});
    /**
     * @hidden
     */
    var CalendarBaseSelection_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CalendarBaseSelection', 'Single,0|Multiple,1|Range,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var WeekDays = /*@__PURE__*/ (function (WeekDays) {
        WeekDays[WeekDays["Sunday"] = 0] = "Sunday";
        WeekDays[WeekDays["Monday"] = 1] = "Monday";
        WeekDays[WeekDays["Tuesday"] = 2] = "Tuesday";
        WeekDays[WeekDays["Wednesday"] = 3] = "Wednesday";
        WeekDays[WeekDays["Thursday"] = 4] = "Thursday";
        WeekDays[WeekDays["Friday"] = 5] = "Friday";
        WeekDays[WeekDays["Saturday"] = 6] = "Saturday";
        return WeekDays;
    })({});
    /**
     * @hidden
     */
    var WeekDays_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('WeekDays', 'Sunday,0|Monday,1|Tuesday,2|Wednesday,3|Thursday,4|Friday,5|Saturday,6');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var BaseElement = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(BaseElement, _super);
        function BaseElement() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        BaseElement.$t = igniteuiReactCore.markType(BaseElement, 'BaseElement');
        return BaseElement;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var WCNativeHelper = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(WCNativeHelper, _super);
        function WCNativeHelper() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.e = null;
            _this.a = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Delegate_$type, 0);
            _this.b = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Delegate_$type, 0);
            _this.d = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Base.$, 0);
            _this.c = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Base.$, 0);
            return _this;
        }
        Object.defineProperty(WCNativeHelper.prototype, "o", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var val_ = a;
                if ((val_.___wcElement)) {
                    val_ = val_.___wcElement;
                }
                this.e = val_;
            },
            enumerable: false,
            configurable: true
        });
        WCNativeHelper.prototype.n = function (propertyName_) {
            var target_ = this.o;
            var a = target_[propertyName_];
            return a;
        };
        WCNativeHelper.prototype.m = function (propertyName_, a) {
            var target_ = this.o;
            var b = target_[propertyName_];
            b = this.g(b, a);
            return b;
        };
        WCNativeHelper.prototype.k = function (propertyName_, a, b) {
            var target_ = this.o;
            var c = target_[propertyName_];
            if (c == null || c == undefined) {
                return null;
            }
            c = this.g(c, b);
            if (!(igniteuiReactCore.typeCast(igniteuiReactCore.IList_$type, c) !== null)) {
                var d = a(c);
                var e = c;
                for (var f = 0; f < e.length; f++) {
                    d.add(e[f]);
                }
                c = d;
            }
            return c;
        };
        WCNativeHelper.prototype.l = function (propertyName_, a, b, c) {
            var target_ = this.o;
            var d = target_[propertyName_];
            if (d == null || d == undefined || !(igniteuiReactCore.typeCast(igniteuiReactCore.IList_$type, d) !== null)) {
                d = a(null);
            }
            var e = new igniteuiReactCore.List$1(igniteuiReactCore.String_$type, 0);
            for (var g = 0; g < c.length; g++) {
                var f = c[g];
                var h = "igc-" + igniteuiReactCore.toSpinal(f);
                e.add(h);
            }
            var i = new HtmlMarkupHelperCollection(target_, "igc", function (j) { return e.contains((j.tagName).toLowerCase()); }, d);
            return d;
        };
        WCNativeHelper.prototype.g = function (obj_, a) {
            return WCNativeHelper.h(obj_, a);
        };
        WCNativeHelper.h = function (obj_, a) {
            if (obj_ == null || obj_ == undefined) {
                return null;
            }
            if (obj_ != null) {
                if ((obj_.___wcElement)) {
                    obj_ = obj_.___wcElement;
                }
            }
            if (obj_ != null) {
                if ((obj_._implementation) || ((obj_.nativeElement) && (obj_.setNativeElement))) {
                    return obj_;
                }
            }
            if (obj_ != null) {
                var arr_ = (Array.isArray(obj_) ? obj_ : null);
                if (arr_ != null) {
                    var b = new Array(arr_.length);
                    for (var c = 0; c < arr_.length; c++) {
                        b[c] = WCNativeHelper.h(arr_[c], a);
                    }
                    return b;
                }
            }
            var d = (obj_.externalObject);
            var ext_ = null;
            if (!d) {
                ext_ = a(obj_);
                if (ext_ != obj_) {
                    obj_.externalObject = ext_;
                    if ((ext_.setNativeElement)) {
                        ext_.setNativeElement(obj_);
                    }
                    else {
                        return obj_;
                    }
                }
            }
            else {
                ext_ = obj_.externalObject;
            }
            return ext_;
        };
        WCNativeHelper.prototype.i = function (obj_) {
            return WCNativeHelper.j(obj_);
        };
        WCNativeHelper.j = function (obj_) {
            if (obj_ == null) {
                return obj_;
            }
            var arr_ = (Array.isArray(obj_) ? obj_ : null);
            if (arr_ != null) {
                var a = new Array(arr_.length);
                for (var b = 0; b < arr_.length; b++) {
                    a[b] = WCNativeHelper.j(arr_[b]);
                }
                return a;
            }
            if (obj_ != null && (obj_._implementation)) {
                obj_ = obj_._implementation;
            }
            if (obj_ != null && (obj_.$type) && (obj_.setNativeElement)) {
                obj_ = obj_.nativeElement;
            }
            if ((obj_ && obj_ instanceof igniteuiReactCore.EnumBox)) {
                obj_ = WCNativeHelper.camel(obj_.toString());
            }
            if (obj_ != null && (obj_._ngElementStrategy) && (obj_._ngElementStrategy.componentRef) && (obj_._ngElementStrategy.componentRef.instance)) {
                obj_ = obj_._ngElementStrategy.componentRef.instance;
            }
            return obj_;
        };
        WCNativeHelper.prototype.w = function (propertyName_, value_) {
            var target_ = this.o;
            if (igniteuiReactCore.typeCast(igniteuiReactCore.Boolean_$type, value_) !== null && (target_ instanceof HTMLElement)) {
                var a = (igniteuiReactCore.toSpinal(propertyName_));
                var b = value_;
                if (b) {
                    target_.setAttribute(propertyName_, "");
                }
                else {
                    target_.removeAttribute(propertyName_);
                }
            }
            value_ = this.i(value_);
            if ((value_ && value_ instanceof igniteuiReactCore.EnumBox)) {
                value_ = value_.value;
            }
            target_[propertyName_] = value_;
        };
        WCNativeHelper.r = function (a) {
            if (a == null) {
                return a;
            }
            return a.substr(0, 1).toUpperCase() + a.substr(1);
        };
        WCNativeHelper.camel = function (a) {
            if (a == null) {
                return a;
            }
            return a.substr(0, 1).toLowerCase() + a.substr(1);
        };
        WCNativeHelper.getActualName = function (a) {
            return (a.getActualName());
        };
        WCNativeHelper.prototype.s = function (a, b, c) {
            if (c === void 0) {
                c = true;
            }
            var wcName_ = "igc" + WCNativeHelper.r(a);
            if (!c) {
                wcName_ = a;
            }
            var d = null;
            var e = null;
            if (this.a.containsKey(a)) {
                d = this.a.item(a);
                e = this.b.item(a);
            }
            var f = b;
            var target_ = this.o;
            if (d != null) {
                var old_ = e;
                target_.removeEventListener(wcName_, old_);
                this.a.removeItem(a);
                this.b.removeItem(a);
            }
            if (f != null) {
                var nativeHandler_ = function (ev_) {
                    var g = null;
                    if (ev_ != null) {
                        g = ev_.detail;
                    }
                    f(g);
                };
                this.a.addItem(a, f);
                this.b.addItem(a, nativeHandler_);
                target_.addEventListener(wcName_, nativeHandler_);
            }
        };
        WCNativeHelper.prototype.t = function (a, b, c) {
            var d = null;
            var e = null;
            if (this.d.containsKey(a)) {
                d = this.d.item(a);
                e = this.c.item(a);
            }
            var f = c;
            var target_ = this.o;
            var g = null;
            if (d != null) {
                var old_ = d;
                this.d.removeItem(a);
                this.c.removeItem(a);
                g = null;
            }
            if (f != null) {
                var nativeTemplate_ = function (args_) {
                    var h = (args_.externalObject);
                    var ext_ = null;
                    if (!h) {
                        ext_ = b(args_);
                        if (ext_ != args_) {
                            args_.externalObject = ext_;
                            ext_.setNativeElement(args_);
                        }
                    }
                    else {
                        ext_ = args_.externalObject;
                    }
                    return f(ext_);
                };
                this.u(nativeTemplate_, f);
                this.d.addItem(a, f);
                this.c.addItem(a, nativeTemplate_);
                g = nativeTemplate_;
            }
            this.w(a, g);
        };
        WCNativeHelper.prototype.f = function ($t, a) {
            if (typeof a === 'string') {
                var b = igniteuiReactCore.Type.createInstance($t);
                var c = igniteuiReactCore.EnumUtil.tryParse$1($t, a, true, b);
                b = c.p2;
                return igniteuiReactCore.getBoxIfEnum($t, b);
            }
            return a;
        };
        WCNativeHelper.prototype.u = function (nativeTemplate_, newTemplate_) {
            if ((newTemplate_.___isBridged)) {
                nativeTemplate_.___isBridged = newTemplate_.___isBridged;
                nativeTemplate_.___templateId = newTemplate_.___templateId;
                nativeTemplate_.___containerId = newTemplate_.___containerId;
                nativeTemplate_.___container = newTemplate_.___container;
                nativeTemplate_.___onTemplateInit = newTemplate_.___onTemplateInit;
                nativeTemplate_.___onTemplateTeardown = newTemplate_.___onTemplateTeardown;
                nativeTemplate_.___checkHost = newTemplate_.___checkHost;
                nativeTemplate_.___onTemplateContextChanged = newTemplate_.___onTemplateContextChanged;
            }
        };
        WCNativeHelper.prototype.v = function (a) {
            var wcName_ = "igc" + WCNativeHelper.r(a);
            var target_ = this.o;
            var b = null;
            var c = null;
            if (this.a.containsKey(a)) {
                b = this.a.item(a);
                c = this.b.item(a);
            }
            if (b != null) {
                var old_ = c;
                target_.removeEventListener(wcName_, old_);
                this.a.removeItem(a);
                this.b.removeItem(a);
            }
        };
        WCNativeHelper.$t = igniteuiReactCore.markType(WCNativeHelper, 'WCNativeHelper');
        return WCNativeHelper;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var HtmlMarkupHelperCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(HtmlMarkupHelperCollection, _super);
        function HtmlMarkupHelperCollection(a, b, c, d) {
            var _this = _super.call(this) || this;
            _this._target = null;
            _this.e = null;
            _this.d = null;
            _this._target = a;
            _this.e = c;
            _this.d = d;
            _this.h();
            if (igniteuiReactCore.typeCast(igniteuiReactCore.INotifyCollectionChanged_$type, _this.d) !== null) {
                var e = _this.d;
                e.collectionChanged = igniteuiReactCore.delegateCombine(e.collectionChanged, igniteuiReactCore.runOn(_this, _this.i));
            }
            return _this;
        }
        Object.defineProperty(HtmlMarkupHelperCollection.prototype, "b", {
            get: function () {
                var a = Array.from(this._target.children);
                return a;
            },
            enumerable: false,
            configurable: true
        });
        HtmlMarkupHelperCollection.prototype.a = function () {
            return this.c(this._target, 1);
        };
        HtmlMarkupHelperCollection.prototype.c = function (a, b) {
            if (b === void 0) {
                b = 0;
            }
            var c = new igniteuiReactCore.List$1(igniteuiReactCore.Tuple$2.$.specialize(igniteuiReactCore.Number_$type, igniteuiReactCore.Base.$), 0);
            var d = (Array.from((a === null || a === void 0 ? void 0 : a.children) || []));
            for (var e = 0; e < d.length; e++) {
                var f = d[e];
                if (this.e(f)) {
                    c.add(new igniteuiReactCore.Tuple$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Base.$, e, f));
                }
                else if (b >= 1) {
                    var g = getComputedStyle(f).getPropertyValue("display");
                    if (f.tagName.toLowerCase() == "div" && g != null && g.toLowerCase() == "none") {
                        var h = this.c(f, b - 1);
                        c.o(h);
                    }
                }
            }
            return c.toArray();
        };
        HtmlMarkupHelperCollection.prototype.k = function () {
            var a = this.a();
            for (var b = 0; b < a.length; b++) {
                a[b].d.remove();
            }
        };
        HtmlMarkupHelperCollection.prototype.n = function (a, b) {
            var c = this.a();
            if (a > c.length - 1 || a < 0) {
                return;
            }
            c[a].d.replaceWith(b);
            return;
        };
        HtmlMarkupHelperCollection.prototype.m = function (a) {
            var b = this.a();
            if (a > b.length - 1 || a < 0) {
                return;
            }
            var c = b[a];
            c.d.remove();
        };
        HtmlMarkupHelperCollection.prototype.l = function (a, b) {
            var c = this.a();
            if (c.length == 0) {
                this._target.append(b);
            }
            else {
                if (c.length - 1 < a) {
                    var d = c[c.length - 1].d;
                    d.after(b);
                    return;
                }
                var e = c[a].d;
                e.after(b);
            }
        };
        HtmlMarkupHelperCollection.prototype.j = function (a) {
            var b = this.a();
            if (b.length == 0) {
                this._target.append(a);
            }
            else {
                var c = b[b.length - 1].d;
                c.after(a);
            }
        };
        HtmlMarkupHelperCollection.prototype.h = function () {
            var a = this.a();
            for (var c = 0; c < a.length; c++) {
                var b = a[c];
                this.d.add(b.d);
            }
        };
        HtmlMarkupHelperCollection.prototype.g = function (a) {
            return WCNativeHelper.j(a);
        };
        HtmlMarkupHelperCollection.prototype.i = function (a, b) {
            var e_1, _a;
            switch (b.action) {
                case 0:
                    if (b.newItems != null) {
                        for (var c = 0; c < b.newItems.count; c++) {
                            var d = b.newItems.item(c);
                            this.l(c + b.newStartingIndex, this.g(d));
                        }
                    }
                    break;
                case 1:
                    if (b.oldItems != null) {
                        for (var e = 0; e < b.oldItems.count; e++) {
                            this.m(b.oldStartingIndex);
                        }
                    }
                    break;
                case 2:
                    if (b.oldItems != null) {
                        for (var f = 0; f < b.oldItems.count; f++) {
                            this.m(b.oldStartingIndex);
                        }
                    }
                    if (b.newItems != null) {
                        for (var g = 0; g < b.newItems.count; g++) {
                            var h = b.newItems.item(g);
                            this.l(g + b.newStartingIndex, this.g(b.newItems.item(g)));
                        }
                    }
                    break;
                case 4:
                    this.k();
                    try {
                        for (var _b = tslib.__values(igniteuiReactCore.fromEn(this.d)), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var i = _c.value;
                            var j = i;
                            this.j(this.g(j));
                        }
                    }
                    catch (e_1_1) {
                        e_1 = { error: e_1_1 };
                    }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return))
                                _a.call(_b);
                        }
                        finally {
                            if (e_1)
                                throw e_1.error;
                        }
                    }
                    break;
            }
        };
        HtmlMarkupHelperCollection.$t = igniteuiReactCore.markType(HtmlMarkupHelperCollection, 'HtmlMarkupHelperCollection');
        return HtmlMarkupHelperCollection;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IDateRangeDescriptor_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IDateRangeDescriptor');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DateRangeDescriptor = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DateRangeDescriptor, _super);
        function DateRangeDescriptor() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._rangeType = 0;
            _this._dateRange = null;
            return _this;
        }
        Object.defineProperty(DateRangeDescriptor.prototype, "rangeType", {
            get: function () {
                return this._rangeType;
            },
            set: function (a) {
                this._rangeType = a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateRangeDescriptor.prototype, "dateRange", {
            get: function () {
                return this._dateRange;
            },
            set: function (a) {
                this._dateRange = a;
            },
            enumerable: false,
            configurable: true
        });
        DateRangeDescriptor.$t = igniteuiReactCore.markType(DateRangeDescriptor, 'DateRangeDescriptor', igniteuiReactCore.Base.$, [IDateRangeDescriptor_$type]);
        return DateRangeDescriptor;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalendarBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CalendarBase, _super);
        function CalendarBase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.h = null;
            return _this;
        }
        Object.defineProperty(CalendarBase.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalendarBase.prototype, "nativeElement", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
                this.d.o = this.h;
            },
            enumerable: false,
            configurable: true
        });
        CalendarBase.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(CalendarBase.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("selection");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(CalendarBaseSelection_$type, igniteuiReactCore.EnumUtil.getEnumValue(CalendarBaseSelection_$type, this.e.f(CalendarBaseSelection_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(CalendarBaseSelection_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(CalendarBaseSelection_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("selection", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalendarBase.prototype, "g", {
            get: function () {
                var ret_ = this.e.n("showWeekNumbers");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("showWeekNumbers", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalendarBase.prototype, "f", {
            get: function () {
                var ret_ = this.e.n("weekStart");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(WeekDays_$type, igniteuiReactCore.EnumUtil.getEnumValue(WeekDays_$type, this.e.f(WeekDays_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(WeekDays_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(WeekDays_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("weekStart", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalendarBase.prototype, "j", {
            get: function () {
                var ret_ = this.e.n("locale");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("locale", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalendarBase.prototype, "b", {
            get: function () {
                var ret_ = this.e.m("specialDates", function (a) { return new DateRangeDescriptor(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("specialDates", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalendarBase.prototype, "a", {
            get: function () {
                var ret_ = this.e.m("disabledDates", function (a) { return new DateRangeDescriptor(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("disabledDates", value_);
            },
            enumerable: false,
            configurable: true
        });
        CalendarBase.$t = igniteuiReactCore.markType(CalendarBase, 'CalendarBase', BaseElement.$);
        return CalendarBase;
    }(BaseElement));

    var IgrCalendarBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCalendarBase, _super);
        function IgrCalendarBase(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCalendarBase.prototype.createImplementation = function () {
            return new CalendarBase();
        };
        Object.defineProperty(IgrCalendarBase.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCalendarBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCalendarBase.prototype.onImplementationCreated = function () {
        };
        IgrCalendarBase.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCalendarBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCalendarBase.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-calendar-base", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCalendarBase.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCalendarBase.prototype, "selection", {
            /**
             * Sets the type of selection in the component.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(CalendarBaseSelection_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarBase.prototype, "showWeekNumbers", {
            /**
             * Whether to show the week numbers.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarBase.prototype, "weekStart", {
            /**
             * Gets/Sets the first day of the week.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(WeekDays_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarBase.prototype, "locale", {
            /**
             * Gets/Sets the locale used for formatting and displaying the dates in the component.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarBase.prototype, "specialDates", {
            /**
             * Gets/Sets the special dates for the component.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.b = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarBase.prototype, "disabledDates", {
            /**
             * Gets/Sets the disabled dates for the component.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.a = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarBase.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCalendarBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCalendarBase.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CalendarBase");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCalendarBase.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCalendarBase;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCalendarBaseModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCalendarBaseModule() {
        }
        IgrCalendarBaseModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCalendarBase', IgrCalendarBase);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCalendarBase', IgrCalendarBase);
        };
        return IgrCalendarBaseModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ComponentDataValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ComponentDataValueChangedEventArgs, _super);
        function ComponentDataValueChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        ComponentDataValueChangedEventArgs.a = function (a) {
            return ((function () {
                var $ret = new ComponentDataValueChangedEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        ComponentDataValueChangedEventArgs.$t = igniteuiReactCore.markType(ComponentDataValueChangedEventArgs, 'ComponentDataValueChangedEventArgs');
        return ComponentDataValueChangedEventArgs;
    }(igniteuiReactCore.Base));

    var IgrComponentDataValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrComponentDataValueChangedEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrComponentDataValueChangedEventArgs.prototype.createImplementation = function () {
            return new ComponentDataValueChangedEventArgs();
        };
        Object.defineProperty(IgrComponentDataValueChangedEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComponentDataValueChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrComponentDataValueChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrComponentDataValueChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrComponentDataValueChangedEventArgs.prototype, "detail", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: false,
            configurable: true
        });
        return IgrComponentDataValueChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var CalendarHeaderOrientation = /*@__PURE__*/ (function (CalendarHeaderOrientation) {
        CalendarHeaderOrientation[CalendarHeaderOrientation["Horizontal"] = 0] = "Horizontal";
        CalendarHeaderOrientation[CalendarHeaderOrientation["Vertical"] = 1] = "Vertical";
        return CalendarHeaderOrientation;
    })({});
    /**
     * @hidden
     */
    var CalendarHeaderOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CalendarHeaderOrientation', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var CalendarOrientation = /*@__PURE__*/ (function (CalendarOrientation) {
        CalendarOrientation[CalendarOrientation["Horizontal"] = 0] = "Horizontal";
        CalendarOrientation[CalendarOrientation["Vertical"] = 1] = "Vertical";
        return CalendarOrientation;
    })({});
    /**
     * @hidden
     */
    var CalendarOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CalendarOrientation', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var CalendarActiveView = /*@__PURE__*/ (function (CalendarActiveView) {
        CalendarActiveView[CalendarActiveView["Days"] = 0] = "Days";
        CalendarActiveView[CalendarActiveView["Months"] = 1] = "Months";
        CalendarActiveView[CalendarActiveView["Years"] = 2] = "Years";
        return CalendarActiveView;
    })({});
    /**
     * @hidden
     */
    var CalendarActiveView_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CalendarActiveView', 'Days,0|Months,1|Years,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalendarFormatOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CalendarFormatOptions, _super);
        function CalendarFormatOptions() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._weekday = null;
            _this._month = null;
            return _this;
        }
        Object.defineProperty(CalendarFormatOptions.prototype, "weekday", {
            get: function () {
                return this._weekday;
            },
            set: function (a) {
                this._weekday = a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CalendarFormatOptions.prototype, "month", {
            get: function () {
                return this._month;
            },
            set: function (a) {
                this._month = a;
            },
            enumerable: false,
            configurable: true
        });
        CalendarFormatOptions.$t = igniteuiReactCore.markType(CalendarFormatOptions, 'CalendarFormatOptions');
        return CalendarFormatOptions;
    }(igniteuiReactCore.Base));

    var IgrCalendarFormatOptions = /** @class */ /*@__PURE__*/ (function () {
        function IgrCalendarFormatOptions() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrCalendarFormatOptions.prototype.createImplementation = function () {
            return new CalendarFormatOptions();
        };
        Object.defineProperty(IgrCalendarFormatOptions.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarFormatOptions.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarFormatOptions.prototype.onImplementationCreated = function () {
        };
        IgrCalendarFormatOptions.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrCalendarFormatOptions.prototype, "weekday", {
            get: function () {
                return this.i.weekday;
            },
            set: function (v) {
                this.i.weekday = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarFormatOptions.prototype, "month", {
            get: function () {
                return this.i.month;
            },
            set: function (v) {
                this.i.month = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarFormatOptions.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrCalendarFormatOptions;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalendarResourceStrings = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CalendarResourceStrings, _super);
        function CalendarResourceStrings() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.j = null;
            _this.l = null;
            _this.h = null;
            _this.k = null;
            _this.i = null;
            _this.m = null;
            _this.a = null;
            _this.e = null;
            _this.b = null;
            _this.f = null;
            _this.c = null;
            _this.g = null;
            _this.d = null;
            _this.n = null;
            return _this;
        }
        CalendarResourceStrings.$t = igniteuiReactCore.markType(CalendarResourceStrings, 'CalendarResourceStrings');
        return CalendarResourceStrings;
    }(igniteuiReactCore.Base));

    var IgrCalendarResourceStrings = /** @class */ /*@__PURE__*/ (function () {
        function IgrCalendarResourceStrings() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrCalendarResourceStrings.prototype.createImplementation = function () {
            return new CalendarResourceStrings();
        };
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarResourceStrings.prototype.onImplementationCreated = function () {
        };
        IgrCalendarResourceStrings.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "selectMonth", {
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "selectYear", {
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "selectDate", {
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "selectRange", {
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "selectedDate", {
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "startDate", {
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "endDate", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "previousMonth", {
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "nextMonth", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "previousYear", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "nextYear", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "previousYears", {
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "nextYears", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarResourceStrings.prototype, "weekLabel", {
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarResourceStrings.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrCalendarResourceStrings;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Calendar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Calendar, _super);
        function Calendar() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.change = null;
            return _this;
        }
        Object.defineProperty(Calendar.prototype, "v", {
            get: function () {
                var ret_ = this.e.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "l", {
            get: function () {
                var ret_ = this.e.n("values");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("values", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "u", {
            get: function () {
                var ret_ = this.e.n("activeDate");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("activeDate", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "t", {
            get: function () {
                var ret_ = this.e.n("hideOutsideDays");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("hideOutsideDays", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "s", {
            get: function () {
                var ret_ = this.e.n("hideHeader");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("hideHeader", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "o", {
            get: function () {
                var ret_ = this.e.n("headerOrientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(CalendarHeaderOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(CalendarHeaderOrientation_$type, this.e.f(CalendarHeaderOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(CalendarHeaderOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(CalendarHeaderOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("headerOrientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "p", {
            get: function () {
                var ret_ = this.e.n("orientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(CalendarOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(CalendarOrientation_$type, this.e.f(CalendarOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(CalendarOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(CalendarOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("orientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "w", {
            get: function () {
                var ret_ = this.e.n("visibleMonths");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("visibleMonths", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "m", {
            get: function () {
                var ret_ = this.e.n("activeView");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(CalendarActiveView_$type, igniteuiReactCore.EnumUtil.getEnumValue(CalendarActiveView_$type, this.e.f(CalendarActiveView_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(CalendarActiveView_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(CalendarActiveView_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("activeView", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "n", {
            get: function () {
                var ret_ = this.e.m("formatOptions", function (a) { return new CalendarFormatOptions(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("formatOptions", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "q", {
            get: function () {
                var ret_ = this.e.m("resourceStrings", function (a) { return new CalendarResourceStrings(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("resourceStrings", value_);
            },
            enumerable: false,
            configurable: true
        });
        Calendar.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.e.s("change", function (a) { return _this.change(_this, ComponentDataValueChangedEventArgs.a(a)); });
            }
            else {
                this.e.v("change");
            }
        };
        Calendar.$t = igniteuiReactCore.markType(Calendar, 'Calendar', CalendarBase.$);
        return Calendar;
    }(CalendarBase));

    /**
     * Represents a calendar that lets users
     * to select a date value in a variety of different ways.
    */
    var IgrCalendar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCalendar, _super);
        function IgrCalendar(props) {
            var _this = _super.call(this, props) || this;
            _this._change = null;
            _this._change_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCalendarComponent);
            return _this;
        }
        IgrCalendar.prototype.createImplementation = function () {
            return new Calendar();
        };
        Object.defineProperty(IgrCalendar.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendar.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrCalendar.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-calendar", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCalendar.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCalendar.prototype, "value", {
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "values", {
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.l = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "activeDate", {
            /**
             * Sets the date which is shown in view and is highlighted. By default it is the current date.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "hideOutsideDays", {
            /**
             * Whether to show the dates that do not belong to the current active month.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "hideHeader", {
            /**
             * Whether to render the calendar header part.
             * When the calendar selection is set to `multiple` the header is always hidden.
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "headerOrientation", {
            /**
             * The orientation of the calendar header.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureEnum(CalendarHeaderOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "orientation", {
            /**
             * The orientation of the calendar months when more than one month
             * is being shown.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureEnum(CalendarOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "visibleMonths", {
            /**
             * The number of months displayed in the days view.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "activeView", {
            /**
             * The current active view of the component.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = igniteuiReactCore.ensureEnum(CalendarActiveView_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "formatOptions", {
            /**
             * The options used to format the months and the weekdays in the calendar views.
            */
            get: function () {
                var r = this.i.n;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrCalendarFormatOptions();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.n = null : this.i.n = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "resourceStrings", {
            /**
             * The resource strings for localization.
            */
            get: function () {
                var r = this.i.q;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrCalendarResourceStrings();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.q = null : this.i.q = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendar.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.formatOptions && this.formatOptions.name && this.formatOptions.name == name) {
                return this.formatOptions;
            }
            if (this.resourceStrings && this.resourceStrings.name && this.resourceStrings.name == name) {
                return this.resourceStrings;
            }
            return null;
        };
        Object.defineProperty(IgrCalendar.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentDataValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrCalendar;
    }(IgrCalendarBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCalendarModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCalendarModule() {
        }
        IgrCalendarModule.register = function () {
            IgrCalendarBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrComponentDataValueChangedEventArgs', IgrComponentDataValueChangedEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCalendar', IgrCalendar);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCalendar', IgrCalendar);
        };
        return IgrCalendarModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrInputBaseModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrInputBaseModule() {
        }
        IgrInputBaseModule.register = function () {
        };
        return IgrInputBaseModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrMaskInputBaseModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrMaskInputBaseModule() {
        }
        IgrMaskInputBaseModule.register = function () {
            IgrInputBaseModule.register();
        };
        return IgrMaskInputBaseModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DatePartDeltas = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DatePartDeltas, _super);
        function DatePartDeltas() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this.d = 0;
            _this.f = 0;
            _this.b = 0;
            _this.c = 0;
            _this.e = 0;
            return _this;
        }
        DatePartDeltas.$t = igniteuiReactCore.markType(DatePartDeltas, 'DatePartDeltas');
        return DatePartDeltas;
    }(igniteuiReactCore.Base));

    var IgrDatePartDeltas = /** @class */ /*@__PURE__*/ (function () {
        function IgrDatePartDeltas() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrDatePartDeltas.prototype.createImplementation = function () {
            return new DatePartDeltas();
        };
        Object.defineProperty(IgrDatePartDeltas.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePartDeltas.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDatePartDeltas.prototype.onImplementationCreated = function () {
        };
        IgrDatePartDeltas.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrDatePartDeltas.prototype, "date", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePartDeltas.prototype, "month", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePartDeltas.prototype, "year", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePartDeltas.prototype, "hours", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePartDeltas.prototype, "minutes", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePartDeltas.prototype, "seconds", {
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDatePartDeltas.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrDatePartDeltas;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ComponentDateValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ComponentDateValueChangedEventArgs, _super);
        function ComponentDateValueChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new Date();
            return _this;
        }
        ComponentDateValueChangedEventArgs.a = function (a) {
            return ((function () {
                var $ret = new ComponentDateValueChangedEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        ComponentDateValueChangedEventArgs.$t = igniteuiReactCore.markType(ComponentDateValueChangedEventArgs, 'ComponentDateValueChangedEventArgs');
        return ComponentDateValueChangedEventArgs;
    }(igniteuiReactCore.Base));

    var IgrComponentDateValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrComponentDateValueChangedEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrComponentDateValueChangedEventArgs.prototype.createImplementation = function () {
            return new ComponentDateValueChangedEventArgs();
        };
        Object.defineProperty(IgrComponentDateValueChangedEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComponentDateValueChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrComponentDateValueChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrComponentDateValueChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrComponentDateValueChangedEventArgs.prototype, "detail", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: false,
            configurable: true
        });
        return IgrComponentDateValueChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ComponentValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ComponentValueChangedEventArgs, _super);
        function ComponentValueChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        ComponentValueChangedEventArgs.a = function (a) {
            return ((function () {
                var $ret = new ComponentValueChangedEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        ComponentValueChangedEventArgs.$t = igniteuiReactCore.markType(ComponentValueChangedEventArgs, 'ComponentValueChangedEventArgs');
        return ComponentValueChangedEventArgs;
    }(igniteuiReactCore.Base));

    var IgrComponentValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrComponentValueChangedEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrComponentValueChangedEventArgs.prototype.createImplementation = function () {
            return new ComponentValueChangedEventArgs();
        };
        Object.defineProperty(IgrComponentValueChangedEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComponentValueChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrComponentValueChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrComponentValueChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrComponentValueChangedEventArgs.prototype, "detail", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: false,
            configurable: true
        });
        return IgrComponentValueChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var VoidEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(VoidEventArgs, _super);
        function VoidEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        VoidEventArgs.b = function (a) {
            return new VoidEventArgs();
        };
        VoidEventArgs.$t = igniteuiReactCore.markType(VoidEventArgs, 'VoidEventArgs', igniteuiReactCore.EventArgs.$);
        return VoidEventArgs;
    }(igniteuiReactCore.EventArgs));

    var IgrVoidEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrVoidEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrVoidEventArgs.prototype.createImplementation = function () {
            return new VoidEventArgs();
        };
        Object.defineProperty(IgrVoidEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrVoidEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrVoidEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrVoidEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        return IgrVoidEventArgs;
    }());

    var IgrInputBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrInputBase, _super);
        function IgrInputBase(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._inputOcurred = null;
            _this._inputOcurred_wrapped = null;
            _this._focus = null;
            _this._focus_wrapped = null;
            _this._blur = null;
            _this._blur_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrInputBase.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrInputBase.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrInputBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrInputBase.prototype.onImplementationCreated = function () {
        };
        IgrInputBase.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrInputBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrInputBase.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrInputBase.prototype, "outlined", {
            /**
             * Whether the control will have outlined appearance.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "readOnly", {
            /**
             * Makes the control a readonly field.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "placeholder", {
            /**
             * The placeholder attribute of the control.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "label", {
            /**
             * The label for the control.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "required", {
            /**
             * Makes the control a required field in a form context.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrInputBase.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrInputBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrInputBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrInputBase.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("InputBase");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrInputBase.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Sets focus on the control.
        
        */
        IgrInputBase.prototype.focusComponent = function (options) {
            this.i.t((options == null ? null : options.i));
        };
        /**
         * Removes focus from the control.
        
        */
        IgrInputBase.prototype.blurComponent = function () {
            this.i.q();
        };
        IgrInputBase.prototype.setSelectionRange = function (start, end, direction) {
            this.i.z(start, end, (direction == null ? null : direction));
        };
        IgrInputBase.prototype.setRangeText = function (replacement, start, end, selectMode) {
            this.i.y(replacement, start, end, (selectMode == null ? null : selectMode));
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrInputBase.prototype.reportValidity = function () {
            this.i.v();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrInputBase.prototype.checkValidity = function () {
            this.i.r();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrInputBase.prototype.setCustomValidity = function (message) {
            this.i.w(message);
        };
        Object.defineProperty(IgrInputBase.prototype, "inputOcurred", {
            get: function () {
                return this._inputOcurred;
            },
            set: function (ev) {
                var _this = this;
                if (this._inputOcurred_wrapped !== null) {
                    this.i.inputOcurred = igniteuiReactCore.delegateRemove(this.i.inputOcurred, this._inputOcurred_wrapped);
                    this._inputOcurred_wrapped = null;
                    this._inputOcurred = null;
                }
                this._inputOcurred = ev;
                this._inputOcurred_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeInputOcurred) {
                        _this.beforeInputOcurred(_this, outerArgs);
                    }
                    if (_this._inputOcurred) {
                        _this._inputOcurred(_this, outerArgs);
                    }
                };
                this.i.inputOcurred = igniteuiReactCore.delegateCombine(this.i.inputOcurred, this._inputOcurred_wrapped);
                if (this.i.inputOcurredChanged) {
                    this.i.inputOcurredChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "focus", {
            get: function () {
                return this._focus;
            },
            set: function (ev) {
                var _this = this;
                if (this._focus_wrapped !== null) {
                    this.i.focus = igniteuiReactCore.delegateRemove(this.i.focus, this._focus_wrapped);
                    this._focus_wrapped = null;
                    this._focus = null;
                }
                this._focus = ev;
                this._focus_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFocus) {
                        _this.beforeFocus(_this, outerArgs);
                    }
                    if (_this._focus) {
                        _this._focus(_this, outerArgs);
                    }
                };
                this.i.focus = igniteuiReactCore.delegateCombine(this.i.focus, this._focus_wrapped);
                if (this.i.focusChanged) {
                    this.i.focusChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInputBase.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            set: function (ev) {
                var _this = this;
                if (this._blur_wrapped !== null) {
                    this.i.blur = igniteuiReactCore.delegateRemove(this.i.blur, this._blur_wrapped);
                    this._blur_wrapped = null;
                    this._blur = null;
                }
                this._blur = ev;
                this._blur_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeBlur) {
                        _this.beforeBlur(_this, outerArgs);
                    }
                    if (_this._blur) {
                        _this._blur(_this, outerArgs);
                    }
                };
                this.i.blur = igniteuiReactCore.delegateCombine(this.i.blur, this._blur_wrapped);
                if (this.i.blurChanged) {
                    this.i.blurChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrInputBase;
    }(React.Component));

    var IgrMaskInputBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrMaskInputBase, _super);
        function IgrMaskInputBase(props) {
            return _super.call(this, props) || this;
        }
        Object.defineProperty(IgrMaskInputBase.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMaskInputBase.prototype, "prompt", {
            /**
             * The prompt symbol to use for unfilled parts of the mask.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrMaskInputBase.prototype.connectedCallback = function () {
            this.i.ab();
        };
        /**
         * Selects all text within the input.
        
        */
        IgrMaskInputBase.prototype.select = function () {
            this.i.ac();
        };
        return IgrMaskInputBase;
    }(IgrInputBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var SelectionRangeDirection = /*@__PURE__*/ (function (SelectionRangeDirection) {
        SelectionRangeDirection[SelectionRangeDirection["None"] = 0] = "None";
        SelectionRangeDirection[SelectionRangeDirection["Backward"] = 1] = "Backward";
        SelectionRangeDirection[SelectionRangeDirection["Forward"] = 2] = "Forward";
        return SelectionRangeDirection;
    })({});
    /**
     * @hidden
     */
    var SelectionRangeDirection_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SelectionRangeDirection', 'None,0|Backward,1|Forward,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var RangeTextSelectMode = /*@__PURE__*/ (function (RangeTextSelectMode) {
        RangeTextSelectMode[RangeTextSelectMode["Preserve"] = 0] = "Preserve";
        RangeTextSelectMode[RangeTextSelectMode["Select"] = 1] = "Select";
        RangeTextSelectMode[RangeTextSelectMode["Start"] = 2] = "Start";
        RangeTextSelectMode[RangeTextSelectMode["End"] = 3] = "End";
        return RangeTextSelectMode;
    })({});
    /**
     * @hidden
     */
    var RangeTextSelectMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('RangeTextSelectMode', 'Preserve,0|Select,1|Start,2|End,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var InputBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(InputBase, _super);
        function InputBase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.k = null;
            _this.inputOcurred = null;
            _this.focus = null;
            _this.blur = null;
            return _this;
        }
        Object.defineProperty(InputBase.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "nativeElement", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                this.k = a;
                this.d.o = this.k;
            },
            enumerable: false,
            configurable: true
        });
        InputBase.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(InputBase.prototype, "h", {
            get: function () {
                var ret_ = this.e.n("outlined");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("outlined", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "i", {
            get: function () {
                var ret_ = this.e.n("readOnly");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("readOnly", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "o", {
            get: function () {
                var ret_ = this.e.n("placeholder");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("placeholder", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "m", {
            get: function () {
                var ret_ = this.e.n("label");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("label", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "f", {
            get: function () {
                var ret_ = this.e.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "j", {
            get: function () {
                var ret_ = this.e.n("required");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("required", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "n", {
            get: function () {
                var ret_ = this.e.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputBase.prototype, "g", {
            get: function () {
                var ret_ = this.e.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        InputBase.prototype.inputOcurredChanged = function () {
            var _this = this;
            if (this.inputOcurred != null) {
                this.e.s("input", function (a) { return _this.inputOcurred(_this, ComponentValueChangedEventArgs.a(a)); });
            }
            else {
                this.e.v("input");
            }
        };
        InputBase.prototype.focusChanged = function () {
            var _this = this;
            if (this.focus != null) {
                this.e.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.e.v("focus");
            }
        };
        InputBase.prototype.blurChanged = function () {
            var _this = this;
            if (this.blur != null) {
                this.e.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.e.v("blur");
            }
        };
        InputBase.prototype.t = function (a) {
            this.nativeElement.focus(this.e.i(a));
        };
        InputBase.prototype.q = function () {
            this.nativeElement.blur();
        };
        InputBase.prototype.z = function (a, b, c) {
            this.nativeElement.setSelectionRange(this.e.i(a), this.e.i(b), this.e.i(igniteuiReactCore.enumGetBox(SelectionRangeDirection_$type, c)));
        };
        InputBase.prototype.y = function (a, b, c, d) {
            this.nativeElement.setRangeText(this.e.i(a), this.e.i(b), this.e.i(c), this.e.i(igniteuiReactCore.enumGetBox(RangeTextSelectMode_$type, d)));
        };
        InputBase.prototype.v = function () {
            this.nativeElement.reportValidity();
        };
        InputBase.prototype.r = function () {
            this.nativeElement.checkValidity();
        };
        InputBase.prototype.w = function (a) {
            this.nativeElement.setCustomValidity(this.e.i(a));
        };
        InputBase.$t = igniteuiReactCore.markType(InputBase, 'InputBase', BaseElement.$);
        return InputBase;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MaskInputBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(MaskInputBase, _super);
        function MaskInputBase() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(MaskInputBase.prototype, "aa", {
            get: function () {
                var ret_ = this.e.n("prompt");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("prompt", value_);
            },
            enumerable: false,
            configurable: true
        });
        MaskInputBase.prototype.ab = function () {
            this.nativeElement.connectedCallback();
        };
        MaskInputBase.prototype.ac = function () {
            this.nativeElement.select();
        };
        MaskInputBase.$t = igniteuiReactCore.markType(MaskInputBase, 'MaskInputBase', InputBase.$);
        return MaskInputBase;
    }(InputBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DatePart = /*@__PURE__*/ (function (DatePart) {
        DatePart[DatePart["Month"] = 0] = "Month";
        DatePart[DatePart["Year"] = 1] = "Year";
        DatePart[DatePart["Date"] = 2] = "Date";
        DatePart[DatePart["Hours"] = 3] = "Hours";
        DatePart[DatePart["Minutes"] = 4] = "Minutes";
        DatePart[DatePart["Seconds"] = 5] = "Seconds";
        DatePart[DatePart["AmPm"] = 6] = "AmPm";
        return DatePart;
    })({});
    /**
     * @hidden
     */
    var DatePart_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DatePart', 'Month:month,0|Year:year,1|Date:date,2|Hours:hours,3|Minutes:minutes,4|Seconds:seconds,5|AmPm:amPm,6');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DateTimeInput = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DateTimeInput, _super);
        function DateTimeInput() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.change = null;
            return _this;
        }
        Object.defineProperty(DateTimeInput.prototype, "ak", {
            get: function () {
                var ret_ = this.e.n("inputFormat");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("inputFormat", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateTimeInput.prototype, "ai", {
            get: function () {
                var ret_ = this.e.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateTimeInput.prototype, "ah", {
            get: function () {
                var ret_ = this.e.n("min");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("min", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateTimeInput.prototype, "ag", {
            get: function () {
                var ret_ = this.e.n("max");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("max", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateTimeInput.prototype, "aj", {
            get: function () {
                var ret_ = this.e.n("displayFormat");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("displayFormat", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateTimeInput.prototype, "ae", {
            get: function () {
                var ret_ = this.e.m("spinDelta", function (a) { return new DatePartDeltas(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("spinDelta", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateTimeInput.prototype, "af", {
            get: function () {
                var ret_ = this.e.n("spinLoop");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("spinLoop", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DateTimeInput.prototype, "al", {
            get: function () {
                var ret_ = this.e.n("locale");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("locale", value_);
            },
            enumerable: false,
            configurable: true
        });
        DateTimeInput.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.e.s("change", function (a) { return _this.change(_this, ComponentDateValueChangedEventArgs.a(a)); });
            }
            else {
                this.e.v("change");
            }
        };
        DateTimeInput.prototype.ao = function () {
            this.nativeElement.connectedCallback();
        };
        DateTimeInput.prototype.aq = function (a, b) {
            if (b === void 0) {
                b = -1;
            }
            this.nativeElement.stepUp(this.e.i(igniteuiReactCore.enumGetBox(DatePart_$type, a)), this.e.i(b));
        };
        DateTimeInput.prototype.ap = function (a, b) {
            if (b === void 0) {
                b = -1;
            }
            this.nativeElement.stepDown(this.e.i(igniteuiReactCore.enumGetBox(DatePart_$type, a)), this.e.i(b));
        };
        DateTimeInput.prototype.an = function () {
            this.nativeElement.clear();
        };
        DateTimeInput.$t = igniteuiReactCore.markType(DateTimeInput, 'DateTimeInput', MaskInputBase.$);
        return DateTimeInput;
    }(MaskInputBase));

    /**
     * A date time input is an input field that lets you set and edit the date and time in a chosen input element
     * using customizable display and input formats.
    */
    var IgrDateTimeInput = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDateTimeInput, _super);
        function IgrDateTimeInput(props) {
            var _this = _super.call(this, props) || this;
            _this._change = null;
            _this._change_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDateTimeInputComponent);
            return _this;
        }
        IgrDateTimeInput.prototype.createImplementation = function () {
            return new DateTimeInput();
        };
        Object.defineProperty(IgrDateTimeInput.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDateTimeInput.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrDateTimeInput.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-date-time-input", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDateTimeInput.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrDateTimeInput.prototype, "inputFormat", {
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeInput.prototype, "value", {
            /**
             * The value of the input.
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeInput.prototype, "min", {
            /**
             * The minimum value required for the input to remain valid.
            */
            get: function () {
                return this.i.ah;
            },
            set: function (v) {
                this.i.ah = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeInput.prototype, "max", {
            /**
             * The maximum value required for the input to remain valid.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeInput.prototype, "displayFormat", {
            /**
             * Format to display the value in when not editing.
             * Defaults to the input format if not set.
            */
            get: function () {
                return this.i.aj;
            },
            set: function (v) {
                this.i.aj = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeInput.prototype, "spinDelta", {
            /**
             * Delta values used to increment or decrement each date part on step actions.
             * All values default to `1`.
            */
            get: function () {
                var r = this.i.ae;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDatePartDeltas();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.ae = null : this.i.ae = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeInput.prototype, "spinLoop", {
            /**
             * Sets whether to loop over the currently spun segment.
            */
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeInput.prototype, "locale", {
            /**
             * The locale settings used to display the value.
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDateTimeInput.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.spinDelta && this.spinDelta.name && this.spinDelta.name == name) {
                return this.spinDelta;
            }
            return null;
        };
        IgrDateTimeInput.prototype.connectedCallback = function () {
            this.i.ao();
        };
        IgrDateTimeInput.prototype.stepUp = function (datePart, delta) {
            this.i.aq((datePart == null ? null : datePart), delta);
        };
        IgrDateTimeInput.prototype.stepDown = function (datePart, delta) {
            this.i.ap((datePart == null ? null : datePart), delta);
        };
        /**
         * Clears the input element of user input.
        
        */
        IgrDateTimeInput.prototype.clear = function () {
            this.i.an();
        };
        Object.defineProperty(IgrDateTimeInput.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentDateValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrDateTimeInput;
    }(IgrMaskInputBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDateTimeInputModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDateTimeInputModule() {
        }
        IgrDateTimeInputModule.register = function () {
            IgrMaskInputBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDateTimeInput', IgrDateTimeInput);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDateTimeInput', IgrDateTimeInput);
        };
        return IgrDateTimeInputModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrButtonBaseModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrButtonBaseModule() {
        }
        IgrButtonBaseModule.register = function () {
        };
        return IgrButtonBaseModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ButtonVariant = /*@__PURE__*/ (function (ButtonVariant) {
        ButtonVariant[ButtonVariant["Flat"] = 0] = "Flat";
        ButtonVariant[ButtonVariant["Contained"] = 1] = "Contained";
        ButtonVariant[ButtonVariant["Outlined"] = 2] = "Outlined";
        ButtonVariant[ButtonVariant["Fab"] = 3] = "Fab";
        return ButtonVariant;
    })({});
    /**
     * @hidden
     */
    var ButtonVariant_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonVariant', 'Flat,0|Contained,1|Outlined,2|Fab,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ButtonBaseType = /*@__PURE__*/ (function (ButtonBaseType) {
        ButtonBaseType[ButtonBaseType["Button"] = 0] = "Button";
        ButtonBaseType[ButtonBaseType["Reset"] = 1] = "Reset";
        ButtonBaseType[ButtonBaseType["Submit"] = 2] = "Submit";
        return ButtonBaseType;
    })({});
    /**
     * @hidden
     */
    var ButtonBaseType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonBaseType', 'Button,0|Reset,1|Submit,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ButtonBaseTarget = /*@__PURE__*/ (function (ButtonBaseTarget) {
        ButtonBaseTarget[ButtonBaseTarget["_blank"] = 0] = "_blank";
        ButtonBaseTarget[ButtonBaseTarget["_parent"] = 1] = "_parent";
        ButtonBaseTarget[ButtonBaseTarget["_self"] = 2] = "_self";
        ButtonBaseTarget[ButtonBaseTarget["_top"] = 3] = "_top";
        return ButtonBaseTarget;
    })({});
    /**
     * @hidden
     */
    var ButtonBaseTarget_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonBaseTarget', '_blank,0|_parent,1|_self,2|_top,3');

    var IgrButtonBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrButtonBase, _super);
        function IgrButtonBase(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._clicked = null;
            _this._clicked_wrapped = null;
            _this._focus = null;
            _this._focus_wrapped = null;
            _this._blur = null;
            _this._blur_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrButtonBase.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrButtonBase.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrButtonBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrButtonBase.prototype.onImplementationCreated = function () {
        };
        IgrButtonBase.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrButtonBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrButtonBase.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrButtonBase.prototype, "type", {
            /**
             * The type of the button. Defaults to `button`.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(ButtonBaseType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "href", {
            /**
             * The URL the button points to.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "download", {
            /**
             * Prompts to save the linked URL instead of navigating to it.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "target", {
            /**
             * Where to display the linked URL, as the name for a browsing context.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(ButtonBaseTarget_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "rel", {
            /**
             * The relationship of the linked URL.
             * See https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "disabled", {
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "form", {
            /**
             * Returns the HTMLFormElement associated with this element.
            */
            get: function () {
                return this.i.j;
            },
            enumerable: false,
            configurable: true
        });
        IgrButtonBase.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrButtonBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrButtonBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrButtonBase.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ButtonBase");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrButtonBase.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Sets focus in the button.
        
        */
        IgrButtonBase.prototype.focusComponent = function (options) {
            this.i.t((options == null ? null : options.i));
        };
        /**
         * Simulates a mouse click on the element
        
        */
        IgrButtonBase.prototype.click = function () {
            this.i.q();
        };
        /**
         * Removes focus from the button.
        
        */
        IgrButtonBase.prototype.blurComponent = function () {
            this.i.p();
        };
        Object.defineProperty(IgrButtonBase.prototype, "clicked", {
            get: function () {
                return this._clicked;
            },
            set: function (ev) {
                var _this = this;
                if (this._clicked_wrapped !== null) {
                    this.i.clicked = igniteuiReactCore.delegateRemove(this.i.clicked, this._clicked_wrapped);
                    this._clicked_wrapped = null;
                    this._clicked = null;
                }
                this._clicked = ev;
                this._clicked_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClicked) {
                        _this.beforeClicked(_this, outerArgs);
                    }
                    if (_this._clicked) {
                        _this._clicked(_this, outerArgs);
                    }
                };
                this.i.clicked = igniteuiReactCore.delegateCombine(this.i.clicked, this._clicked_wrapped);
                if (this.i.clickedChanged) {
                    this.i.clickedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "focus", {
            get: function () {
                return this._focus;
            },
            set: function (ev) {
                var _this = this;
                if (this._focus_wrapped !== null) {
                    this.i.focus = igniteuiReactCore.delegateRemove(this.i.focus, this._focus_wrapped);
                    this._focus_wrapped = null;
                    this._focus = null;
                }
                this._focus = ev;
                this._focus_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFocus) {
                        _this.beforeFocus(_this, outerArgs);
                    }
                    if (_this._focus) {
                        _this._focus(_this, outerArgs);
                    }
                };
                this.i.focus = igniteuiReactCore.delegateCombine(this.i.focus, this._focus_wrapped);
                if (this.i.focusChanged) {
                    this.i.focusChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonBase.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            set: function (ev) {
                var _this = this;
                if (this._blur_wrapped !== null) {
                    this.i.blur = igniteuiReactCore.delegateRemove(this.i.blur, this._blur_wrapped);
                    this._blur_wrapped = null;
                    this._blur = null;
                }
                this._blur = ev;
                this._blur_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeBlur) {
                        _this.beforeBlur(_this, outerArgs);
                    }
                    if (_this._blur) {
                        _this._blur(_this, outerArgs);
                    }
                };
                this.i.blur = igniteuiReactCore.delegateCombine(this.i.blur, this._blur_wrapped);
                if (this.i.blurChanged) {
                    this.i.blurChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrButtonBase;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ButtonBase, _super);
        function ButtonBase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.clicked = null;
            _this.f = new WCNativeHelper();
            _this.i = null;
            _this.focus = null;
            _this.blur = null;
            return _this;
        }
        ButtonBase.prototype.clickedChanged = function () {
            var _this = this;
            if (this.clicked != null) {
                this.g.s("click", function (a) { return _this.clicked(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.g.v("click");
            }
        };
        Object.defineProperty(ButtonBase.prototype, "g", {
            get: function () {
                return this.f;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonBase.prototype, "nativeElement", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
                this.f.o = this.i;
            },
            enumerable: false,
            configurable: true
        });
        ButtonBase.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(ButtonBase.prototype, "b", {
            get: function () {
                var ret_ = this.g.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ButtonBaseType_$type, igniteuiReactCore.EnumUtil.getEnumValue(ButtonBaseType_$type, this.g.f(ButtonBaseType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ButtonBaseType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ButtonBaseType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.g.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonBase.prototype, "m", {
            get: function () {
                var ret_ = this.g.n("href");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("href", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonBase.prototype, "l", {
            get: function () {
                var ret_ = this.g.n("download");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("download", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonBase.prototype, "a", {
            get: function () {
                var ret_ = this.g.n("target");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ButtonBaseTarget_$type, igniteuiReactCore.EnumUtil.getEnumValue(ButtonBaseTarget_$type, this.g.f(ButtonBaseTarget_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ButtonBaseTarget_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ButtonBaseTarget_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.g.w("target", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonBase.prototype, "n", {
            get: function () {
                var ret_ = this.g.n("rel");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("rel", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonBase.prototype, "h", {
            get: function () {
                var ret_ = this.g.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonBase.prototype, "j", {
            get: function () {
                var ret_ = this.g.n("form");
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        ButtonBase.prototype.focusChanged = function () {
            var _this = this;
            if (this.focus != null) {
                this.g.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.g.v("focus");
            }
        };
        ButtonBase.prototype.blurChanged = function () {
            var _this = this;
            if (this.blur != null) {
                this.g.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.g.v("blur");
            }
        };
        ButtonBase.prototype.t = function (a) {
            this.nativeElement.focus(this.g.i(a));
        };
        ButtonBase.prototype.q = function () {
            this.nativeElement.click();
        };
        ButtonBase.prototype.p = function () {
            this.nativeElement.blur();
        };
        ButtonBase.$t = igniteuiReactCore.markType(ButtonBase, 'ButtonBase', BaseElement.$);
        return ButtonBase;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Button = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Button, _super);
        function Button() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(Button.prototype, "v", {
            get: function () {
                var ret_ = this.g.n("variant");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ButtonVariant_$type, igniteuiReactCore.EnumUtil.getEnumValue(ButtonVariant_$type, this.g.f(ButtonVariant_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ButtonVariant_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ButtonVariant_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.g.w("variant", value_);
            },
            enumerable: false,
            configurable: true
        });
        Button.$t = igniteuiReactCore.markType(Button, 'Button', ButtonBase.$);
        return Button;
    }(ButtonBase));

    /**
     * Represents a clickable button, used to submit forms or anywhere in a
     * document for accessible, standard button functionality.
    */
    var IgrButton = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrButton, _super);
        function IgrButton(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcButtonComponent);
            return _this;
        }
        IgrButton.prototype.createImplementation = function () {
            return new Button();
        };
        Object.defineProperty(IgrButton.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrButton.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrButton.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-button", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrButton.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrButton.prototype, "variant", {
            /**
             * Sets the variant of the button.
            */
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = igniteuiReactCore.ensureEnum(ButtonVariant_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        return IgrButton;
    }(IgrButtonBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrButtonModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrButtonModule() {
        }
        IgrButtonModule.register = function () {
            IgrButtonBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButton', IgrButton);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButton', IgrButton);
        };
        return IgrButtonModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Dialog = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Dialog, _super);
        function Dialog() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.l = null;
            _this.closing = null;
            _this.closed = null;
            return _this;
        }
        Object.defineProperty(Dialog.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dialog.prototype, "nativeElement", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                this.l = a;
                this.c.o = this.l;
            },
            enumerable: false,
            configurable: true
        });
        Dialog.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Dialog.prototype, "h", {
            get: function () {
                var ret_ = this.d.n("keepOpenOnEscape");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("keepOpenOnEscape", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dialog.prototype, "e", {
            get: function () {
                var ret_ = this.d.n("closeOnOutsideClick");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("closeOnOutsideClick", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dialog.prototype, "g", {
            get: function () {
                var ret_ = this.d.n("hideDefaultAction");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("hideDefaultAction", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dialog.prototype, "i", {
            get: function () {
                var ret_ = this.d.n("open");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("open", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dialog.prototype, "o", {
            get: function () {
                var ret_ = this.d.n("title");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("title", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dialog.prototype, "n", {
            get: function () {
                var ret_ = this.d.n("returnValue");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("returnValue", value_);
            },
            enumerable: false,
            configurable: true
        });
        Dialog.prototype.closingChanged = function () {
            var _this = this;
            if (this.closing != null) {
                this.d.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.d.v("closing");
            }
        };
        Dialog.prototype.closedChanged = function () {
            var _this = this;
            if (this.closed != null) {
                this.d.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.d.v("closed");
            }
        };
        Dialog.prototype.j = function () {
            return (this.nativeElement.show());
        };
        Dialog.prototype.f = function () {
            return (this.nativeElement.hide());
        };
        Dialog.prototype.k = function () {
            return (this.nativeElement.toggle());
        };
        Dialog.$t = igniteuiReactCore.markType(Dialog, 'Dialog', BaseElement.$);
        return Dialog;
    }(BaseElement));

    /**
     * Represents a Dialog component.
    */
    var IgrDialog = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDialog, _super);
        function IgrDialog(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._closing = null;
            _this._closing_wrapped = null;
            _this._closed = null;
            _this._closed_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDialogComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrDialog.prototype.createImplementation = function () {
            return new Dialog();
        };
        Object.defineProperty(IgrDialog.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDialog.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrDialog._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDialog.prototype.onImplementationCreated = function () {
        };
        IgrDialog.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDialog.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDialog.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-dialog", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDialog.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrDialog.prototype, "keepOpenOnEscape", {
            /**
             * Whether the dialog should be kept open when pressing the 'ESCAPE' button.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDialog.prototype, "closeOnOutsideClick", {
            /**
             * Whether the dialog should be closed when clicking outside of it.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDialog.prototype, "hideDefaultAction", {
            /**
             * Whether to hide the default action button for the dialog.
             * When there is projected content in the `footer` slot this property
             * has no effect.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDialog.prototype, "open", {
            /**
             * Whether the dialog is opened.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDialog.prototype, "title", {
            /**
             * Sets the title of the dialog.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDialog.prototype, "returnValue", {
            /**
             * Sets the return value for the dialog.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDialog.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrDialog.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrDialog.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDialog.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Dialog");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDialog.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Opens the dialog.
        
        */
        IgrDialog.prototype.show = function () {
            var iv = this.i.j();
            return (iv);
        };
        /**
         * Closes the dialog.
        
        */
        IgrDialog.prototype.hide = function () {
            var iv = this.i.f();
            return (iv);
        };
        /**
         * Toggles the open state of the dialog.
        
        */
        IgrDialog.prototype.toggle = function () {
            var iv = this.i.k();
            return (iv);
        };
        Object.defineProperty(IgrDialog.prototype, "closing", {
            get: function () {
                return this._closing;
            },
            set: function (ev) {
                var _this = this;
                if (this._closing_wrapped !== null) {
                    this.i.closing = igniteuiReactCore.delegateRemove(this.i.closing, this._closing_wrapped);
                    this._closing_wrapped = null;
                    this._closing = null;
                }
                this._closing = ev;
                this._closing_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosing) {
                        _this.beforeClosing(_this, outerArgs);
                    }
                    if (_this._closing) {
                        _this._closing(_this, outerArgs);
                    }
                };
                this.i.closing = igniteuiReactCore.delegateCombine(this.i.closing, this._closing_wrapped);
                if (this.i.closingChanged) {
                    this.i.closingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDialog.prototype, "closed", {
            get: function () {
                return this._closed;
            },
            set: function (ev) {
                var _this = this;
                if (this._closed_wrapped !== null) {
                    this.i.closed = igniteuiReactCore.delegateRemove(this.i.closed, this._closed_wrapped);
                    this._closed_wrapped = null;
                    this._closed = null;
                }
                this._closed = ev;
                this._closed_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosed) {
                        _this.beforeClosed(_this, outerArgs);
                    }
                    if (_this._closed) {
                        _this._closed(_this, outerArgs);
                    }
                };
                this.i.closed = igniteuiReactCore.delegateCombine(this.i.closed, this._closed_wrapped);
                if (this.i.closedChanged) {
                    this.i.closedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrDialog;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDialogModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDialogModule() {
        }
        IgrDialogModule.register = function () {
            IgrButtonModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDialog', IgrDialog);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDialog', IgrDialog);
        };
        return IgrDialogModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Icon = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Icon, _super);
        function Icon() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(Icon.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.a.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        Icon.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Icon.prototype, "g", {
            get: function () {
                var ret_ = this.b.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "f", {
            get: function () {
                var ret_ = this.b.n("collection");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("collection", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("mirrored");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("mirrored", value_);
            },
            enumerable: false,
            configurable: true
        });
        Icon.prototype.h = function () {
            this.nativeElement.connectedCallback();
        };
        Icon.prototype.i = function () {
            this.nativeElement.disconnectedCallback();
        };
        Icon.prototype.j = function (a, b, c) {
            this.nativeElement.registerIcon(this.b.i(a), this.b.i(b), this.b.i(c));
        };
        Icon.prototype.k = function (a, b, c) {
            this.nativeElement.registerIconFromText(this.b.i(a), this.b.i(b), this.b.i(c));
        };
        Icon.prototype.l = function (a, b, c) {
            this.nativeElement.setIconRef(this.b.i(a), this.b.i(b), this.b.i(c));
        };
        Icon.$t = igniteuiReactCore.markType(Icon, 'Icon', BaseElement.$);
        return Icon;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IconMeta = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IconMeta, _super);
        function IconMeta() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            _this.a = null;
            return _this;
        }
        IconMeta.$t = igniteuiReactCore.markType(IconMeta, 'IconMeta');
        return IconMeta;
    }(igniteuiReactCore.Base));

    /**
     * The icon component allows visualizing collections of pre-registered SVG icons.
    */
    var IgrIcon = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrIcon, _super);
        function IgrIcon(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcIconComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrIcon.prototype.createImplementation = function () {
            return new Icon();
        };
        Object.defineProperty(IgrIcon.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrIcon._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrIcon.prototype.onImplementationCreated = function () {
        };
        IgrIcon.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrIcon.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrIcon.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-icon", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrIcon.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrIcon.prototype, "name", {
            /**
             * The name of the icon glyph to draw.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "collection", {
            /**
             * The name of the registered collection for look up of icons.
             * Defaults to `default`.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "mirrored", {
            /**
             * Whether to flip the icon. Useful for RTL layouts.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrIcon.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrIcon.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrIcon.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrIcon.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Icon");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrIcon.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrIcon.prototype.connectedCallback = function () {
            this.i.h();
        };
        IgrIcon.prototype.disconnectedCallback = function () {
            this.i.i();
        };
        IgrIcon.prototype.registerIcon = function (name, url, collection) {
            this.i.j(name, url, collection);
        };
        IgrIcon.prototype.registerIconFromText = function (name, iconText, collection) {
            this.i.k(name, iconText, collection);
        };
        IgrIcon.prototype.setIconRef = function (name, collection, icon) {
            this.i.l(name, collection, (icon == null ? null : igniteuiReactCore.interfaceToInternal(icon, function () { return new IconMeta(); })));
        };
        return IgrIcon;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrIconModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrIconModule() {
        }
        IgrIconModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrIcon', IgrIcon);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrIcon', IgrIcon);
        };
        return IgrIconModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DatePickerMode = /*@__PURE__*/ (function (DatePickerMode) {
        DatePickerMode[DatePickerMode["Dropdown"] = 0] = "Dropdown";
        DatePickerMode[DatePickerMode["Dialog"] = 1] = "Dialog";
        return DatePickerMode;
    })({});
    /**
     * @hidden
     */
    var DatePickerMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DatePickerMode', 'Dropdown,0|Dialog,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DatePickerHeaderOrientation = /*@__PURE__*/ (function (DatePickerHeaderOrientation) {
        DatePickerHeaderOrientation[DatePickerHeaderOrientation["Horizontal"] = 0] = "Horizontal";
        DatePickerHeaderOrientation[DatePickerHeaderOrientation["Vertical"] = 1] = "Vertical";
        return DatePickerHeaderOrientation;
    })({});
    /**
     * @hidden
     */
    var DatePickerHeaderOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DatePickerHeaderOrientation', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DatePickerOrientation = /*@__PURE__*/ (function (DatePickerOrientation) {
        DatePickerOrientation[DatePickerOrientation["Horizontal"] = 0] = "Horizontal";
        DatePickerOrientation[DatePickerOrientation["Vertical"] = 1] = "Vertical";
        return DatePickerOrientation;
    })({});
    /**
     * @hidden
     */
    var DatePickerOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DatePickerOrientation', 'Horizontal,0|Vertical,1');

    var IgrBaseComboBoxLike = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrBaseComboBoxLike, _super);
        function IgrBaseComboBoxLike(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrBaseComboBoxLike.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrBaseComboBoxLike.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseComboBoxLike.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrBaseComboBoxLike._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrBaseComboBoxLike.prototype.onImplementationCreated = function () {
        };
        IgrBaseComboBoxLike.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrBaseComboBoxLike.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrBaseComboBoxLike.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrBaseComboBoxLike.prototype, "emitEvent", {
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseComboBoxLike.prototype, "keepOpenOnSelect", {
            /**
             * Whether the component dropdown should be kept open on selection.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseComboBoxLike.prototype, "keepOpenOnOutsideClick", {
            /**
             * Whether the component dropdown should be kept open on clicking outside of it.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseComboBoxLike.prototype, "open", {
            /**
             * Sets the open state of the component.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrBaseComboBoxLike.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrBaseComboBoxLike.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrBaseComboBoxLike.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrBaseComboBoxLike.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("BaseComboBoxLike");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrBaseComboBoxLike.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Shows the component.
        
        */
        IgrBaseComboBoxLike.prototype.show = function () {
            var iv = this.i.g();
            return (iv);
        };
        /**
         * Hides the component.
        
        */
        IgrBaseComboBoxLike.prototype.hide = function () {
            var iv = this.i.c();
            return (iv);
        };
        /**
         * Toggles the open state of the component.
        
        */
        IgrBaseComboBoxLike.prototype.toggle = function () {
            var iv = this.i.h();
            return (iv);
        };
        return IgrBaseComboBoxLike;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var BaseComboBoxLike = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(BaseComboBoxLike, _super);
        function BaseComboBoxLike() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.i = null;
            return _this;
        }
        Object.defineProperty(BaseComboBoxLike.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseComboBoxLike.prototype, "nativeElement", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
                this.a.o = this.i;
            },
            enumerable: false,
            configurable: true
        });
        BaseComboBoxLike.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(BaseComboBoxLike.prototype, "j", {
            get: function () {
                var ret_ = this.b.n("emitEvent");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("emitEvent", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseComboBoxLike.prototype, "e", {
            get: function () {
                var ret_ = this.b.n("keepOpenOnSelect");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("keepOpenOnSelect", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseComboBoxLike.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("keepOpenOnOutsideClick");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("keepOpenOnOutsideClick", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseComboBoxLike.prototype, "f", {
            get: function () {
                var ret_ = this.b.n("open");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("open", value_);
            },
            enumerable: false,
            configurable: true
        });
        BaseComboBoxLike.prototype.g = function () {
            return (this.nativeElement.show());
        };
        BaseComboBoxLike.prototype.c = function () {
            return (this.nativeElement.hide());
        };
        BaseComboBoxLike.prototype.h = function () {
            return (this.nativeElement.toggle());
        };
        BaseComboBoxLike.$t = igniteuiReactCore.markType(BaseComboBoxLike, 'BaseComboBoxLike', BaseElement.$);
        return BaseComboBoxLike;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DatePicker = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DatePicker, _super);
        function DatePicker() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.opening = null;
            _this.opened = null;
            _this.closing = null;
            _this.closed = null;
            _this.change = null;
            _this.input = null;
            return _this;
        }
        Object.defineProperty(DatePicker.prototype, "ap", {
            get: function () {
                var ret_ = this.b.n("label");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("label", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "s", {
            get: function () {
                var ret_ = this.b.n("mode");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DatePickerMode_$type, igniteuiReactCore.EnumUtil.getEnumValue(DatePickerMode_$type, this.b.f(DatePickerMode_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DatePickerMode_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DatePickerMode_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("mode", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ad", {
            get: function () {
                var ret_ = this.b.n("nonEditable");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("nonEditable", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "af", {
            get: function () {
                var ret_ = this.b.n("readOnly");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("readOnly", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "al", {
            get: function () {
                var ret_ = this.b.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ai", {
            get: function () {
                var ret_ = this.b.n("activeDate");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("activeDate", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ak", {
            get: function () {
                var ret_ = this.b.n("min");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("min", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "aj", {
            get: function () {
                var ret_ = this.b.n("max");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("max", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "r", {
            get: function () {
                var ret_ = this.b.n("headerOrientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DatePickerHeaderOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(DatePickerHeaderOrientation_$type, this.b.f(DatePickerHeaderOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DatePickerHeaderOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DatePickerHeaderOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("headerOrientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "t", {
            get: function () {
                var ret_ = this.b.n("orientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DatePickerOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(DatePickerOrientation_$type, this.b.f(DatePickerOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DatePickerOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DatePickerOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("orientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "aa", {
            get: function () {
                var ret_ = this.b.n("hideHeader");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("hideHeader", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ab", {
            get: function () {
                var ret_ = this.b.n("hideOutsideDays");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("hideOutsideDays", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "m", {
            get: function () {
                var ret_ = this.b.m("disabledDates", function (a) { return new DateRangeDescriptor(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabledDates", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "n", {
            get: function () {
                var ret_ = this.b.m("specialDates", function (a) { return new DateRangeDescriptor(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("specialDates", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ae", {
            get: function () {
                var ret_ = this.b.n("outlined");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("outlined", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "as", {
            get: function () {
                var ret_ = this.b.n("placeholder");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("placeholder", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "am", {
            get: function () {
                var ret_ = this.b.n("visibleMonths");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("visibleMonths", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ah", {
            get: function () {
                var ret_ = this.b.n("showWeekNumbers");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("showWeekNumbers", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "an", {
            get: function () {
                var ret_ = this.b.n("displayFormat");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("displayFormat", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ao", {
            get: function () {
                var ret_ = this.b.n("inputFormat");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("inputFormat", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "aq", {
            get: function () {
                var ret_ = this.b.n("locale");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("locale", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "at", {
            get: function () {
                var ret_ = this.b.n("prompt");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("prompt", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "o", {
            get: function () {
                var ret_ = this.b.m("resourceStrings", function (a) { return new CalendarResourceStrings(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("resourceStrings", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "y", {
            get: function () {
                var ret_ = this.b.n("weekStart");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(WeekDays_$type, igniteuiReactCore.EnumUtil.getEnumValue(WeekDays_$type, this.b.f(WeekDays_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(WeekDays_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(WeekDays_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("weekStart", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "z", {
            get: function () {
                var ret_ = this.b.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ag", {
            get: function () {
                var ret_ = this.b.n("required");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("required", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ar", {
            get: function () {
                var ret_ = this.b.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "ac", {
            get: function () {
                var ret_ = this.b.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        DatePicker.prototype.openingChanged = function () {
            var _this = this;
            if (this.opening != null) {
                this.b.s("opening", function (a) { return _this.opening(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("opening");
            }
        };
        DatePicker.prototype.openedChanged = function () {
            var _this = this;
            if (this.opened != null) {
                this.b.s("opened", function (a) { return _this.opened(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("opened");
            }
        };
        DatePicker.prototype.closingChanged = function () {
            var _this = this;
            if (this.closing != null) {
                this.b.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("closing");
            }
        };
        DatePicker.prototype.closedChanged = function () {
            var _this = this;
            if (this.closed != null) {
                this.b.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("closed");
            }
        };
        DatePicker.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.b.s("change", function (a) { return _this.change(_this, ComponentDateValueChangedEventArgs.a(a)); });
            }
            else {
                this.b.v("change");
            }
        };
        DatePicker.prototype.inputChanged = function () {
            var _this = this;
            if (this.input != null) {
                this.b.s("input", function (a) { return _this.input(_this, ComponentDateValueChangedEventArgs.a(a)); });
            }
            else {
                this.b.v("input");
            }
        };
        DatePicker.prototype.az = function () {
            this.nativeElement.connectedCallback();
        };
        DatePicker.prototype.aw = function () {
            this.nativeElement.clear();
        };
        DatePicker.prototype.a9 = function (a, b) {
            if (b === void 0) {
                b = -1;
            }
            this.nativeElement.stepUp(this.b.i(igniteuiReactCore.enumGetBox(DatePart_$type, a)), this.b.i(b));
        };
        DatePicker.prototype.a8 = function (a, b) {
            if (b === void 0) {
                b = -1;
            }
            this.nativeElement.stepDown(this.b.i(igniteuiReactCore.enumGetBox(DatePart_$type, a)), this.b.i(b));
        };
        DatePicker.prototype.a4 = function () {
            this.nativeElement.select();
        };
        DatePicker.prototype.a7 = function (a, b, c) {
            this.nativeElement.setSelectionRange(this.b.i(a), this.b.i(b), this.b.i(igniteuiReactCore.enumGetBox(SelectionRangeDirection_$type, c)));
        };
        DatePicker.prototype.a6 = function (a, b, c, d) {
            this.nativeElement.setRangeText(this.b.i(a), this.b.i(b), this.b.i(c), this.b.i(igniteuiReactCore.enumGetBox(RangeTextSelectMode_$type, d)));
        };
        DatePicker.prototype.a3 = function () {
            this.nativeElement.reportValidity();
        };
        DatePicker.prototype.av = function () {
            this.nativeElement.checkValidity();
        };
        DatePicker.prototype.a5 = function (a) {
            this.nativeElement.setCustomValidity(this.b.i(a));
        };
        DatePicker.$t = igniteuiReactCore.markType(DatePicker, 'DatePicker', BaseComboBoxLike.$);
        return DatePicker;
    }(BaseComboBoxLike));

    /**
     * igc-date-picker is a feature rich component used for entering a date through manual text input or
     * choosing date values from a calendar dialog that pops up.
    */
    var IgrDatePicker = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDatePicker, _super);
        function IgrDatePicker(props) {
            var _this = _super.call(this, props) || this;
            _this._opening = null;
            _this._opening_wrapped = null;
            _this._opened = null;
            _this._opened_wrapped = null;
            _this._closing = null;
            _this._closing_wrapped = null;
            _this._closed = null;
            _this._closed_wrapped = null;
            _this._change = null;
            _this._change_wrapped = null;
            _this._input = null;
            _this._input_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDatePickerComponent);
            return _this;
        }
        IgrDatePicker.prototype.createImplementation = function () {
            return new DatePicker();
        };
        Object.defineProperty(IgrDatePicker.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDatePicker.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrDatePicker.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-date-picker", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDatePicker.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrDatePicker.prototype, "label", {
            /**
             * The label of the datepicker.
            */
            get: function () {
                return this.i.ap;
            },
            set: function (v) {
                this.i.ap = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "mode", {
            /**
             * Determines whether the calendar is opened in a dropdown or a modal dialog
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = igniteuiReactCore.ensureEnum(DatePickerMode_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "nonEditable", {
            /**
             * Whether to allow typing in the input.
            */
            get: function () {
                return this.i.ad;
            },
            set: function (v) {
                this.i.ad = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "readOnly", {
            /**
             * Makes the control a readonly field.
            */
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "value", {
            /**
             * The value of the picker
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "activeDate", {
            /**
             * Gets/Sets the date which is shown in the calendar picker and is highlighted.
             * By default it is the current date.
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "min", {
            /**
             * The minimum value required for the date picker to remain valid.
            */
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "max", {
            /**
             * The maximum value required for the date picker to remain valid.
            */
            get: function () {
                return this.i.aj;
            },
            set: function (v) {
                this.i.aj = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "headerOrientation", {
            /**
             * The orientation of the calendar header.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = igniteuiReactCore.ensureEnum(DatePickerHeaderOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "orientation", {
            /**
             * The orientation of the multiple months displayed in the calendar's days view.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = igniteuiReactCore.ensureEnum(DatePickerOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "hideHeader", {
            /**
             * Determines whether the calendar hides its header.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "hideOutsideDays", {
            /**
             * Controls the visibility of the dates that do not belong to the current month.
            */
            get: function () {
                return this.i.ab;
            },
            set: function (v) {
                this.i.ab = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "disabledDates", {
            /**
             * Gets/sets disabled dates.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "specialDates", {
            /**
             * Gets/sets special dates.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "outlined", {
            /**
             * Whether the control will have outlined appearance.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "placeholder", {
            /**
             * The placeholder attribute of the control.
            */
            get: function () {
                return this.i.as;
            },
            set: function (v) {
                this.i.as = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "visibleMonths", {
            /**
             * The number of months displayed in the calendar.
            */
            get: function () {
                return this.i.am;
            },
            set: function (v) {
                this.i.am = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "showWeekNumbers", {
            /**
             * Whether to show the number of the week in the calendar.
            */
            get: function () {
                return this.i.ah;
            },
            set: function (v) {
                this.i.ah = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "displayFormat", {
            /**
             * Format to display the value in when not editing.
             * Defaults to the input format if not set.
            */
            get: function () {
                return this.i.an;
            },
            set: function (v) {
                this.i.an = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "inputFormat", {
            /**
             * The date format to apply on the input.
             * Defaults to the current locale Intl.DateTimeFormat
            */
            get: function () {
                return this.i.ao;
            },
            set: function (v) {
                this.i.ao = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "locale", {
            /**
             * The locale settings used to display the value.
            */
            get: function () {
                return this.i.aq;
            },
            set: function (v) {
                this.i.aq = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "prompt", {
            /**
             * The prompt symbol to use for unfilled parts of the mask.
            */
            get: function () {
                return this.i.at;
            },
            set: function (v) {
                this.i.at = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "resourceStrings", {
            /**
             * The resource strings of the calendar.
            */
            get: function () {
                var r = this.i.o;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrCalendarResourceStrings();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.o = null : this.i.o = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "weekStart", {
            /**
             * Sets the start day of the week for the calendar.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = igniteuiReactCore.ensureEnum(WeekDays_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "required", {
            /**
             * Makes the control a required field in a form context.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.ar;
            },
            set: function (v) {
                this.i.ar = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.ac;
            },
            set: function (v) {
                this.i.ac = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrDatePicker.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.resourceStrings && this.resourceStrings.name && this.resourceStrings.name == name) {
                return this.resourceStrings;
            }
            return null;
        };
        IgrDatePicker.prototype.connectedCallback = function () {
            this.i.az();
        };
        /**
         * Clears the input part of the component of any user input
        
        */
        IgrDatePicker.prototype.clear = function () {
            this.i.aw();
        };
        IgrDatePicker.prototype.stepUp = function (datePart, delta) {
            this.i.a9((datePart == null ? null : datePart), delta);
        };
        IgrDatePicker.prototype.stepDown = function (datePart, delta) {
            this.i.a8((datePart == null ? null : datePart), delta);
        };
        /**
         * Selects the text in the input of the component
        
        */
        IgrDatePicker.prototype.select = function () {
            this.i.a4();
        };
        IgrDatePicker.prototype.setSelectionRange = function (start, end, direction) {
            this.i.a7(start, end, (direction == null ? null : direction));
        };
        IgrDatePicker.prototype.setRangeText = function (replacement, start, end, mode) {
            this.i.a6(replacement, start, end, (mode == null ? null : mode));
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrDatePicker.prototype.reportValidity = function () {
            this.i.a3();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrDatePicker.prototype.checkValidity = function () {
            this.i.av();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrDatePicker.prototype.setCustomValidity = function (message) {
            this.i.a5(message);
        };
        Object.defineProperty(IgrDatePicker.prototype, "opening", {
            get: function () {
                return this._opening;
            },
            set: function (ev) {
                var _this = this;
                if (this._opening_wrapped !== null) {
                    this.i.opening = igniteuiReactCore.delegateRemove(this.i.opening, this._opening_wrapped);
                    this._opening_wrapped = null;
                    this._opening = null;
                }
                this._opening = ev;
                this._opening_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpening) {
                        _this.beforeOpening(_this, outerArgs);
                    }
                    if (_this._opening) {
                        _this._opening(_this, outerArgs);
                    }
                };
                this.i.opening = igniteuiReactCore.delegateCombine(this.i.opening, this._opening_wrapped);
                if (this.i.openingChanged) {
                    this.i.openingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "opened", {
            get: function () {
                return this._opened;
            },
            set: function (ev) {
                var _this = this;
                if (this._opened_wrapped !== null) {
                    this.i.opened = igniteuiReactCore.delegateRemove(this.i.opened, this._opened_wrapped);
                    this._opened_wrapped = null;
                    this._opened = null;
                }
                this._opened = ev;
                this._opened_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpened) {
                        _this.beforeOpened(_this, outerArgs);
                    }
                    if (_this._opened) {
                        _this._opened(_this, outerArgs);
                    }
                };
                this.i.opened = igniteuiReactCore.delegateCombine(this.i.opened, this._opened_wrapped);
                if (this.i.openedChanged) {
                    this.i.openedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "closing", {
            get: function () {
                return this._closing;
            },
            set: function (ev) {
                var _this = this;
                if (this._closing_wrapped !== null) {
                    this.i.closing = igniteuiReactCore.delegateRemove(this.i.closing, this._closing_wrapped);
                    this._closing_wrapped = null;
                    this._closing = null;
                }
                this._closing = ev;
                this._closing_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosing) {
                        _this.beforeClosing(_this, outerArgs);
                    }
                    if (_this._closing) {
                        _this._closing(_this, outerArgs);
                    }
                };
                this.i.closing = igniteuiReactCore.delegateCombine(this.i.closing, this._closing_wrapped);
                if (this.i.closingChanged) {
                    this.i.closingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "closed", {
            get: function () {
                return this._closed;
            },
            set: function (ev) {
                var _this = this;
                if (this._closed_wrapped !== null) {
                    this.i.closed = igniteuiReactCore.delegateRemove(this.i.closed, this._closed_wrapped);
                    this._closed_wrapped = null;
                    this._closed = null;
                }
                this._closed = ev;
                this._closed_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosed) {
                        _this.beforeClosed(_this, outerArgs);
                    }
                    if (_this._closed) {
                        _this._closed(_this, outerArgs);
                    }
                };
                this.i.closed = igniteuiReactCore.delegateCombine(this.i.closed, this._closed_wrapped);
                if (this.i.closedChanged) {
                    this.i.closedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentDateValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "input", {
            get: function () {
                return this._input;
            },
            set: function (ev) {
                var _this = this;
                if (this._input_wrapped !== null) {
                    this.i.input = igniteuiReactCore.delegateRemove(this.i.input, this._input_wrapped);
                    this._input_wrapped = null;
                    this._input = null;
                }
                this._input = ev;
                this._input_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentDateValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeInput) {
                        _this.beforeInput(_this, outerArgs);
                    }
                    if (_this._input) {
                        _this._input(_this, outerArgs);
                    }
                };
                this.i.input = igniteuiReactCore.delegateCombine(this.i.input, this._input_wrapped);
                if (this.i.inputChanged) {
                    this.i.inputChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrDatePicker;
    }(IgrBaseComboBoxLike));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDatePickerModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDatePickerModule() {
        }
        IgrDatePickerModule.register = function () {
            IgrBaseComboBoxLikeModule.register();
            IgrCalendarModule.register();
            IgrDateTimeInputModule.register();
            IgrDialogModule.register();
            IgrIconModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDatePicker', IgrDatePicker);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDatePicker', IgrDatePicker);
        };
        return IgrDatePickerModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Banner = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Banner, _super);
        function Banner() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.i = null;
            _this.closing = null;
            _this.closed = null;
            return _this;
        }
        Object.defineProperty(Banner.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Banner.prototype, "nativeElement", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
                this.c.o = this.i;
            },
            enumerable: false,
            configurable: true
        });
        Banner.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Banner.prototype, "f", {
            get: function () {
                var ret_ = this.d.n("open");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("open", value_);
            },
            enumerable: false,
            configurable: true
        });
        Banner.prototype.closingChanged = function () {
            var _this = this;
            if (this.closing != null) {
                this.d.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.d.v("closing");
            }
        };
        Banner.prototype.closedChanged = function () {
            var _this = this;
            if (this.closed != null) {
                this.d.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.d.v("closed");
            }
        };
        Banner.prototype.g = function () {
            return (this.nativeElement.show());
        };
        Banner.prototype.e = function () {
            return (this.nativeElement.hide());
        };
        Banner.prototype.h = function () {
            return (this.nativeElement.toggle());
        };
        Banner.$t = igniteuiReactCore.markType(Banner, 'Banner', BaseElement.$);
        return Banner;
    }(BaseElement));

    /**
     * The `igc-banner` component displays important and concise message(s) for a user to address, that is specific to a page or feature.
    */
    var IgrBanner = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrBanner, _super);
        function IgrBanner(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._closing = null;
            _this._closing_wrapped = null;
            _this._closed = null;
            _this._closed_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcBannerComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrBanner.prototype.createImplementation = function () {
            return new Banner();
        };
        Object.defineProperty(IgrBanner.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBanner.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrBanner._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrBanner.prototype.onImplementationCreated = function () {
        };
        IgrBanner.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrBanner.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrBanner.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-banner", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrBanner.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrBanner.prototype, "open", {
            /**
             * Determines whether the banner is being shown/hidden.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrBanner.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrBanner.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrBanner.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrBanner.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Banner");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrBanner.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Shows the banner if not already shown. Returns `true` when the animation has completed.
        
        */
        IgrBanner.prototype.show = function () {
            var iv = this.i.g();
            return (iv);
        };
        /**
         * Hides the banner if not already hidden. Returns `true` when the animation has completed.
        
        */
        IgrBanner.prototype.hide = function () {
            var iv = this.i.e();
            return (iv);
        };
        /**
         * Toggles between shown/hidden state. Returns `true` when the animation has completed.
        
        */
        IgrBanner.prototype.toggle = function () {
            var iv = this.i.h();
            return (iv);
        };
        Object.defineProperty(IgrBanner.prototype, "closing", {
            get: function () {
                return this._closing;
            },
            set: function (ev) {
                var _this = this;
                if (this._closing_wrapped !== null) {
                    this.i.closing = igniteuiReactCore.delegateRemove(this.i.closing, this._closing_wrapped);
                    this._closing_wrapped = null;
                    this._closing = null;
                }
                this._closing = ev;
                this._closing_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosing) {
                        _this.beforeClosing(_this, outerArgs);
                    }
                    if (_this._closing) {
                        _this._closing(_this, outerArgs);
                    }
                };
                this.i.closing = igniteuiReactCore.delegateCombine(this.i.closing, this._closing_wrapped);
                if (this.i.closingChanged) {
                    this.i.closingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBanner.prototype, "closed", {
            get: function () {
                return this._closed;
            },
            set: function (ev) {
                var _this = this;
                if (this._closed_wrapped !== null) {
                    this.i.closed = igniteuiReactCore.delegateRemove(this.i.closed, this._closed_wrapped);
                    this._closed_wrapped = null;
                    this._closed = null;
                }
                this._closed = ev;
                this._closed_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosed) {
                        _this.beforeClosed(_this, outerArgs);
                    }
                    if (_this._closed) {
                        _this._closed(_this, outerArgs);
                    }
                };
                this.i.closed = igniteuiReactCore.delegateCombine(this.i.closed, this._closed_wrapped);
                if (this.i.closedChanged) {
                    this.i.closedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrBanner;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrBannerModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrBannerModule() {
        }
        IgrBannerModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrBanner', IgrBanner);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrBanner', IgrBanner);
        };
        return IgrBannerModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DividerType = /*@__PURE__*/ (function (DividerType) {
        DividerType[DividerType["Solid"] = 0] = "Solid";
        DividerType[DividerType["Dashed"] = 1] = "Dashed";
        return DividerType;
    })({});
    /**
     * @hidden
     */
    var DividerType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DividerType', 'Solid,0|Dashed,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Divider = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Divider, _super);
        function Divider() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(Divider.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Divider.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.b.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        Divider.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Divider.prototype, "e", {
            get: function () {
                var ret_ = this.c.n("vertical");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("vertical", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Divider.prototype, "d", {
            get: function () {
                var ret_ = this.c.n("middle");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("middle", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Divider.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DividerType_$type, igniteuiReactCore.EnumUtil.getEnumValue(DividerType_$type, this.c.f(DividerType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DividerType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DividerType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Divider.$t = igniteuiReactCore.markType(Divider, 'Divider', BaseElement.$);
        return Divider;
    }(BaseElement));

    /**
     * The igc-divider allows the content author to easily create a horizontal/vertical rule as a break between content to better organize information on a page.
     * @cssproperty --color - Sets the color of the divider.
     * @cssproperty --inset - Shrinks the divider by the given amount from the start. If `middle` is set it will shrink from both sides.
    */
    var IgrDivider = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDivider, _super);
        function IgrDivider(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDividerComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrDivider.prototype.createImplementation = function () {
            return new Divider();
        };
        Object.defineProperty(IgrDivider.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDivider.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrDivider._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDivider.prototype.onImplementationCreated = function () {
        };
        IgrDivider.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDivider.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDivider.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-divider", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDivider.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrDivider.prototype, "vertical", {
            /**
             * Whether to render a vertical divider line.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDivider.prototype, "middle", {
            /**
             * When set and inset is provided, it will shrink the divider line from both sides.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDivider.prototype, "type", {
            /**
             * Whether to render a solid or a dashed divider line.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(DividerType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrDivider.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrDivider.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrDivider.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDivider.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Divider");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDivider.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDivider;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDividerModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDividerModule() {
        }
        IgrDividerModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDivider', IgrDivider);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDivider', IgrDivider);
        };
        return IgrDividerModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ToggleButton = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ToggleButton, _super);
        function ToggleButton() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(ToggleButton.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ToggleButton.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.a.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        ToggleButton.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(ToggleButton.prototype, "g", {
            get: function () {
                var ret_ = this.b.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ToggleButton.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("selected");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("selected", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ToggleButton.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        ToggleButton.prototype.j = function (a) {
            this.nativeElement.focus(this.b.i(a));
        };
        ToggleButton.prototype.h = function () {
            this.nativeElement.blur();
        };
        ToggleButton.prototype.i = function () {
            this.nativeElement.click();
        };
        ToggleButton.$t = igniteuiReactCore.markType(ToggleButton, 'ToggleButton', BaseElement.$);
        return ToggleButton;
    }(BaseElement));

    /**
     * The `igc-toggle-button` wraps a native button element and exposes additional `value` and `selected` properties.
     * It is used in the context of an `igc-button-group` to facilitate the creation of group/toolbar like UX behaviors.
    */
    var IgrToggleButton = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrToggleButton, _super);
        function IgrToggleButton(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcToggleButtonComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrToggleButton.prototype.createImplementation = function () {
            return new ToggleButton();
        };
        Object.defineProperty(IgrToggleButton.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrToggleButton.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrToggleButton._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrToggleButton.prototype.onImplementationCreated = function () {
        };
        IgrToggleButton.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrToggleButton.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrToggleButton.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-toggle-button", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrToggleButton.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrToggleButton.prototype, "value", {
            /**
             * The value attribute of the control.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrToggleButton.prototype, "selected", {
            /**
             * Determines whether the button is selected.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrToggleButton.prototype, "disabled", {
            /**
             * Determines whether the button is disabled.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrToggleButton.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrToggleButton.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrToggleButton.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrToggleButton.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ToggleButton");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrToggleButton.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Sets focus on the button.
        
        */
        IgrToggleButton.prototype.focusComponent = function (options) {
            this.i.j((options == null ? null : options.i));
        };
        /**
         * Removes focus from the button.
        
        */
        IgrToggleButton.prototype.blurComponent = function () {
            this.i.h();
        };
        /**
         * Simulates a mouse click on the element.
        
        */
        IgrToggleButton.prototype.click = function () {
            this.i.i();
        };
        return IgrToggleButton;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrToggleButtonModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrToggleButtonModule() {
        }
        IgrToggleButtonModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrToggleButton', IgrToggleButton);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrToggleButton', IgrToggleButton);
        };
        return IgrToggleButtonModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ButtonGroupAlignment = /*@__PURE__*/ (function (ButtonGroupAlignment) {
        ButtonGroupAlignment[ButtonGroupAlignment["Horizontal"] = 0] = "Horizontal";
        ButtonGroupAlignment[ButtonGroupAlignment["Vertical"] = 1] = "Vertical";
        return ButtonGroupAlignment;
    })({});
    /**
     * @hidden
     */
    var ButtonGroupAlignment_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonGroupAlignment', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ButtonGroupSelection = /*@__PURE__*/ (function (ButtonGroupSelection) {
        ButtonGroupSelection[ButtonGroupSelection["Single"] = 0] = "Single";
        ButtonGroupSelection[ButtonGroupSelection["SingleRequired"] = 1] = "SingleRequired";
        ButtonGroupSelection[ButtonGroupSelection["Multiple"] = 2] = "Multiple";
        return ButtonGroupSelection;
    })({});
    /**
     * @hidden
     */
    var ButtonGroupSelection_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonGroupSelection', 'Single,0|SingleRequired:single-required,1|Multiple,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ButtonGroup, _super);
        function ButtonGroup() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.f = new WCNativeHelper();
            _this.i = null;
            _this.select = null;
            _this.deselect = null;
            return _this;
        }
        Object.defineProperty(ButtonGroup.prototype, "g", {
            get: function () {
                return this.f;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "nativeElement", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
                this.f.o = this.i;
            },
            enumerable: false,
            configurable: true
        });
        ButtonGroup.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(ButtonGroup.prototype, "h", {
            get: function () {
                var ret_ = this.g.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "b", {
            get: function () {
                var ret_ = this.g.n("alignment");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ButtonGroupAlignment_$type, igniteuiReactCore.EnumUtil.getEnumValue(ButtonGroupAlignment_$type, this.g.f(ButtonGroupAlignment_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ButtonGroupAlignment_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ButtonGroupAlignment_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.g.w("alignment", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "c", {
            get: function () {
                var ret_ = this.g.n("selection");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ButtonGroupSelection_$type, igniteuiReactCore.EnumUtil.getEnumValue(ButtonGroupSelection_$type, this.g.f(ButtonGroupSelection_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ButtonGroupSelection_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ButtonGroupSelection_$type, a);
                value_ = WCNativeHelper.getActualName(value_);
                value_ = WCNativeHelper.camel(value_);
                this.g.w("selection", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "a", {
            get: function () {
                var ret_ = this.g.n("selectedItems");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("selectedItems", value_);
            },
            enumerable: false,
            configurable: true
        });
        ButtonGroup.prototype.selectChanged = function () {
            var _this = this;
            if (this.select != null) {
                this.g.s("select", function (a) { return _this.select(_this, ComponentValueChangedEventArgs.a(a)); });
            }
            else {
                this.g.v("select");
            }
        };
        ButtonGroup.prototype.deselectChanged = function () {
            var _this = this;
            if (this.deselect != null) {
                this.g.s("deselect", function (a) { return _this.deselect(_this, ComponentValueChangedEventArgs.a(a)); });
            }
            else {
                this.g.v("deselect");
            }
        };
        ButtonGroup.$t = igniteuiReactCore.markType(ButtonGroup, 'ButtonGroup', BaseElement.$);
        return ButtonGroup;
    }(BaseElement));

    /**
     * The `igc-button-group` groups a series of `igc-toggle-button`s together, exposing features such as layout and selection.
    */
    var IgrButtonGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrButtonGroup, _super);
        function IgrButtonGroup(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._select = null;
            _this._select_wrapped = null;
            _this._deselect = null;
            _this._deselect_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcButtonGroupComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrButtonGroup.prototype.createImplementation = function () {
            return new ButtonGroup();
        };
        Object.defineProperty(IgrButtonGroup.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrButtonGroup._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrButtonGroup.prototype.onImplementationCreated = function () {
        };
        IgrButtonGroup.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrButtonGroup.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrButtonGroup.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-button-group", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrButtonGroup.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrButtonGroup.prototype, "disabled", {
            /**
             * Disables all buttons inside the group.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "alignment", {
            /**
             * Sets the orientation of the buttons in the group.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(ButtonGroupAlignment_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "selection", {
            /**
             * Controls the mode of selection for the button group.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(ButtonGroupSelection_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "selectedItems", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.a = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrButtonGroup.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrButtonGroup.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrButtonGroup.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrButtonGroup.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ButtonGroup");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrButtonGroup.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        Object.defineProperty(IgrButtonGroup.prototype, "select", {
            get: function () {
                return this._select;
            },
            set: function (ev) {
                var _this = this;
                if (this._select_wrapped !== null) {
                    this.i.select = igniteuiReactCore.delegateRemove(this.i.select, this._select_wrapped);
                    this._select_wrapped = null;
                    this._select = null;
                }
                this._select = ev;
                this._select_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelect) {
                        _this.beforeSelect(_this, outerArgs);
                    }
                    if (_this._select) {
                        _this._select(_this, outerArgs);
                    }
                };
                this.i.select = igniteuiReactCore.delegateCombine(this.i.select, this._select_wrapped);
                if (this.i.selectChanged) {
                    this.i.selectChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "deselect", {
            get: function () {
                return this._deselect;
            },
            set: function (ev) {
                var _this = this;
                if (this._deselect_wrapped !== null) {
                    this.i.deselect = igniteuiReactCore.delegateRemove(this.i.deselect, this._deselect_wrapped);
                    this._deselect_wrapped = null;
                    this._deselect = null;
                }
                this._deselect = ev;
                this._deselect_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeDeselect) {
                        _this.beforeDeselect(_this, outerArgs);
                    }
                    if (_this._deselect) {
                        _this._deselect(_this, outerArgs);
                    }
                };
                this.i.deselect = igniteuiReactCore.delegateCombine(this.i.deselect, this._deselect_wrapped);
                if (this.i.deselectChanged) {
                    this.i.deselectChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrButtonGroup;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrButtonGroupModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrButtonGroupModule() {
        }
        IgrButtonGroupModule.register = function () {
            IgrToggleButtonModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButtonGroup', IgrButtonGroup);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButtonGroup', IgrButtonGroup);
        };
        return IgrButtonGroupModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TextareaAutocapitalize = /*@__PURE__*/ (function (TextareaAutocapitalize) {
        TextareaAutocapitalize[TextareaAutocapitalize["None"] = 0] = "None";
        TextareaAutocapitalize[TextareaAutocapitalize["Off"] = 1] = "Off";
        TextareaAutocapitalize[TextareaAutocapitalize["On"] = 2] = "On";
        TextareaAutocapitalize[TextareaAutocapitalize["Sentences"] = 3] = "Sentences";
        TextareaAutocapitalize[TextareaAutocapitalize["Words"] = 4] = "Words";
        TextareaAutocapitalize[TextareaAutocapitalize["Characters"] = 5] = "Characters";
        return TextareaAutocapitalize;
    })({});
    /**
     * @hidden
     */
    var TextareaAutocapitalize_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TextareaAutocapitalize', 'None,0|Off,1|On,2|Sentences,3|Words,4|Characters,5');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TextareaInputMode = /*@__PURE__*/ (function (TextareaInputMode) {
        TextareaInputMode[TextareaInputMode["None"] = 0] = "None";
        TextareaInputMode[TextareaInputMode["Email"] = 1] = "Email";
        TextareaInputMode[TextareaInputMode["Search"] = 2] = "Search";
        TextareaInputMode[TextareaInputMode["Tel"] = 3] = "Tel";
        TextareaInputMode[TextareaInputMode["Text"] = 4] = "Text";
        TextareaInputMode[TextareaInputMode["Url"] = 5] = "Url";
        TextareaInputMode[TextareaInputMode["Decimal"] = 6] = "Decimal";
        TextareaInputMode[TextareaInputMode["Numeric"] = 7] = "Numeric";
        return TextareaInputMode;
    })({});
    /**
     * @hidden
     */
    var TextareaInputMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TextareaInputMode', 'None,0|Email,1|Search,2|Tel,3|Text,4|Url,5|Decimal,6|Numeric,7');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TextareaResize = /*@__PURE__*/ (function (TextareaResize) {
        TextareaResize[TextareaResize["None"] = 0] = "None";
        TextareaResize[TextareaResize["Vertical"] = 1] = "Vertical";
        TextareaResize[TextareaResize["Auto"] = 2] = "Auto";
        return TextareaResize;
    })({});
    /**
     * @hidden
     */
    var TextareaResize_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TextareaResize', 'None,0|Vertical,1|Auto,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TextareaWrap = /*@__PURE__*/ (function (TextareaWrap) {
        TextareaWrap[TextareaWrap["Off"] = 0] = "Off";
        TextareaWrap[TextareaWrap["Hard"] = 1] = "Hard";
        TextareaWrap[TextareaWrap["Soft"] = 2] = "Soft";
        return TextareaWrap;
    })({});
    /**
     * @hidden
     */
    var TextareaWrap_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TextareaWrap', 'Off,0|Hard,1|Soft,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Textarea = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Textarea, _super);
        function Textarea() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.i = new WCNativeHelper();
            _this.u = null;
            _this.input = null;
            _this.change = null;
            _this.focus = null;
            _this.blur = null;
            return _this;
        }
        Object.defineProperty(Textarea.prototype, "j", {
            get: function () {
                return this.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "nativeElement", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                this.u = a;
                this.i.o = this.u;
            },
            enumerable: false,
            configurable: true
        });
        Textarea.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Textarea.prototype, "w", {
            get: function () {
                var ret_ = this.j.n("autocomplete");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("autocomplete", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "c", {
            get: function () {
                var ret_ = this.j.n("autocapitalize");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TextareaAutocapitalize_$type, igniteuiReactCore.EnumUtil.getEnumValue(TextareaAutocapitalize_$type, this.j.f(TextareaAutocapitalize_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TextareaAutocapitalize_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TextareaAutocapitalize_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("autocapitalize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "d", {
            get: function () {
                var ret_ = this.j.n("inputMode");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TextareaInputMode_$type, igniteuiReactCore.EnumUtil.getEnumValue(TextareaInputMode_$type, this.j.f(TextareaInputMode_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TextareaInputMode_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TextareaInputMode_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("inputMode", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "x", {
            get: function () {
                var ret_ = this.j.n("label");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("label", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "r", {
            get: function () {
                var ret_ = this.j.n("maxLength");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("maxLength", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "s", {
            get: function () {
                var ret_ = this.j.n("minLength");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("minLength", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "m", {
            get: function () {
                var ret_ = this.j.n("outlined");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("outlined", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "z", {
            get: function () {
                var ret_ = this.j.n("placeholder");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("placeholder", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "n", {
            get: function () {
                var ret_ = this.j.n("readOnly");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("readOnly", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "e", {
            get: function () {
                var ret_ = this.j.n("resize");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TextareaResize_$type, igniteuiReactCore.EnumUtil.getEnumValue(TextareaResize_$type, this.j.f(TextareaResize_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TextareaResize_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TextareaResize_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("resize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "t", {
            get: function () {
                var ret_ = this.j.n("rows");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("rows", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "aa", {
            get: function () {
                var ret_ = this.j.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "p", {
            get: function () {
                var ret_ = this.j.n("spellcheck");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("spellcheck", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "f", {
            get: function () {
                var ret_ = this.j.n("wrap");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TextareaWrap_$type, igniteuiReactCore.EnumUtil.getEnumValue(TextareaWrap_$type, this.j.f(TextareaWrap_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TextareaWrap_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TextareaWrap_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("wrap", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "q", {
            get: function () {
                var ret_ = this.j.n("validateOnly");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("validateOnly", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "k", {
            get: function () {
                var ret_ = this.j.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "o", {
            get: function () {
                var ret_ = this.j.n("required");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("required", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "y", {
            get: function () {
                var ret_ = this.j.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Textarea.prototype, "l", {
            get: function () {
                var ret_ = this.j.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        Textarea.prototype.inputChanged = function () {
            var _this = this;
            if (this.input != null) {
                this.j.s("input", function (a) { return _this.input(_this, ComponentValueChangedEventArgs.a(a)); });
            }
            else {
                this.j.v("input");
            }
        };
        Textarea.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.j.s("change", function (a) { return _this.change(_this, ComponentValueChangedEventArgs.a(a)); });
            }
            else {
                this.j.v("change");
            }
        };
        Textarea.prototype.focusChanged = function () {
            var _this = this;
            if (this.focus != null) {
                this.j.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.j.v("focus");
            }
        };
        Textarea.prototype.blurChanged = function () {
            var _this = this;
            if (this.blur != null) {
                this.j.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.j.v("blur");
            }
        };
        Textarea.prototype.ae = function () {
            this.nativeElement.connectedCallback();
        };
        Textarea.prototype.af = function () {
            this.nativeElement.disconnectedCallback();
        };
        Textarea.prototype.aj = function () {
            this.nativeElement.select();
        };
        Textarea.prototype.an = function (a, b, c) {
            this.nativeElement.setSelectionRange(this.j.i(a), this.j.i(b), this.j.i(igniteuiReactCore.enumGetBox(SelectionRangeDirection_$type, c)));
        };
        Textarea.prototype.am = function (a, b, c, d) {
            this.nativeElement.setRangeText(this.j.i(a), this.j.i(b), this.j.i(c), this.j.i(igniteuiReactCore.enumGetBox(RangeTextSelectMode_$type, d)));
        };
        Textarea.prototype.ai = function () {
            this.nativeElement.reportValidity();
        };
        Textarea.prototype.ad = function () {
            this.nativeElement.checkValidity();
        };
        Textarea.prototype.ak = function (a) {
            this.nativeElement.setCustomValidity(this.j.i(a));
        };
        Textarea.$t = igniteuiReactCore.markType(Textarea, 'Textarea', BaseElement.$);
        return Textarea;
    }(BaseElement));

    /**
     * This element represents a multi-line plain-text editing control,
     * useful when you want to allow users to enter a sizeable amount of free-form text,
     * for example a comment on a review or feedback form.
    */
    var IgrTextarea = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTextarea, _super);
        function IgrTextarea(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._input = null;
            _this._input_wrapped = null;
            _this._change = null;
            _this._change_wrapped = null;
            _this._focus = null;
            _this._focus_wrapped = null;
            _this._blur = null;
            _this._blur_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcTextareaComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrTextarea.prototype.createImplementation = function () {
            return new Textarea();
        };
        Object.defineProperty(IgrTextarea.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrTextarea._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrTextarea.prototype.onImplementationCreated = function () {
        };
        IgrTextarea.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrTextarea.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrTextarea.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-textarea", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrTextarea.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrTextarea.prototype, "autocomplete", {
            /**
             * Specifies what if any permission the browser has to provide for automated assistance in filling out form field values,
             * as well as guidance to the browser as to the type of information expected in the field.
             * Refer to [this page](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for additional information.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "autocapitalize", {
            /**
             * Controls whether and how text input is automatically capitalized as it is entered/edited by the user.
             * [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize).
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(TextareaAutocapitalize_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "inputMode", {
            /**
             * Hints at the type of data that might be entered by the user while editing the element or its contents.
             * This allows a browser to display an appropriate virtual keyboard.
             * [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureEnum(TextareaInputMode_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "label", {
            /**
             * The label for the control.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "maxLength", {
            /**
             * The maximum number of characters (UTF-16 code units) that the user can enter.
             * If this value isn't specified, the user can enter an unlimited number of characters.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "minLength", {
            /**
             * The minimum number of characters (UTF-16 code units) required that the user should enter.
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "outlined", {
            /**
             * Whether the control will have outlined appearance.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "placeholder", {
            /**
             * The placeholder attribute of the control.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "readOnly", {
            /**
             * Makes the control a readonly field.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "resize", {
            /**
             * Controls whether the control can be resized.
             * When `auto` is set, the control will try to expand and fit its content.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(TextareaResize_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "rows", {
            /**
             * The number of visible text lines for the control. If it is specified, it must be a positive integer.
             * If it is not specified, the default value is 2.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "value", {
            /**
             * The value of the component
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "spellcheck", {
            /**
             * Controls whether the element may be checked for spelling errors.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "wrap", {
            /**
             * Indicates how the control should wrap the value for form submission.
             * Refer to [this page on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attributes)
             * for explanation of the available values.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(TextareaWrap_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "validateOnly", {
            /**
             * Enables validation rules to be evaluated without restricting user input. This applies to the `maxLength` property
             * when it is defined.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "required", {
            /**
             * Makes the control a required field in a form context.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrTextarea.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrTextarea.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrTextarea.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrTextarea.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Textarea");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrTextarea.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrTextarea.prototype.connectedCallback = function () {
            this.i.ae();
        };
        IgrTextarea.prototype.disconnectedCallback = function () {
            this.i.af();
        };
        /**
         * Selects all text within the control.
        
        */
        IgrTextarea.prototype.select = function () {
            this.i.aj();
        };
        IgrTextarea.prototype.setSelectionRange = function (start, end, direction) {
            this.i.an(start, end, (direction == null ? null : direction));
        };
        IgrTextarea.prototype.setRangeText = function (replacement, start, end, selectMode) {
            this.i.am(replacement, start, end, (selectMode == null ? null : selectMode));
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrTextarea.prototype.reportValidity = function () {
            this.i.ai();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrTextarea.prototype.checkValidity = function () {
            this.i.ad();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrTextarea.prototype.setCustomValidity = function (message) {
            this.i.ak(message);
        };
        Object.defineProperty(IgrTextarea.prototype, "input", {
            get: function () {
                return this._input;
            },
            set: function (ev) {
                var _this = this;
                if (this._input_wrapped !== null) {
                    this.i.input = igniteuiReactCore.delegateRemove(this.i.input, this._input_wrapped);
                    this._input_wrapped = null;
                    this._input = null;
                }
                this._input = ev;
                this._input_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeInput) {
                        _this.beforeInput(_this, outerArgs);
                    }
                    if (_this._input) {
                        _this._input(_this, outerArgs);
                    }
                };
                this.i.input = igniteuiReactCore.delegateCombine(this.i.input, this._input_wrapped);
                if (this.i.inputChanged) {
                    this.i.inputChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "focus", {
            get: function () {
                return this._focus;
            },
            set: function (ev) {
                var _this = this;
                if (this._focus_wrapped !== null) {
                    this.i.focus = igniteuiReactCore.delegateRemove(this.i.focus, this._focus_wrapped);
                    this._focus_wrapped = null;
                    this._focus = null;
                }
                this._focus = ev;
                this._focus_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFocus) {
                        _this.beforeFocus(_this, outerArgs);
                    }
                    if (_this._focus) {
                        _this._focus(_this, outerArgs);
                    }
                };
                this.i.focus = igniteuiReactCore.delegateCombine(this.i.focus, this._focus_wrapped);
                if (this.i.focusChanged) {
                    this.i.focusChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTextarea.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            set: function (ev) {
                var _this = this;
                if (this._blur_wrapped !== null) {
                    this.i.blur = igniteuiReactCore.delegateRemove(this.i.blur, this._blur_wrapped);
                    this._blur_wrapped = null;
                    this._blur = null;
                }
                this._blur = ev;
                this._blur_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeBlur) {
                        _this.beforeBlur(_this, outerArgs);
                    }
                    if (_this._blur) {
                        _this._blur(_this, outerArgs);
                    }
                };
                this.i.blur = igniteuiReactCore.delegateCombine(this.i.blur, this._blur_wrapped);
                if (this.i.blurChanged) {
                    this.i.blurChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTextarea;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTextareaModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTextareaModule() {
        }
        IgrTextareaModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTextarea', IgrTextarea);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTextarea', IgrTextarea);
        };
        return IgrTextareaModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var AvatarShape = /*@__PURE__*/ (function (AvatarShape) {
        AvatarShape[AvatarShape["Circle"] = 0] = "Circle";
        AvatarShape[AvatarShape["Rounded"] = 1] = "Rounded";
        AvatarShape[AvatarShape["Square"] = 2] = "Square";
        return AvatarShape;
    })({});
    /**
     * @hidden
     */
    var AvatarShape_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('AvatarShape', 'Circle,0|Rounded,1|Square,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Avatar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Avatar, _super);
        function Avatar() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(Avatar.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Avatar.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.b.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        Avatar.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Avatar.prototype, "h", {
            get: function () {
                var ret_ = this.c.n("src");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("src", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Avatar.prototype, "f", {
            get: function () {
                var ret_ = this.c.n("alt");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("alt", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Avatar.prototype, "g", {
            get: function () {
                var ret_ = this.c.n("initials");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("initials", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Avatar.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("shape");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(AvatarShape_$type, igniteuiReactCore.EnumUtil.getEnumValue(AvatarShape_$type, this.c.f(AvatarShape_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(AvatarShape_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(AvatarShape_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("shape", value_);
            },
            enumerable: false,
            configurable: true
        });
        Avatar.$t = igniteuiReactCore.markType(Avatar, 'Avatar', BaseElement.$);
        return Avatar;
    }(BaseElement));

    /**
     * An avatar component is used as a representation of a user identity
     * typically in a user profile.
    */
    var IgrAvatar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrAvatar, _super);
        function IgrAvatar(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcAvatarComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrAvatar.prototype.createImplementation = function () {
            return new Avatar();
        };
        Object.defineProperty(IgrAvatar.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrAvatar.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrAvatar._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrAvatar.prototype.onImplementationCreated = function () {
        };
        IgrAvatar.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrAvatar.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrAvatar.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-avatar", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrAvatar.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrAvatar.prototype, "src", {
            /**
             * The image source to use.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrAvatar.prototype, "alt", {
            /**
             * Alternative text for the image.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrAvatar.prototype, "initials", {
            /**
             * Initials to use as a fallback when no image is available.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrAvatar.prototype, "shape", {
            /**
             * The shape of the avatar.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(AvatarShape_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrAvatar.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrAvatar.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrAvatar.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrAvatar.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Avatar");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrAvatar.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrAvatar;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrAvatarModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrAvatarModule() {
        }
        IgrAvatarModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrAvatar', IgrAvatar);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrAvatar', IgrAvatar);
        };
        return IgrAvatarModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StyleVariant = /*@__PURE__*/ (function (StyleVariant) {
        StyleVariant[StyleVariant["Primary"] = 0] = "Primary";
        StyleVariant[StyleVariant["Info"] = 1] = "Info";
        StyleVariant[StyleVariant["Success"] = 2] = "Success";
        StyleVariant[StyleVariant["Warning"] = 3] = "Warning";
        StyleVariant[StyleVariant["Danger"] = 4] = "Danger";
        return StyleVariant;
    })({});
    /**
     * @hidden
     */
    var StyleVariant_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StyleVariant', 'Primary,0|Info,1|Success,2|Warning,3|Danger,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var BadgeShape = /*@__PURE__*/ (function (BadgeShape) {
        BadgeShape[BadgeShape["Rounded"] = 0] = "Rounded";
        BadgeShape[BadgeShape["Square"] = 1] = "Square";
        return BadgeShape;
    })({});
    /**
     * @hidden
     */
    var BadgeShape_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('BadgeShape', 'Rounded,0|Square,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Badge = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Badge, _super);
        function Badge() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(Badge.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Badge.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.c.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        Badge.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Badge.prototype, "b", {
            get: function () {
                var ret_ = this.d.n("variant");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StyleVariant_$type, igniteuiReactCore.EnumUtil.getEnumValue(StyleVariant_$type, this.d.f(StyleVariant_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StyleVariant_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StyleVariant_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.d.w("variant", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Badge.prototype, "e", {
            get: function () {
                var ret_ = this.d.n("outlined");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("outlined", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Badge.prototype, "a", {
            get: function () {
                var ret_ = this.d.n("shape");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(BadgeShape_$type, igniteuiReactCore.EnumUtil.getEnumValue(BadgeShape_$type, this.d.f(BadgeShape_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(BadgeShape_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(BadgeShape_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.d.w("shape", value_);
            },
            enumerable: false,
            configurable: true
        });
        Badge.$t = igniteuiReactCore.markType(Badge, 'Badge', BaseElement.$);
        return Badge;
    }(BaseElement));

    /**
     * The badge is a component indicating a status on a related item or an area
     * where some active indication is required.
    */
    var IgrBadge = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrBadge, _super);
        function IgrBadge(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcBadgeComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrBadge.prototype.createImplementation = function () {
            return new Badge();
        };
        Object.defineProperty(IgrBadge.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBadge.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrBadge._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrBadge.prototype.onImplementationCreated = function () {
        };
        IgrBadge.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrBadge.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrBadge.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-badge", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrBadge.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrBadge.prototype, "variant", {
            /**
             * The type of badge.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(StyleVariant_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBadge.prototype, "outlined", {
            /**
             * Sets whether to draw an outlined version of the badge.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBadge.prototype, "shape", {
            /**
             * The shape of the badge.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(BadgeShape_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrBadge.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrBadge.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrBadge.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrBadge.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Badge");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrBadge.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrBadge;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrBadgeModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrBadgeModule() {
        }
        IgrBadgeModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrBadge', IgrBadge);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrBadge', IgrBadge);
        };
        return IgrBadgeModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var RadioGroupAlignment = /*@__PURE__*/ (function (RadioGroupAlignment) {
        RadioGroupAlignment[RadioGroupAlignment["Horizontal"] = 0] = "Horizontal";
        RadioGroupAlignment[RadioGroupAlignment["Vertical"] = 1] = "Vertical";
        return RadioGroupAlignment;
    })({});
    /**
     * @hidden
     */
    var RadioGroupAlignment_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('RadioGroupAlignment', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RadioChangeEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(RadioChangeEventArgsDetail, _super);
        function RadioChangeEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(RadioChangeEventArgsDetail.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RadioChangeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.a.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        RadioChangeEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(RadioChangeEventArgsDetail.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("checked");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("checked", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RadioChangeEventArgsDetail.prototype, "f", {
            get: function () {
                var ret_ = this.b.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        RadioChangeEventArgsDetail.$t = igniteuiReactCore.markType(RadioChangeEventArgsDetail, 'RadioChangeEventArgsDetail');
        return RadioChangeEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrRadioChangeEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrRadioChangeEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrRadioChangeEventArgsDetail.prototype.createImplementation = function () {
            return new RadioChangeEventArgsDetail();
        };
        Object.defineProperty(IgrRadioChangeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadioChangeEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrRadioChangeEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrRadioChangeEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrRadioChangeEventArgsDetail.prototype, "checked", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadioChangeEventArgsDetail.prototype, "value", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrRadioChangeEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        IgrRadioChangeEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrRadioChangeEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RadioChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(RadioChangeEventArgs, _super);
        function RadioChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        RadioChangeEventArgs.a = function (a) {
            return ((function () {
                var $ret = new RadioChangeEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        RadioChangeEventArgs.$t = igniteuiReactCore.markType(RadioChangeEventArgs, 'RadioChangeEventArgs');
        return RadioChangeEventArgs;
    }(igniteuiReactCore.Base));

    var IgrRadioChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrRadioChangeEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrRadioChangeEventArgs.prototype.createImplementation = function () {
            return new RadioChangeEventArgs();
        };
        Object.defineProperty(IgrRadioChangeEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadioChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrRadioChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrRadioChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrRadioChangeEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrRadioChangeEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrRadioChangeEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RadioGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(RadioGroup, _super);
        function RadioGroup() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.change = null;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        RadioGroup.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.d.s("change", function (a) { return _this.change(_this, RadioChangeEventArgs.a(a)); });
            }
            else {
                this.d.v("change");
            }
        };
        Object.defineProperty(RadioGroup.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RadioGroup.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        RadioGroup.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(RadioGroup.prototype, "b", {
            get: function () {
                var ret_ = this.d.n("alignment");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(RadioGroupAlignment_$type, igniteuiReactCore.EnumUtil.getEnumValue(RadioGroupAlignment_$type, this.d.f(RadioGroupAlignment_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(RadioGroupAlignment_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(RadioGroupAlignment_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.d.w("alignment", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RadioGroup.prototype, "g", {
            get: function () {
                var ret_ = this.d.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RadioGroup.prototype, "h", {
            get: function () {
                var ret_ = this.d.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        RadioGroup.$t = igniteuiReactCore.markType(RadioGroup, 'RadioGroup', BaseElement.$);
        return RadioGroup;
    }(BaseElement));

    /**
     * The igc-radio-group component unifies one or more igc-radio buttons.
    */
    var IgrRadioGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrRadioGroup, _super);
        function IgrRadioGroup(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._change = null;
            _this._change_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcRadioGroupComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrRadioGroup.prototype.createImplementation = function () {
            return new RadioGroup();
        };
        Object.defineProperty(IgrRadioGroup.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadioGroup.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrRadioGroup._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrRadioGroup.prototype.onImplementationCreated = function () {
        };
        IgrRadioGroup.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrRadioGroup.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrRadioGroup.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-radio-group", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrRadioGroup.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrRadioGroup.prototype, "alignment", {
            /**
             * Alignment of the radio controls inside this group.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(RadioGroupAlignment_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadioGroup.prototype, "name", {
            /**
             * Gets/Sets the name for all child igc-radio components.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadioGroup.prototype, "value", {
            /**
             * Gets/Sets the checked igc-radio element that matches `value`
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrRadioGroup.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrRadioGroup.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrRadioGroup.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrRadioGroup.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("RadioGroup");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrRadioGroup.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        Object.defineProperty(IgrRadioGroup.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrRadioChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrRadioGroup;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRadioGroupModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRadioGroupModule() {
        }
        IgrRadioGroupModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRadioGroup', IgrRadioGroup);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRadioGroup', IgrRadioGroup);
        };
        return IgrRadioGroupModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var RadioLabelPosition = /*@__PURE__*/ (function (RadioLabelPosition) {
        RadioLabelPosition[RadioLabelPosition["Before"] = 0] = "Before";
        RadioLabelPosition[RadioLabelPosition["After"] = 1] = "After";
        return RadioLabelPosition;
    })({});
    /**
     * @hidden
     */
    var RadioLabelPosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('RadioLabelPosition', 'Before,0|After,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Radio = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Radio, _super);
        function Radio() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.e = new WCNativeHelper();
            _this.k = null;
            _this.change = null;
            _this.focus = null;
            _this.blur = null;
            return _this;
        }
        Object.defineProperty(Radio.prototype, "f", {
            get: function () {
                return this.e;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Radio.prototype, "nativeElement", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                this.k = a;
                this.e.o = this.k;
            },
            enumerable: false,
            configurable: true
        });
        Radio.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Radio.prototype, "n", {
            get: function () {
                var ret_ = this.f.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Radio.prototype, "g", {
            get: function () {
                var ret_ = this.f.n("checked");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("checked", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Radio.prototype, "b", {
            get: function () {
                var ret_ = this.f.n("labelPosition");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(RadioLabelPosition_$type, igniteuiReactCore.EnumUtil.getEnumValue(RadioLabelPosition_$type, this.f.f(RadioLabelPosition_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(RadioLabelPosition_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(RadioLabelPosition_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.f.w("labelPosition", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Radio.prototype, "h", {
            get: function () {
                var ret_ = this.f.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Radio.prototype, "j", {
            get: function () {
                var ret_ = this.f.n("required");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("required", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Radio.prototype, "m", {
            get: function () {
                var ret_ = this.f.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Radio.prototype, "i", {
            get: function () {
                var ret_ = this.f.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        Radio.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.f.s("change", function (a) { return _this.change(_this, RadioChangeEventArgs.a(a)); });
            }
            else {
                this.f.v("change");
            }
        };
        Radio.prototype.focusChanged = function () {
            var _this = this;
            if (this.focus != null) {
                this.f.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.f.v("focus");
            }
        };
        Radio.prototype.blurChanged = function () {
            var _this = this;
            if (this.blur != null) {
                this.f.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.f.v("blur");
            }
        };
        Radio.prototype.s = function () {
            this.nativeElement.click();
        };
        Radio.prototype.u = function (a) {
            this.nativeElement.focus(this.f.i(a));
        };
        Radio.prototype.p = function () {
            this.nativeElement.blur();
        };
        Radio.prototype.w = function (a) {
            this.nativeElement.setCustomValidity(this.f.i(a));
        };
        Radio.prototype.v = function () {
            this.nativeElement.reportValidity();
        };
        Radio.prototype.r = function () {
            this.nativeElement.checkValidity();
        };
        Radio.$t = igniteuiReactCore.markType(Radio, 'Radio', BaseElement.$);
        return Radio;
    }(BaseElement));

    /**

    */
    var IgrRadio = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrRadio, _super);
        function IgrRadio(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._change = null;
            _this._change_wrapped = null;
            _this._focus = null;
            _this._focus_wrapped = null;
            _this._blur = null;
            _this._blur_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcRadioComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrRadio.prototype.createImplementation = function () {
            return new Radio();
        };
        Object.defineProperty(IgrRadio.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrRadio._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrRadio.prototype.onImplementationCreated = function () {
        };
        IgrRadio.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrRadio.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrRadio.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-radio", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrRadio.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrRadio.prototype, "value", {
            /**
             * The value attribute of the control.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "checked", {
            /**
             * The checked state of the control.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "labelPosition", {
            /**
             * The label position of the radio control.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(RadioLabelPosition_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "required", {
            /**
             * Makes the control a required field in a form context.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrRadio.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrRadio.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrRadio.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrRadio.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Radio");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrRadio.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Simulates a click on the radio control.
        
        */
        IgrRadio.prototype.click = function () {
            this.i.s();
        };
        /**
         * Sets focus on the radio control.
        
        */
        IgrRadio.prototype.focusComponent = function (options) {
            this.i.u((options == null ? null : options.i));
        };
        /**
         * Removes focus from the radio control.
        
        */
        IgrRadio.prototype.blurComponent = function () {
            this.i.p();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrRadio.prototype.setCustomValidity = function (message) {
            this.i.w(message);
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrRadio.prototype.reportValidity = function () {
            this.i.v();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrRadio.prototype.checkValidity = function () {
            this.i.r();
        };
        Object.defineProperty(IgrRadio.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrRadioChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "focus", {
            get: function () {
                return this._focus;
            },
            set: function (ev) {
                var _this = this;
                if (this._focus_wrapped !== null) {
                    this.i.focus = igniteuiReactCore.delegateRemove(this.i.focus, this._focus_wrapped);
                    this._focus_wrapped = null;
                    this._focus = null;
                }
                this._focus = ev;
                this._focus_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFocus) {
                        _this.beforeFocus(_this, outerArgs);
                    }
                    if (_this._focus) {
                        _this._focus(_this, outerArgs);
                    }
                };
                this.i.focus = igniteuiReactCore.delegateCombine(this.i.focus, this._focus_wrapped);
                if (this.i.focusChanged) {
                    this.i.focusChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRadio.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            set: function (ev) {
                var _this = this;
                if (this._blur_wrapped !== null) {
                    this.i.blur = igniteuiReactCore.delegateRemove(this.i.blur, this._blur_wrapped);
                    this._blur_wrapped = null;
                    this._blur = null;
                }
                this._blur = ev;
                this._blur_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeBlur) {
                        _this.beforeBlur(_this, outerArgs);
                    }
                    if (_this._blur) {
                        _this._blur(_this, outerArgs);
                    }
                };
                this.i.blur = igniteuiReactCore.delegateCombine(this.i.blur, this._blur_wrapped);
                if (this.i.blurChanged) {
                    this.i.blurChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrRadio;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRadioModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRadioModule() {
        }
        IgrRadioModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRadioChangeEventArgs', IgrRadioChangeEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRadio', IgrRadio);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRadio', IgrRadio);
        };
        return IgrRadioModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Card = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Card, _super);
        function Card() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(Card.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Card.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.a.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        Card.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Card.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("elevated");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("elevated", value_);
            },
            enumerable: false,
            configurable: true
        });
        Card.$t = igniteuiReactCore.markType(Card, 'Card', BaseElement.$);
        return Card;
    }(BaseElement));

    /**
     * A container which wraps different elements related to a single subject
    */
    var IgrCard = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCard, _super);
        function IgrCard(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCardComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCard.prototype.createImplementation = function () {
            return new Card();
        };
        Object.defineProperty(IgrCard.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCard.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCard._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCard.prototype.onImplementationCreated = function () {
        };
        IgrCard.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCard.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCard.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-card", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCard.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCard.prototype, "elevated", {
            /**
             * Sets card elevated style, otherwise card looks outlined.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrCard.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCard.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCard.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCard.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Card");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCard.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCard;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCardModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCardModule() {
        }
        IgrCardModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCard', IgrCard);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCard', IgrCard);
        };
        return IgrCardModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxChangeEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CheckboxChangeEventArgsDetail, _super);
        function CheckboxChangeEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(CheckboxChangeEventArgsDetail.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxChangeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.a.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        CheckboxChangeEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(CheckboxChangeEventArgsDetail.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("checked");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("checked", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxChangeEventArgsDetail.prototype, "f", {
            get: function () {
                var ret_ = this.b.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        CheckboxChangeEventArgsDetail.$t = igniteuiReactCore.markType(CheckboxChangeEventArgsDetail, 'CheckboxChangeEventArgsDetail');
        return CheckboxChangeEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrCheckboxChangeEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckboxChangeEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrCheckboxChangeEventArgsDetail.prototype.createImplementation = function () {
            return new CheckboxChangeEventArgsDetail();
        };
        Object.defineProperty(IgrCheckboxChangeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxChangeEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCheckboxChangeEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrCheckboxChangeEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrCheckboxChangeEventArgsDetail.prototype, "checked", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxChangeEventArgsDetail.prototype, "value", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrCheckboxChangeEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        IgrCheckboxChangeEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCheckboxChangeEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CheckboxChangeEventArgs, _super);
        function CheckboxChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        CheckboxChangeEventArgs.a = function (a) {
            return ((function () {
                var $ret = new CheckboxChangeEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        CheckboxChangeEventArgs.$t = igniteuiReactCore.markType(CheckboxChangeEventArgs, 'CheckboxChangeEventArgs');
        return CheckboxChangeEventArgs;
    }(igniteuiReactCore.Base));

    var IgrCheckboxChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckboxChangeEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrCheckboxChangeEventArgs.prototype.createImplementation = function () {
            return new CheckboxChangeEventArgs();
        };
        Object.defineProperty(IgrCheckboxChangeEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCheckboxChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrCheckboxChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrCheckboxChangeEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrCheckboxChangeEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrCheckboxChangeEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var CheckboxBaseLabelPosition = /*@__PURE__*/ (function (CheckboxBaseLabelPosition) {
        CheckboxBaseLabelPosition[CheckboxBaseLabelPosition["Before"] = 0] = "Before";
        CheckboxBaseLabelPosition[CheckboxBaseLabelPosition["After"] = 1] = "After";
        return CheckboxBaseLabelPosition;
    })({});
    /**
     * @hidden
     */
    var CheckboxBaseLabelPosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CheckboxBaseLabelPosition', 'Before,0|After,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CheckboxBase, _super);
        function CheckboxBase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.e = new WCNativeHelper();
            _this.k = null;
            _this.change = null;
            _this.focus = null;
            _this.blur = null;
            return _this;
        }
        Object.defineProperty(CheckboxBase.prototype, "f", {
            get: function () {
                return this.e;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxBase.prototype, "nativeElement", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                this.k = a;
                this.e.o = this.k;
            },
            enumerable: false,
            configurable: true
        });
        CheckboxBase.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(CheckboxBase.prototype, "n", {
            get: function () {
                var ret_ = this.f.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxBase.prototype, "g", {
            get: function () {
                var ret_ = this.f.n("checked");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("checked", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxBase.prototype, "a", {
            get: function () {
                var ret_ = this.f.n("labelPosition");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(CheckboxBaseLabelPosition_$type, igniteuiReactCore.EnumUtil.getEnumValue(CheckboxBaseLabelPosition_$type, this.f.f(CheckboxBaseLabelPosition_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(CheckboxBaseLabelPosition_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(CheckboxBaseLabelPosition_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.f.w("labelPosition", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxBase.prototype, "h", {
            get: function () {
                var ret_ = this.f.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxBase.prototype, "j", {
            get: function () {
                var ret_ = this.f.n("required");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("required", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxBase.prototype, "m", {
            get: function () {
                var ret_ = this.f.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CheckboxBase.prototype, "i", {
            get: function () {
                var ret_ = this.f.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        CheckboxBase.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.f.s("change", function (a) { return _this.change(_this, CheckboxChangeEventArgs.a(a)); });
            }
            else {
                this.f.v("change");
            }
        };
        CheckboxBase.prototype.focusChanged = function () {
            var _this = this;
            if (this.focus != null) {
                this.f.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.f.v("focus");
            }
        };
        CheckboxBase.prototype.blurChanged = function () {
            var _this = this;
            if (this.blur != null) {
                this.f.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.f.v("blur");
            }
        };
        CheckboxBase.prototype.s = function () {
            this.nativeElement.click();
        };
        CheckboxBase.prototype.u = function (a) {
            this.nativeElement.focus(this.f.i(a));
        };
        CheckboxBase.prototype.p = function () {
            this.nativeElement.blur();
        };
        CheckboxBase.prototype.v = function () {
            this.nativeElement.reportValidity();
        };
        CheckboxBase.prototype.r = function () {
            this.nativeElement.checkValidity();
        };
        CheckboxBase.prototype.w = function (a) {
            this.nativeElement.setCustomValidity(this.f.i(a));
        };
        CheckboxBase.$t = igniteuiReactCore.markType(CheckboxBase, 'CheckboxBase', BaseElement.$);
        return CheckboxBase;
    }(BaseElement));

    var IgrCheckboxBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCheckboxBase, _super);
        function IgrCheckboxBase(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._change = null;
            _this._change_wrapped = null;
            _this._focus = null;
            _this._focus_wrapped = null;
            _this._blur = null;
            _this._blur_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCheckboxBase.prototype.createImplementation = function () {
            return new CheckboxBase();
        };
        Object.defineProperty(IgrCheckboxBase.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCheckboxBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCheckboxBase.prototype.onImplementationCreated = function () {
        };
        IgrCheckboxBase.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCheckboxBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCheckboxBase.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-checkbox-base", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCheckboxBase.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCheckboxBase.prototype, "value", {
            /**
             * The value attribute of the control.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "checked", {
            /**
             * The checked state of the control.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "labelPosition", {
            /**
             * The label position of the control.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(CheckboxBaseLabelPosition_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "required", {
            /**
             * Makes the control a required field in a form context.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrCheckboxBase.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCheckboxBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCheckboxBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCheckboxBase.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CheckboxBase");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCheckboxBase.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Simulates a click on the control.
        
        */
        IgrCheckboxBase.prototype.click = function () {
            this.i.s();
        };
        /**
         * Sets focus on the control.
        
        */
        IgrCheckboxBase.prototype.focusComponent = function (options) {
            this.i.u((options == null ? null : options.i));
        };
        /**
         * Removes focus from the control.
        
        */
        IgrCheckboxBase.prototype.blurComponent = function () {
            this.i.p();
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrCheckboxBase.prototype.reportValidity = function () {
            this.i.v();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrCheckboxBase.prototype.checkValidity = function () {
            this.i.r();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrCheckboxBase.prototype.setCustomValidity = function (message) {
            this.i.w(message);
        };
        Object.defineProperty(IgrCheckboxBase.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrCheckboxChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "focus", {
            get: function () {
                return this._focus;
            },
            set: function (ev) {
                var _this = this;
                if (this._focus_wrapped !== null) {
                    this.i.focus = igniteuiReactCore.delegateRemove(this.i.focus, this._focus_wrapped);
                    this._focus_wrapped = null;
                    this._focus = null;
                }
                this._focus = ev;
                this._focus_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFocus) {
                        _this.beforeFocus(_this, outerArgs);
                    }
                    if (_this._focus) {
                        _this._focus(_this, outerArgs);
                    }
                };
                this.i.focus = igniteuiReactCore.delegateCombine(this.i.focus, this._focus_wrapped);
                if (this.i.focusChanged) {
                    this.i.focusChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxBase.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            set: function (ev) {
                var _this = this;
                if (this._blur_wrapped !== null) {
                    this.i.blur = igniteuiReactCore.delegateRemove(this.i.blur, this._blur_wrapped);
                    this._blur_wrapped = null;
                    this._blur = null;
                }
                this._blur = ev;
                this._blur_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeBlur) {
                        _this.beforeBlur(_this, outerArgs);
                    }
                    if (_this._blur) {
                        _this._blur(_this, outerArgs);
                    }
                };
                this.i.blur = igniteuiReactCore.delegateCombine(this.i.blur, this._blur_wrapped);
                if (this.i.blurChanged) {
                    this.i.blurChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrCheckboxBase;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCheckboxBaseModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckboxBaseModule() {
        }
        IgrCheckboxBaseModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckboxChangeEventArgs', IgrCheckboxChangeEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckboxBase', IgrCheckboxBase);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckboxBase', IgrCheckboxBase);
        };
        return IgrCheckboxBaseModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Checkbox = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Checkbox, _super);
        function Checkbox() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(Checkbox.prototype, "y", {
            get: function () {
                var ret_ = this.f.n("indeterminate");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.f.w("indeterminate", value_);
            },
            enumerable: false,
            configurable: true
        });
        Checkbox.$t = igniteuiReactCore.markType(Checkbox, 'Checkbox', CheckboxBase.$);
        return Checkbox;
    }(CheckboxBase));

    /**
     * A check box allowing single values to be selected/deselected.
    */
    var IgrCheckbox = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCheckbox, _super);
        function IgrCheckbox(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCheckboxComponent);
            return _this;
        }
        IgrCheckbox.prototype.createImplementation = function () {
            return new Checkbox();
        };
        Object.defineProperty(IgrCheckbox.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCheckbox.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrCheckbox.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-checkbox", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCheckbox.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCheckbox.prototype, "indeterminate", {
            /**
             * Draws the checkbox in indeterminate state.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        return IgrCheckbox;
    }(IgrCheckboxBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCheckboxModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckboxModule() {
        }
        IgrCheckboxModule.register = function () {
            IgrCheckboxBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckbox', IgrCheckbox);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckbox', IgrCheckbox);
        };
        return IgrCheckboxModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var InputType = /*@__PURE__*/ (function (InputType) {
        InputType[InputType["Number"] = 0] = "Number";
        InputType[InputType["Email"] = 1] = "Email";
        InputType[InputType["Password"] = 2] = "Password";
        InputType[InputType["Search"] = 3] = "Search";
        InputType[InputType["Tel"] = 4] = "Tel";
        InputType[InputType["Text"] = 5] = "Text";
        InputType[InputType["Url"] = 6] = "Url";
        return InputType;
    })({});
    /**
     * @hidden
     */
    var InputType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('InputType', 'Number,0|Email,1|Password,2|Search,3|Tel,4|Text,5|Url,6');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Input = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Input, _super);
        function Input() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.change = null;
            return _this;
        }
        Input.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.e.s("change", function (a) { return _this.change(_this, ComponentDataValueChangedEventArgs.a(a)); });
            }
            else {
                this.e.v("change");
            }
        };
        Object.defineProperty(Input.prototype, "am", {
            get: function () {
                var ret_ = this.e.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ab", {
            get: function () {
                var ret_ = this.e.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(InputType_$type, igniteuiReactCore.EnumUtil.getEnumValue(InputType_$type, this.e.f(InputType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(InputType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(InputType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ai", {
            get: function () {
                var ret_ = this.e.n("inputMode");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("inputMode", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "al", {
            get: function () {
                var ret_ = this.e.n("pattern");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("pattern", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "af", {
            get: function () {
                var ret_ = this.e.n("minLength");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("minLength", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ae", {
            get: function () {
                var ret_ = this.e.n("maxLength");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("maxLength", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ak", {
            get: function () {
                var ret_ = this.e.n("min");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("min", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "aj", {
            get: function () {
                var ret_ = this.e.n("max");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("max", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ag", {
            get: function () {
                var ret_ = this.e.n("step");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("step", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ac", {
            get: function () {
                var ret_ = this.e.n("autofocus");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("autofocus", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ah", {
            get: function () {
                var ret_ = this.e.n("autocomplete");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("autocomplete", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ad", {
            get: function () {
                var ret_ = this.e.n("validateOnly");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("validateOnly", value_);
            },
            enumerable: false,
            configurable: true
        });
        Input.prototype.ao = function () {
            this.nativeElement.select();
        };
        Input.prototype.aq = function (a) {
            if (a === void 0) {
                a = -1;
            }
            this.nativeElement.stepUp(this.e.i(a));
        };
        Input.prototype.ap = function (a) {
            if (a === void 0) {
                a = -1;
            }
            this.nativeElement.stepDown(this.e.i(a));
        };
        Input.$t = igniteuiReactCore.markType(Input, 'Input', InputBase.$);
        return Input;
    }(InputBase));

    /**

    */
    var IgrInput = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrInput, _super);
        function IgrInput(props) {
            var _this = _super.call(this, props) || this;
            _this._change = null;
            _this._change_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcInputComponent);
            return _this;
        }
        IgrInput.prototype.createImplementation = function () {
            return new Input();
        };
        Object.defineProperty(IgrInput.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrInput.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrInput.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-input", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrInput.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrInput.prototype, "value", {
            /**
             * The value of the control.
            */
            get: function () {
                return this.i.am;
            },
            set: function (v) {
                this.i.am = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "type", {
            /**
             * The type attribute of the control.
            */
            get: function () {
                return this.i.ab;
            },
            set: function (v) {
                this.i.ab = igniteuiReactCore.ensureEnum(InputType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "inputMode", {
            /**
             * The input mode attribute of the control.
             * See [relevant MDN article](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "pattern", {
            /**
             * The pattern attribute of the control.
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "minLength", {
            /**
             * The minimum string length required by the control.
            */
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "maxLength", {
            /**
             * The maximum string length of the control.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "min", {
            /**
             * The min attribute of the control.
            */
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "max", {
            /**
             * The max attribute of the control.
            */
            get: function () {
                return this.i.aj;
            },
            set: function (v) {
                this.i.aj = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "step", {
            /**
             * The step attribute of the control.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "autofocus", {
            /**
             * The autofocus attribute of the control.
            */
            get: function () {
                return this.i.ac;
            },
            set: function (v) {
                this.i.ac = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "autocomplete", {
            /**
             * The autocomplete attribute of the control.
            */
            get: function () {
                return this.i.ah;
            },
            set: function (v) {
                this.i.ah = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "validateOnly", {
            /**
             * Enables validation rules to be evaluated without restricting user input. This applies to the `maxLength` property for
             * string-type inputs or allows spin buttons to exceed the predefined `min/max` limits for number-type inputs.
            */
            get: function () {
                return this.i.ad;
            },
            set: function (v) {
                this.i.ad = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Selects all text within the input.
        
        */
        IgrInput.prototype.select = function () {
            this.i.ao();
        };
        /**
         * Increments the numeric value of the input by one or more steps.
        
        */
        IgrInput.prototype.stepUp = function (n) {
            this.i.aq(n);
        };
        /**
         * Decrements the numeric value of the input by one or more steps.
        
        */
        IgrInput.prototype.stepDown = function (n) {
            this.i.ap(n);
        };
        Object.defineProperty(IgrInput.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentDataValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrInput;
    }(IgrInputBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrInputModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrInputModule() {
        }
        IgrInputModule.register = function () {
            IgrInputBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrInput', IgrInput);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrInput', IgrInput);
        };
        return IgrInputModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ListHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ListHeader, _super);
        function ListHeader() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(ListHeader.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListHeader.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        ListHeader.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        ListHeader.$t = igniteuiReactCore.markType(ListHeader, 'ListHeader', BaseElement.$);
        return ListHeader;
    }(BaseElement));

    /**
     * Header list item.
    */
    var IgrListHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrListHeader, _super);
        function IgrListHeader(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcListHeaderComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrListHeader.prototype.createImplementation = function () {
            return new ListHeader();
        };
        Object.defineProperty(IgrListHeader.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrListHeader.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrListHeader._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrListHeader.prototype.onImplementationCreated = function () {
        };
        IgrListHeader.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrListHeader.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrListHeader.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-list-header", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrListHeader.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrListHeader.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrListHeader.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrListHeader.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrListHeader.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ListHeader");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrListHeader.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrListHeader;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrListHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrListHeaderModule() {
        }
        IgrListHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrListHeader', IgrListHeader);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrListHeader', IgrListHeader);
        };
        return IgrListHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ListItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ListItem, _super);
        function ListItem() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(ListItem.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListItem.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        ListItem.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        ListItem.$t = igniteuiReactCore.markType(ListItem, 'ListItem', BaseElement.$);
        return ListItem;
    }(BaseElement));

    /**
     * The list-item component is a container
     * intended for row items in the list component.
    */
    var IgrListItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrListItem, _super);
        function IgrListItem(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcListItemComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrListItem.prototype.createImplementation = function () {
            return new ListItem();
        };
        Object.defineProperty(IgrListItem.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrListItem.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrListItem._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrListItem.prototype.onImplementationCreated = function () {
        };
        IgrListItem.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrListItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrListItem.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-list-item", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrListItem.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrListItem.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrListItem.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrListItem.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrListItem.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ListItem");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrListItem.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrListItem;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrListItemModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrListItemModule() {
        }
        IgrListItemModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrListItem', IgrListItem);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrListItem', IgrListItem);
        };
        return IgrListItemModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var List = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(List, _super);
        function List() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(List.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(List.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        List.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        List.$t = igniteuiReactCore.markType(List, 'List', BaseElement.$);
        return List;
    }(BaseElement));

    /**
     * Displays a collection of data items in a templatable list format.
    */
    var IgrList = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrList, _super);
        function IgrList(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcListComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrList.prototype.createImplementation = function () {
            return new List();
        };
        Object.defineProperty(IgrList.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrList.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrList._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrList.prototype.onImplementationCreated = function () {
        };
        IgrList.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrList.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrList.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-list", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrList.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrList.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrList.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrList.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrList.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("List");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrList.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrList;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrListModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrListModule() {
        }
        IgrListModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrList', IgrList);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrList', IgrList);
        };
        return IgrListModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Navbar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Navbar, _super);
        function Navbar() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(Navbar.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Navbar.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        Navbar.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Navbar.$t = igniteuiReactCore.markType(Navbar, 'Navbar', BaseElement.$);
        return Navbar;
    }(BaseElement));

    /**
     * A navigation bar component is used to facilitate navigation through
     * a series of hierarchical screens within an app.
    */
    var IgrNavbar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrNavbar, _super);
        function IgrNavbar(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcNavbarComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrNavbar.prototype.createImplementation = function () {
            return new Navbar();
        };
        Object.defineProperty(IgrNavbar.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrNavbar.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrNavbar._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrNavbar.prototype.onImplementationCreated = function () {
        };
        IgrNavbar.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrNavbar.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrNavbar.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-navbar", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrNavbar.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrNavbar.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrNavbar.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrNavbar.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrNavbar.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Navbar");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrNavbar.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrNavbar;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrNavbarModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrNavbarModule() {
        }
        IgrNavbarModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavbar', IgrNavbar);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavbar', IgrNavbar);
        };
        return IgrNavbarModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Ripple = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Ripple, _super);
        function Ripple() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(Ripple.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        Ripple.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Ripple.$t = igniteuiReactCore.markType(Ripple, 'Ripple', BaseElement.$);
        return Ripple;
    }(BaseElement));

    /**
     * A ripple can be applied to an element to represent
     * interactive surface.
    */
    var IgrRipple = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrRipple, _super);
        function IgrRipple(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcRippleComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrRipple.prototype.createImplementation = function () {
            return new Ripple();
        };
        Object.defineProperty(IgrRipple.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrRipple._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrRipple.prototype.onImplementationCreated = function () {
        };
        IgrRipple.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrRipple.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrRipple.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-ripple", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrRipple.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrRipple.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrRipple.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrRipple.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrRipple.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Ripple");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrRipple.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrRipple;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRippleModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRippleModule() {
        }
        IgrRippleModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRipple', IgrRipple);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRipple', IgrRipple);
        };
        return IgrRippleModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Switch = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Switch, _super);
        function Switch() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Switch.$t = igniteuiReactCore.markType(Switch, 'Switch', CheckboxBase.$);
        return Switch;
    }(CheckboxBase));

    /**
     * Similar to a checkbox, a switch controls the state of a single setting on or off.
    */
    var IgrSwitch = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSwitch, _super);
        function IgrSwitch(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSwitchComponent);
            return _this;
        }
        IgrSwitch.prototype.createImplementation = function () {
            return new Switch();
        };
        Object.defineProperty(IgrSwitch.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSwitch.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrSwitch.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-switch", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSwitch.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        return IgrSwitch;
    }(IgrCheckboxBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSwitchModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSwitchModule() {
        }
        IgrSwitchModule.register = function () {
            IgrCheckboxBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSwitch', IgrSwitch);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSwitch', IgrSwitch);
        };
        return IgrSwitchModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IconButtonVariant = /*@__PURE__*/ (function (IconButtonVariant) {
        IconButtonVariant[IconButtonVariant["Flat"] = 0] = "Flat";
        IconButtonVariant[IconButtonVariant["Contained"] = 1] = "Contained";
        IconButtonVariant[IconButtonVariant["Outlined"] = 2] = "Outlined";
        return IconButtonVariant;
    })({});
    /**
     * @hidden
     */
    var IconButtonVariant_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('IconButtonVariant', 'Flat,0|Contained,1|Outlined,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IconButton = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IconButton, _super);
        function IconButton() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(IconButton.prototype, "y", {
            get: function () {
                var ret_ = this.g.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconButton.prototype, "x", {
            get: function () {
                var ret_ = this.g.n("collection");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("collection", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconButton.prototype, "w", {
            get: function () {
                var ret_ = this.g.n("mirrored");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("mirrored", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IconButton.prototype, "v", {
            get: function () {
                var ret_ = this.g.n("variant");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(IconButtonVariant_$type, igniteuiReactCore.EnumUtil.getEnumValue(IconButtonVariant_$type, this.g.f(IconButtonVariant_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(IconButtonVariant_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(IconButtonVariant_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.g.w("variant", value_);
            },
            enumerable: false,
            configurable: true
        });
        IconButton.prototype.z = function (a, b, c) {
            this.nativeElement.registerIcon(this.g.i(a), this.g.i(b), this.g.i(c));
        };
        IconButton.prototype.aa = function (a, b, c) {
            this.nativeElement.registerIconFromText(this.g.i(a), this.g.i(b), this.g.i(c));
        };
        IconButton.$t = igniteuiReactCore.markType(IconButton, 'IconButton', ButtonBase.$);
        return IconButton;
    }(ButtonBase));

    /**

    */
    var IgrIconButton = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrIconButton, _super);
        function IgrIconButton(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcIconButtonComponent);
            return _this;
        }
        IgrIconButton.prototype.createImplementation = function () {
            return new IconButton();
        };
        Object.defineProperty(IgrIconButton.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrIconButton.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrIconButton.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-icon-button", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrIconButton.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrIconButton.prototype, "name", {
            /**
             * The name of the icon.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrIconButton.prototype, "collection", {
            /**
             * The name of the icon collection.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrIconButton.prototype, "mirrored", {
            /**
             * Whether to flip the icon button. Useful for RTL layouts.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrIconButton.prototype, "variant", {
            /**
             * The visual variant of the icon button.
            */
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = igniteuiReactCore.ensureEnum(IconButtonVariant_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrIconButton.prototype.registerIcon = function (name, url, collection) {
            this.i.z(name, url, collection);
        };
        IgrIconButton.prototype.registerIconFromText = function (name, iconText, collection) {
            this.i.aa(name, iconText, collection);
        };
        return IgrIconButton;
    }(IgrButtonBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrIconButtonModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrIconButtonModule() {
        }
        IgrIconButtonModule.register = function () {
            IgrButtonBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrIconButton', IgrIconButton);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrIconButton', IgrIconButton);
        };
        return IgrIconButtonModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NavDrawerHeaderItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(NavDrawerHeaderItem, _super);
        function NavDrawerHeaderItem() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(NavDrawerHeaderItem.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavDrawerHeaderItem.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        NavDrawerHeaderItem.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        NavDrawerHeaderItem.$t = igniteuiReactCore.markType(NavDrawerHeaderItem, 'NavDrawerHeaderItem', BaseElement.$);
        return NavDrawerHeaderItem;
    }(BaseElement));

    /**
     * A wrapper for navigation drawer's header.
    */
    var IgrNavDrawerHeaderItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrNavDrawerHeaderItem, _super);
        function IgrNavDrawerHeaderItem(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcNavDrawerHeaderItemComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrNavDrawerHeaderItem.prototype.createImplementation = function () {
            return new NavDrawerHeaderItem();
        };
        Object.defineProperty(IgrNavDrawerHeaderItem.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrNavDrawerHeaderItem.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrNavDrawerHeaderItem._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrNavDrawerHeaderItem.prototype.onImplementationCreated = function () {
        };
        IgrNavDrawerHeaderItem.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrNavDrawerHeaderItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrNavDrawerHeaderItem.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-nav-drawer-header-item", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrNavDrawerHeaderItem.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrNavDrawerHeaderItem.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrNavDrawerHeaderItem.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrNavDrawerHeaderItem.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrNavDrawerHeaderItem.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("NavDrawerHeaderItem");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrNavDrawerHeaderItem.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrNavDrawerHeaderItem;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrNavDrawerHeaderItemModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrNavDrawerHeaderItemModule() {
        }
        IgrNavDrawerHeaderItemModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavDrawerHeaderItem', IgrNavDrawerHeaderItem);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavDrawerHeaderItem', IgrNavDrawerHeaderItem);
        };
        return IgrNavDrawerHeaderItemModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NavDrawerItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(NavDrawerItem, _super);
        function NavDrawerItem() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(NavDrawerItem.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavDrawerItem.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.a.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        NavDrawerItem.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(NavDrawerItem.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavDrawerItem.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("active");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("active", value_);
            },
            enumerable: false,
            configurable: true
        });
        NavDrawerItem.$t = igniteuiReactCore.markType(NavDrawerItem, 'NavDrawerItem', BaseElement.$);
        return NavDrawerItem;
    }(BaseElement));

    /**
     * Represents a navigation drawer item.
    */
    var IgrNavDrawerItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrNavDrawerItem, _super);
        function IgrNavDrawerItem(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcNavDrawerItemComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrNavDrawerItem.prototype.createImplementation = function () {
            return new NavDrawerItem();
        };
        Object.defineProperty(IgrNavDrawerItem.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrNavDrawerItem.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrNavDrawerItem._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrNavDrawerItem.prototype.onImplementationCreated = function () {
        };
        IgrNavDrawerItem.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrNavDrawerItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrNavDrawerItem.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-nav-drawer-item", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrNavDrawerItem.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrNavDrawerItem.prototype, "disabled", {
            /**
             * Determines whether the drawer is disabled.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrNavDrawerItem.prototype, "active", {
            /**
             * Determines whether the drawer is active.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrNavDrawerItem.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrNavDrawerItem.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrNavDrawerItem.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrNavDrawerItem.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("NavDrawerItem");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrNavDrawerItem.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrNavDrawerItem;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrNavDrawerItemModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrNavDrawerItemModule() {
        }
        IgrNavDrawerItemModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavDrawerItem', IgrNavDrawerItem);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavDrawerItem', IgrNavDrawerItem);
        };
        return IgrNavDrawerItemModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var NavDrawerPosition = /*@__PURE__*/ (function (NavDrawerPosition) {
        NavDrawerPosition[NavDrawerPosition["Bottom"] = 0] = "Bottom";
        NavDrawerPosition[NavDrawerPosition["Top"] = 1] = "Top";
        NavDrawerPosition[NavDrawerPosition["Start"] = 2] = "Start";
        NavDrawerPosition[NavDrawerPosition["End"] = 3] = "End";
        NavDrawerPosition[NavDrawerPosition["Relative"] = 4] = "Relative";
        return NavDrawerPosition;
    })({});
    /**
     * @hidden
     */
    var NavDrawerPosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('NavDrawerPosition', 'Bottom,0|Top,1|Start,2|End,3|Relative,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NavDrawer = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(NavDrawer, _super);
        function NavDrawer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.h = null;
            return _this;
        }
        Object.defineProperty(NavDrawer.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavDrawer.prototype, "nativeElement", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
                this.b.o = this.h;
            },
            enumerable: false,
            configurable: true
        });
        NavDrawer.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(NavDrawer.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("position");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(NavDrawerPosition_$type, igniteuiReactCore.EnumUtil.getEnumValue(NavDrawerPosition_$type, this.c.f(NavDrawerPosition_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(NavDrawerPosition_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(NavDrawerPosition_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("position", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavDrawer.prototype, "e", {
            get: function () {
                var ret_ = this.c.n("open");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("open", value_);
            },
            enumerable: false,
            configurable: true
        });
        NavDrawer.prototype.f = function () {
            return (this.nativeElement.show());
        };
        NavDrawer.prototype.d = function () {
            return (this.nativeElement.hide());
        };
        NavDrawer.prototype.g = function () {
            return (this.nativeElement.toggle());
        };
        NavDrawer.$t = igniteuiReactCore.markType(NavDrawer, 'NavDrawer', BaseElement.$);
        return NavDrawer;
    }(BaseElement));

    /**
     * Represents a side navigation container that provides
     * quick access between views.
    */
    var IgrNavDrawer = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrNavDrawer, _super);
        function IgrNavDrawer(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcNavDrawerComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrNavDrawer.prototype.createImplementation = function () {
            return new NavDrawer();
        };
        Object.defineProperty(IgrNavDrawer.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrNavDrawer.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrNavDrawer._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrNavDrawer.prototype.onImplementationCreated = function () {
        };
        IgrNavDrawer.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrNavDrawer.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrNavDrawer.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-nav-drawer", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrNavDrawer.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrNavDrawer.prototype, "position", {
            /**
             * The position of the drawer.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(NavDrawerPosition_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrNavDrawer.prototype, "open", {
            /**
             * Determines whether the drawer is opened.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrNavDrawer.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrNavDrawer.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrNavDrawer.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrNavDrawer.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("NavDrawer");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrNavDrawer.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Opens the drawer.
        
        */
        IgrNavDrawer.prototype.show = function () {
            var iv = this.i.f();
            return (iv);
        };
        /**
         * Closes the drawer.
        
        */
        IgrNavDrawer.prototype.hide = function () {
            var iv = this.i.d();
            return (iv);
        };
        /**
         * Toggles the open state of the drawer.
        
        */
        IgrNavDrawer.prototype.toggle = function () {
            var iv = this.i.g();
            return (iv);
        };
        return IgrNavDrawer;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrNavDrawerModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrNavDrawerModule() {
        }
        IgrNavDrawerModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavDrawer', IgrNavDrawer);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrNavDrawer', IgrNavDrawer);
        };
        return IgrNavDrawerModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var CardActionsOrientation = /*@__PURE__*/ (function (CardActionsOrientation) {
        CardActionsOrientation[CardActionsOrientation["Horizontal"] = 0] = "Horizontal";
        CardActionsOrientation[CardActionsOrientation["Vertical"] = 1] = "Vertical";
        return CardActionsOrientation;
    })({});
    /**
     * @hidden
     */
    var CardActionsOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CardActionsOrientation', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CardActions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CardActions, _super);
        function CardActions() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(CardActions.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardActions.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.b.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        CardActions.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(CardActions.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("orientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(CardActionsOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(CardActionsOrientation_$type, this.c.f(CardActionsOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(CardActionsOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(CardActionsOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("orientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        CardActions.$t = igniteuiReactCore.markType(CardActions, 'CardActions', BaseElement.$);
        return CardActions;
    }(BaseElement));

    /**
     * A container for card action items like buttons
    */
    var IgrCardActions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCardActions, _super);
        function IgrCardActions(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCardActionsComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCardActions.prototype.createImplementation = function () {
            return new CardActions();
        };
        Object.defineProperty(IgrCardActions.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCardActions.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCardActions._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCardActions.prototype.onImplementationCreated = function () {
        };
        IgrCardActions.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCardActions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCardActions.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-card-actions", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCardActions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCardActions.prototype, "orientation", {
            /**
             * The orientation of the actions.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(CardActionsOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrCardActions.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCardActions.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCardActions.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCardActions.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CardActions");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCardActions.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCardActions;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCardActionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCardActionsModule() {
        }
        IgrCardActionsModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardActions', IgrCardActions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardActions', IgrCardActions);
        };
        return IgrCardActionsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CardContent = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CardContent, _super);
        function CardContent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(CardContent.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardContent.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        CardContent.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        CardContent.$t = igniteuiReactCore.markType(CardContent, 'CardContent', BaseElement.$);
        return CardContent;
    }(BaseElement));

    /**
     * A container for card's text content
    */
    var IgrCardContent = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCardContent, _super);
        function IgrCardContent(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCardContentComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCardContent.prototype.createImplementation = function () {
            return new CardContent();
        };
        Object.defineProperty(IgrCardContent.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCardContent.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCardContent._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCardContent.prototype.onImplementationCreated = function () {
        };
        IgrCardContent.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCardContent.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCardContent.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-card-content", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCardContent.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrCardContent.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCardContent.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCardContent.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCardContent.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CardContent");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCardContent.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCardContent;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCardContentModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCardContentModule() {
        }
        IgrCardContentModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardContent', IgrCardContent);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardContent', IgrCardContent);
        };
        return IgrCardContentModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CardHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CardHeader, _super);
        function CardHeader() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(CardHeader.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardHeader.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        CardHeader.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        CardHeader.$t = igniteuiReactCore.markType(CardHeader, 'CardHeader', BaseElement.$);
        return CardHeader;
    }(BaseElement));

    /**
     * A container for card's header
    */
    var IgrCardHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCardHeader, _super);
        function IgrCardHeader(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCardHeaderComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCardHeader.prototype.createImplementation = function () {
            return new CardHeader();
        };
        Object.defineProperty(IgrCardHeader.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCardHeader.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCardHeader._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCardHeader.prototype.onImplementationCreated = function () {
        };
        IgrCardHeader.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCardHeader.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCardHeader.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-card-header", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCardHeader.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrCardHeader.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCardHeader.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCardHeader.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCardHeader.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CardHeader");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCardHeader.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCardHeader;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCardHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCardHeaderModule() {
        }
        IgrCardHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardHeader', IgrCardHeader);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardHeader', IgrCardHeader);
        };
        return IgrCardHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CardMedia = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CardMedia, _super);
        function CardMedia() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(CardMedia.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CardMedia.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        CardMedia.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        CardMedia.$t = igniteuiReactCore.markType(CardMedia, 'CardMedia', BaseElement.$);
        return CardMedia;
    }(BaseElement));

    /**
     * A container for card's media - could be an image, gif, video
    */
    var IgrCardMedia = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCardMedia, _super);
        function IgrCardMedia(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCardMediaComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCardMedia.prototype.createImplementation = function () {
            return new CardMedia();
        };
        Object.defineProperty(IgrCardMedia.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCardMedia.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCardMedia._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCardMedia.prototype.onImplementationCreated = function () {
        };
        IgrCardMedia.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCardMedia.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCardMedia.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-card-media", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCardMedia.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrCardMedia.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCardMedia.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCardMedia.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCardMedia.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CardMedia");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCardMedia.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCardMedia;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCardMediaModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCardMediaModule() {
        }
        IgrCardMediaModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardMedia', IgrCardMedia);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCardMedia', IgrCardMedia);
        };
        return IgrCardMediaModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var SliderBaseTickOrientation = /*@__PURE__*/ (function (SliderBaseTickOrientation) {
        SliderBaseTickOrientation[SliderBaseTickOrientation["Start"] = 0] = "Start";
        SliderBaseTickOrientation[SliderBaseTickOrientation["End"] = 1] = "End";
        SliderBaseTickOrientation[SliderBaseTickOrientation["Mirror"] = 2] = "Mirror";
        return SliderBaseTickOrientation;
    })({});
    /**
     * @hidden
     */
    var SliderBaseTickOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SliderBaseTickOrientation', 'Start,0|End,1|Mirror,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TickLabelRotation = /*@__PURE__*/ (function (TickLabelRotation) {
        TickLabelRotation[TickLabelRotation["Zero"] = 0] = "Zero";
        TickLabelRotation[TickLabelRotation["Ninety"] = 1] = "Ninety";
        TickLabelRotation[TickLabelRotation["NegativeNinety"] = 2] = "NegativeNinety";
        return TickLabelRotation;
    })({});
    /**
     * @hidden
     */
    var TickLabelRotation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TickLabelRotation', 'Zero:0,0|Ninety:90,1|NegativeNinety:-90,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SliderBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SliderBase, _super);
        function SliderBase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.r = null;
            return _this;
        }
        Object.defineProperty(SliderBase.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "nativeElement", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                this.r = a;
                this.d.o = this.r;
            },
            enumerable: false,
            configurable: true
        });
        SliderBase.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(SliderBase.prototype, "m", {
            get: function () {
                var ret_ = this.e.n("min");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("min", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "l", {
            get: function () {
                var ret_ = this.e.n("max");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("max", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "k", {
            get: function () {
                var ret_ = this.e.n("lowerBound");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("lowerBound", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "q", {
            get: function () {
                var ret_ = this.e.n("upperBound");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("upperBound", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "f", {
            get: function () {
                var ret_ = this.e.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "g", {
            get: function () {
                var ret_ = this.e.n("discreteTrack");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("discreteTrack", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "j", {
            get: function () {
                var ret_ = this.e.n("hideTooltip");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("hideTooltip", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "p", {
            get: function () {
                var ret_ = this.e.n("step");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("step", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "n", {
            get: function () {
                var ret_ = this.e.n("primaryTicks");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("primaryTicks", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "o", {
            get: function () {
                var ret_ = this.e.n("secondaryTicks");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("secondaryTicks", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "b", {
            get: function () {
                var ret_ = this.e.n("tickOrientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(SliderBaseTickOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(SliderBaseTickOrientation_$type, this.e.f(SliderBaseTickOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(SliderBaseTickOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(SliderBaseTickOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("tickOrientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "h", {
            get: function () {
                var ret_ = this.e.n("hidePrimaryLabels");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("hidePrimaryLabels", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "i", {
            get: function () {
                var ret_ = this.e.n("hideSecondaryLabels");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("hideSecondaryLabels", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "t", {
            get: function () {
                var ret_ = this.e.n("locale");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("locale", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "u", {
            get: function () {
                var ret_ = this.e.n("valueFormat");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("valueFormat", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderBase.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("tickLabelRotation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TickLabelRotation_$type, igniteuiReactCore.EnumUtil.getEnumValue(TickLabelRotation_$type, this.e.f(TickLabelRotation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TickLabelRotation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TickLabelRotation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("tickLabelRotation", value_);
            },
            enumerable: false,
            configurable: true
        });
        SliderBase.prototype.v = function () {
            this.nativeElement.connectedCallback();
        };
        Object.defineProperty(SliderBase.prototype, "a", {
            get: function () {
                var ret_ = this.e.n("valueFormatOptions");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("valueFormatOptions", value_);
            },
            enumerable: false,
            configurable: true
        });
        SliderBase.$t = igniteuiReactCore.markType(SliderBase, 'SliderBase', BaseElement.$);
        return SliderBase;
    }(BaseElement));

    var IgrSliderBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSliderBase, _super);
        function IgrSliderBase(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrSliderBase.prototype.createImplementation = function () {
            return new SliderBase();
        };
        Object.defineProperty(IgrSliderBase.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrSliderBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrSliderBase.prototype.onImplementationCreated = function () {
        };
        IgrSliderBase.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrSliderBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrSliderBase.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-slider-base", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSliderBase.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrSliderBase.prototype, "min", {
            /**
             * The minimum value of the slider scale. Defaults to 0.
             * If `min` is greater than `max` the call is a no-op.
             * If `labels` are provided (projected), then `min` is always set to 0.
             * If `lowerBound` ends up being less than than the current `min` value,
             * it is automatically assigned the new `min` value.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "max", {
            /**
             * The maximum value of the slider scale. Defaults to 100.
             * If `max` is less than `min` the call is a no-op.
             * If `labels` are provided (projected), then `max` is always set to
             * the number of labels.
             * If `upperBound` ends up being greater than than the current `max` value,
             * it is automatically assigned the new `max` value.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "lowerBound", {
            /**
             * The lower bound of the slider value. If not set, the `min` value is applied.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "upperBound", {
            /**
             * The upper bound of the slider value. If not set, the `max` value is applied.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "disabled", {
            /**
             * Disables the UI interactions of the slider.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "discreteTrack", {
            /**
             * Marks the slider track as discrete so it displays the steps.
             * If the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "hideTooltip", {
            /**
             * Hides the thumb tooltip.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "step", {
            /**
             * Specifies the granularity that the value must adhere to.
             * If set to 0 no stepping is implied and any value in the range is allowed.
             * If `labels` are provided (projected) then the step is always assumed to be 1 since it is a discrete slider.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "primaryTicks", {
            /**
             * The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "secondaryTicks", {
            /**
             * The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "tickOrientation", {
            /**
             * Changes the orientation of the ticks.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(SliderBaseTickOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "hidePrimaryLabels", {
            /**
             * Hides the primary tick labels.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "hideSecondaryLabels", {
            /**
             * Hides the secondary tick labels.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "locale", {
            /**
             * The locale used to format the thumb and tick label values in the slider.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "valueFormat", {
            /**
             * String format used for the thumb and tick label values in the slider.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "tickLabelRotation", {
            /**
             * The degrees for the rotation of the tick labels. Defaults to 0.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(TickLabelRotation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderBase.prototype, "valueFormatOptions", {
            /**
             * Number format options used for the thumb and tick label values in the slider.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrSliderBase.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.valueFormatOptions && this.valueFormatOptions.name && this.valueFormatOptions.name == name) {
                return this.valueFormatOptions;
            }
            return null;
        };
        Object.defineProperty(IgrSliderBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrSliderBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrSliderBase.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("SliderBase");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrSliderBase.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrSliderBase.prototype.connectedCallback = function () {
            this.i.v();
        };
        return IgrSliderBase;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSliderBaseModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSliderBaseModule() {
        }
        IgrSliderBaseModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSliderBase', IgrSliderBase);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSliderBase', IgrSliderBase);
        };
        return IgrSliderBaseModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RangeSliderValue = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(RangeSliderValue, _super);
        function RangeSliderValue() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this.b = 0;
            return _this;
        }
        RangeSliderValue.$t = igniteuiReactCore.markType(RangeSliderValue, 'RangeSliderValue');
        return RangeSliderValue;
    }(igniteuiReactCore.Base));

    var IgrRangeSliderValue = /** @class */ /*@__PURE__*/ (function () {
        function IgrRangeSliderValue() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrRangeSliderValue.prototype.createImplementation = function () {
            return new RangeSliderValue();
        };
        Object.defineProperty(IgrRangeSliderValue.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSliderValue.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrRangeSliderValue.prototype.onImplementationCreated = function () {
        };
        IgrRangeSliderValue.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrRangeSliderValue.prototype, "lower", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSliderValue.prototype, "upper", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrRangeSliderValue.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrRangeSliderValue;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RangeSliderValueEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(RangeSliderValueEventArgs, _super);
        function RangeSliderValueEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        RangeSliderValueEventArgs.b = function (a) {
            return ((function () {
                var $ret = new RangeSliderValueEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        RangeSliderValueEventArgs.$t = igniteuiReactCore.markType(RangeSliderValueEventArgs, 'RangeSliderValueEventArgs');
        return RangeSliderValueEventArgs;
    }(igniteuiReactCore.Base));

    var IgrRangeSliderValueEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrRangeSliderValueEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrRangeSliderValueEventArgs.prototype.createImplementation = function () {
            return new RangeSliderValueEventArgs();
        };
        Object.defineProperty(IgrRangeSliderValueEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSliderValueEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrRangeSliderValueEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrRangeSliderValueEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrRangeSliderValueEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrRangeSliderValue();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrRangeSliderValueEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RangeSlider = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(RangeSlider, _super);
        function RangeSlider() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.input = null;
            _this.change = null;
            return _this;
        }
        Object.defineProperty(RangeSlider.prototype, "z", {
            get: function () {
                var ret_ = this.e.n("lower");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("lower", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RangeSlider.prototype, "aa", {
            get: function () {
                var ret_ = this.e.n("upper");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("upper", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RangeSlider.prototype, "ab", {
            get: function () {
                var ret_ = this.e.n("thumbLabelLower");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("thumbLabelLower", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RangeSlider.prototype, "ac", {
            get: function () {
                var ret_ = this.e.n("thumbLabelUpper");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("thumbLabelUpper", value_);
            },
            enumerable: false,
            configurable: true
        });
        RangeSlider.prototype.inputChanged = function () {
            var _this = this;
            if (this.input != null) {
                this.e.s("input", function (a) { return _this.input(_this, RangeSliderValueEventArgs.b(a)); });
            }
            else {
                this.e.v("input");
            }
        };
        RangeSlider.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.e.s("change", function (a) { return _this.change(_this, RangeSliderValueEventArgs.b(a)); });
            }
            else {
                this.e.v("change");
            }
        };
        RangeSlider.$t = igniteuiReactCore.markType(RangeSlider, 'RangeSlider', SliderBase.$);
        return RangeSlider;
    }(SliderBase));

    /**
     * A range slider component used to select two numeric values within a range.
    */
    var IgrRangeSlider = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrRangeSlider, _super);
        function IgrRangeSlider(props) {
            var _this = _super.call(this, props) || this;
            _this._input = null;
            _this._input_wrapped = null;
            _this._change = null;
            _this._change_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcRangeSliderComponent);
            return _this;
        }
        IgrRangeSlider.prototype.createImplementation = function () {
            return new RangeSlider();
        };
        Object.defineProperty(IgrRangeSlider.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrRangeSlider.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrRangeSlider.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-range-slider", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrRangeSlider.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrRangeSlider.prototype, "lower", {
            /**
             * The current value of the lower thumb.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSlider.prototype, "upper", {
            /**
             * The current value of the upper thumb.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSlider.prototype, "thumbLabelLower", {
            /**
             * The aria label for the lower thumb.
            */
            get: function () {
                return this.i.ab;
            },
            set: function (v) {
                this.i.ab = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSlider.prototype, "thumbLabelUpper", {
            /**
             * The aria label for the upper thumb.
            */
            get: function () {
                return this.i.ac;
            },
            set: function (v) {
                this.i.ac = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSlider.prototype, "input", {
            /**
             * Emitted when a value is changed via thumb drag or keyboard interaction.
            */
            get: function () {
                return this._input;
            },
            set: function (ev) {
                var _this = this;
                if (this._input_wrapped !== null) {
                    this.i.input = igniteuiReactCore.delegateRemove(this.i.input, this._input_wrapped);
                    this._input_wrapped = null;
                    this._input = null;
                }
                this._input = ev;
                this._input_wrapped = function (o, e) {
                    var outerArgs = new IgrRangeSliderValueEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeInput) {
                        _this.beforeInput(_this, outerArgs);
                    }
                    if (_this._input) {
                        _this._input(_this, outerArgs);
                    }
                };
                this.i.input = igniteuiReactCore.delegateCombine(this.i.input, this._input_wrapped);
                if (this.i.inputChanged) {
                    this.i.inputChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRangeSlider.prototype, "change", {
            /**
             * Emitted when a value change is committed on a thumb drag end or keyboard interaction.
            */
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrRangeSliderValueEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrRangeSlider;
    }(IgrSliderBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRangeSliderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRangeSliderModule() {
        }
        IgrRangeSliderModule.register = function () {
            IgrSliderBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRangeSliderValueEventArgs', IgrRangeSliderValueEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRangeSlider', IgrRangeSlider);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRangeSlider', IgrRangeSlider);
        };
        return IgrRangeSliderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NumberEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(NumberEventArgs, _super);
        function NumberEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = 0;
            return _this;
        }
        NumberEventArgs.a = function (a) {
            return ((function () {
                var $ret = new NumberEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        NumberEventArgs.$t = igniteuiReactCore.markType(NumberEventArgs, 'NumberEventArgs');
        return NumberEventArgs;
    }(igniteuiReactCore.Base));

    var IgrNumberEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrNumberEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrNumberEventArgs.prototype.createImplementation = function () {
            return new NumberEventArgs();
        };
        Object.defineProperty(IgrNumberEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrNumberEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrNumberEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrNumberEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrNumberEventArgs.prototype, "detail", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: false,
            configurable: true
        });
        return IgrNumberEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Slider = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Slider, _super);
        function Slider() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.input = null;
            _this.change = null;
            return _this;
        }
        Object.defineProperty(Slider.prototype, "aa", {
            get: function () {
                var ret_ = this.e.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Slider.prototype, "ab", {
            get: function () {
                var ret_ = this.e.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Slider.prototype, "z", {
            get: function () {
                var ret_ = this.e.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        Slider.prototype.inputChanged = function () {
            var _this = this;
            if (this.input != null) {
                this.e.s("input", function (a) { return _this.input(_this, NumberEventArgs.a(a)); });
            }
            else {
                this.e.v("input");
            }
        };
        Slider.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.e.s("change", function (a) { return _this.change(_this, NumberEventArgs.a(a)); });
            }
            else {
                this.e.v("change");
            }
        };
        Slider.prototype.ai = function (a) {
            if (a === void 0) {
                a = -1;
            }
            this.nativeElement.stepUp(this.e.i(a));
        };
        Slider.prototype.ah = function (a) {
            if (a === void 0) {
                a = -1;
            }
            this.nativeElement.stepDown(this.e.i(a));
        };
        Slider.prototype.af = function () {
            this.nativeElement.reportValidity();
        };
        Slider.prototype.ad = function () {
            this.nativeElement.checkValidity();
        };
        Slider.prototype.ag = function (a) {
            this.nativeElement.setCustomValidity(this.e.i(a));
        };
        Slider.$t = igniteuiReactCore.markType(Slider, 'Slider', SliderBase.$);
        return Slider;
    }(SliderBase));

    /**
     * A slider component used to select numeric value within a range.
    */
    var IgrSlider = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSlider, _super);
        function IgrSlider(props) {
            var _this = _super.call(this, props) || this;
            _this._input = null;
            _this._input_wrapped = null;
            _this._change = null;
            _this._change_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSliderComponent);
            return _this;
        }
        IgrSlider.prototype.createImplementation = function () {
            return new Slider();
        };
        Object.defineProperty(IgrSlider.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSlider.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrSlider.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-slider", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSlider.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrSlider.prototype, "value", {
            /**
             * The current value of the component.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSlider.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.ab;
            },
            set: function (v) {
                this.i.ab = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSlider.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Increments the value of the slider by `stepIncrement * step`, where `stepIncrement` defaults to 1.
         * stepIncrement Optional step increment. If no parameter is passed, it defaults to 1.
        
        * @param stepIncrement  * Optional step increment. If no parameter is passed, it defaults to 1.
        */
        IgrSlider.prototype.stepUp = function (stepIncrement) {
            this.i.ai(stepIncrement);
        };
        /**
         * Decrements the value of the slider by `stepDecrement * step`, where `stepDecrement` defaults to 1.
         * stepDecrement Optional step decrement. If no parameter is passed, it defaults to 1.
        
        * @param stepDecrement  * Optional step decrement. If no parameter is passed, it defaults to 1.
        */
        IgrSlider.prototype.stepDown = function (stepDecrement) {
            this.i.ah(stepDecrement);
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrSlider.prototype.reportValidity = function () {
            this.i.af();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrSlider.prototype.checkValidity = function () {
            this.i.ad();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrSlider.prototype.setCustomValidity = function (message) {
            this.i.ag(message);
        };
        Object.defineProperty(IgrSlider.prototype, "input", {
            /**
             * Emitted when a value is changed via thumb drag or keyboard interaction.
            */
            get: function () {
                return this._input;
            },
            set: function (ev) {
                var _this = this;
                if (this._input_wrapped !== null) {
                    this.i.input = igniteuiReactCore.delegateRemove(this.i.input, this._input_wrapped);
                    this._input_wrapped = null;
                    this._input = null;
                }
                this._input = ev;
                this._input_wrapped = function (o, e) {
                    var outerArgs = new IgrNumberEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeInput) {
                        _this.beforeInput(_this, outerArgs);
                    }
                    if (_this._input) {
                        _this._input(_this, outerArgs);
                    }
                };
                this.i.input = igniteuiReactCore.delegateCombine(this.i.input, this._input_wrapped);
                if (this.i.inputChanged) {
                    this.i.inputChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSlider.prototype, "change", {
            /**
             * Emitted when a value change is committed on a thumb drag end or keyboard interaction.
            */
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrNumberEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrSlider;
    }(IgrSliderBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSliderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSliderModule() {
        }
        IgrSliderModule.register = function () {
            IgrSliderBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSlider', IgrSlider);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSlider', IgrSlider);
        };
        return IgrSliderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SliderLabel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SliderLabel, _super);
        function SliderLabel() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(SliderLabel.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SliderLabel.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        SliderLabel.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        SliderLabel.$t = igniteuiReactCore.markType(SliderLabel, 'SliderLabel', BaseElement.$);
        return SliderLabel;
    }(BaseElement));

    var IgrSliderLabel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSliderLabel, _super);
        function IgrSliderLabel(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSliderLabelComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrSliderLabel.prototype.createImplementation = function () {
            return new SliderLabel();
        };
        Object.defineProperty(IgrSliderLabel.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSliderLabel.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrSliderLabel._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrSliderLabel.prototype.onImplementationCreated = function () {
        };
        IgrSliderLabel.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrSliderLabel.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrSliderLabel.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-slider-label", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSliderLabel.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrSliderLabel.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrSliderLabel.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrSliderLabel.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrSliderLabel.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("SliderLabel");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrSliderLabel.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrSliderLabel;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSliderLabelModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSliderLabelModule() {
        }
        IgrSliderLabelModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSliderLabel', IgrSliderLabel);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSliderLabel', IgrSliderLabel);
        };
        return IgrSliderLabelModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ComponentBoolValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ComponentBoolValueChangedEventArgs, _super);
        function ComponentBoolValueChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = false;
            return _this;
        }
        ComponentBoolValueChangedEventArgs.a = function (a) {
            return ((function () {
                var $ret = new ComponentBoolValueChangedEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        ComponentBoolValueChangedEventArgs.$t = igniteuiReactCore.markType(ComponentBoolValueChangedEventArgs, 'ComponentBoolValueChangedEventArgs');
        return ComponentBoolValueChangedEventArgs;
    }(igniteuiReactCore.Base));

    var IgrComponentBoolValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrComponentBoolValueChangedEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrComponentBoolValueChangedEventArgs.prototype.createImplementation = function () {
            return new ComponentBoolValueChangedEventArgs();
        };
        Object.defineProperty(IgrComponentBoolValueChangedEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComponentBoolValueChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrComponentBoolValueChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrComponentBoolValueChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrComponentBoolValueChangedEventArgs.prototype, "detail", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        return IgrComponentBoolValueChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Chip = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Chip, _super);
        function Chip() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.j = null;
            _this.remove = null;
            _this.select = null;
            return _this;
        }
        Object.defineProperty(Chip.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Chip.prototype, "nativeElement", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                this.j = a;
                this.d.o = this.j;
            },
            enumerable: false,
            configurable: true
        });
        Chip.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Chip.prototype, "f", {
            get: function () {
                var ret_ = this.e.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Chip.prototype, "g", {
            get: function () {
                var ret_ = this.e.n("removable");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("removable", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Chip.prototype, "h", {
            get: function () {
                var ret_ = this.e.n("selectable");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("selectable", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Chip.prototype, "i", {
            get: function () {
                var ret_ = this.e.n("selected");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("selected", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Chip.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("variant");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StyleVariant_$type, igniteuiReactCore.EnumUtil.getEnumValue(StyleVariant_$type, this.e.f(StyleVariant_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StyleVariant_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StyleVariant_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("variant", value_);
            },
            enumerable: false,
            configurable: true
        });
        Chip.prototype.removeChanged = function () {
            var _this = this;
            if (this.remove != null) {
                this.e.s("remove", function (a) { return _this.remove(_this, ComponentBoolValueChangedEventArgs.a(a)); });
            }
            else {
                this.e.v("remove");
            }
        };
        Chip.prototype.selectChanged = function () {
            var _this = this;
            if (this.select != null) {
                this.e.s("select", function (a) { return _this.select(_this, ComponentBoolValueChangedEventArgs.a(a)); });
            }
            else {
                this.e.v("select");
            }
        };
        Chip.$t = igniteuiReactCore.markType(Chip, 'Chip', BaseElement.$);
        return Chip;
    }(BaseElement));

    /**
     * Chips help people enter information, make selections, filter content, or trigger actions.
    */
    var IgrChip = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrChip, _super);
        function IgrChip(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._remove = null;
            _this._remove_wrapped = null;
            _this._select = null;
            _this._select_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcChipComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrChip.prototype.createImplementation = function () {
            return new Chip();
        };
        Object.defineProperty(IgrChip.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrChip.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrChip._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrChip.prototype.onImplementationCreated = function () {
        };
        IgrChip.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrChip.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrChip.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-chip", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrChip.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrChip.prototype, "disabled", {
            /**
             * Sets the disabled state for the chip.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrChip.prototype, "removable", {
            /**
             * Defines if the chip is removable or not.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrChip.prototype, "selectable", {
            /**
             * Defines if the chip is selectable or not.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrChip.prototype, "selected", {
            /**
             * Defines if the chip is selected or not.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrChip.prototype, "variant", {
            /**
             * A property that sets the color variant of the chip component.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(StyleVariant_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrChip.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrChip.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrChip.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrChip.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Chip");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrChip.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        Object.defineProperty(IgrChip.prototype, "remove", {
            get: function () {
                return this._remove;
            },
            set: function (ev) {
                var _this = this;
                if (this._remove_wrapped !== null) {
                    this.i.remove = igniteuiReactCore.delegateRemove(this.i.remove, this._remove_wrapped);
                    this._remove_wrapped = null;
                    this._remove = null;
                }
                this._remove = ev;
                this._remove_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentBoolValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeRemove) {
                        _this.beforeRemove(_this, outerArgs);
                    }
                    if (_this._remove) {
                        _this._remove(_this, outerArgs);
                    }
                };
                this.i.remove = igniteuiReactCore.delegateCombine(this.i.remove, this._remove_wrapped);
                if (this.i.removeChanged) {
                    this.i.removeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrChip.prototype, "select", {
            get: function () {
                return this._select;
            },
            set: function (ev) {
                var _this = this;
                if (this._select_wrapped !== null) {
                    this.i.select = igniteuiReactCore.delegateRemove(this.i.select, this._select_wrapped);
                    this._select_wrapped = null;
                    this._select = null;
                }
                this._select = ev;
                this._select_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentBoolValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelect) {
                        _this.beforeSelect(_this, outerArgs);
                    }
                    if (_this._select) {
                        _this._select(_this, outerArgs);
                    }
                };
                this.i.select = igniteuiReactCore.delegateCombine(this.i.select, this._select_wrapped);
                if (this.i.selectChanged) {
                    this.i.selectChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrChip;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrChipModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrChipModule() {
        }
        IgrChipModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrChip', IgrChip);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrChip', IgrChip);
        };
        return IgrChipModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CircularGradient = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CircularGradient, _super);
        function CircularGradient() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(CircularGradient.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CircularGradient.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.a.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        CircularGradient.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(CircularGradient.prototype, "g", {
            get: function () {
                var ret_ = this.b.n("offset");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("offset", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CircularGradient.prototype, "f", {
            get: function () {
                var ret_ = this.b.n("color");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("color", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CircularGradient.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("opacity");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("opacity", value_);
            },
            enumerable: false,
            configurable: true
        });
        CircularGradient.$t = igniteuiReactCore.markType(CircularGradient, 'CircularGradient', BaseElement.$);
        return CircularGradient;
    }(BaseElement));

    /**
     * Used for defining gradient stops in the igc-circular-progress.
     * For each `igc-circular-gradient` defined as `gradient` slot of `igc-circular-progress` element would be created a SVG stop element.
     * The values passed as `color`, `offset` and `opacity` would be set as
     * `stop-color`, `offset` and `stop-opacity` of the SVG element without further validations.
    */
    var IgrCircularGradient = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCircularGradient, _super);
        function IgrCircularGradient(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCircularGradientComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCircularGradient.prototype.createImplementation = function () {
            return new CircularGradient();
        };
        Object.defineProperty(IgrCircularGradient.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCircularGradient.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCircularGradient._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCircularGradient.prototype.onImplementationCreated = function () {
        };
        IgrCircularGradient.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCircularGradient.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCircularGradient.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-circular-gradient", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCircularGradient.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCircularGradient.prototype, "offset", {
            /**
             * Defines where the gradient stop is placed along the gradient vector
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCircularGradient.prototype, "color", {
            /**
             * Defines the color of the gradient stop
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCircularGradient.prototype, "opacity", {
            /**
             * Defines the opacity of the gradient stop
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrCircularGradient.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrCircularGradient.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCircularGradient.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCircularGradient.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CircularGradient");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCircularGradient.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrCircularGradient;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCircularGradientModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCircularGradientModule() {
        }
        IgrCircularGradientModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCircularGradient', IgrCircularGradient);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCircularGradient', IgrCircularGradient);
        };
        return IgrCircularGradientModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrProgressBaseModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrProgressBaseModule() {
        }
        IgrProgressBaseModule.register = function () {
        };
        return IgrProgressBaseModule;
    }());

    var IgrProgressBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrProgressBase, _super);
        function IgrProgressBase(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrProgressBase.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrProgressBase.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrProgressBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrProgressBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrProgressBase.prototype.onImplementationCreated = function () {
        };
        IgrProgressBase.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrProgressBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrProgressBase.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrProgressBase.prototype, "max", {
            /**
             * Maximum value of the control.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrProgressBase.prototype, "value", {
            /**
             * The value of the control.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrProgressBase.prototype, "variant", {
            /**
             * The variant of the control.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(StyleVariant_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrProgressBase.prototype, "animationDuration", {
            /**
             * Animation duration in milliseconds.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrProgressBase.prototype, "indeterminate", {
            /**
             * The indeterminate state of the control.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrProgressBase.prototype, "hideLabel", {
            /**
             * Shows/hides the label of the control.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrProgressBase.prototype, "labelFormat", {
            /**
             * Format string for the default label of the control.
             * Placeholders:
             * {0} - current value of the control.
             * {1} - max value of the control.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrProgressBase.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrProgressBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrProgressBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrProgressBase.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ProgressBase");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrProgressBase.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrProgressBase.prototype.connectedCallback = function () {
            this.i.l();
        };
        return IgrProgressBase;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ProgressBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ProgressBase, _super);
        function ProgressBase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.i = null;
            return _this;
        }
        Object.defineProperty(ProgressBase.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBase.prototype, "nativeElement", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
                this.b.o = this.i;
            },
            enumerable: false,
            configurable: true
        });
        ProgressBase.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(ProgressBase.prototype, "g", {
            get: function () {
                var ret_ = this.c.n("max");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("max", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBase.prototype, "h", {
            get: function () {
                var ret_ = this.c.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBase.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("variant");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StyleVariant_$type, igniteuiReactCore.EnumUtil.getEnumValue(StyleVariant_$type, this.c.f(StyleVariant_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StyleVariant_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StyleVariant_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("variant", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBase.prototype, "f", {
            get: function () {
                var ret_ = this.c.n("animationDuration");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("animationDuration", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBase.prototype, "e", {
            get: function () {
                var ret_ = this.c.n("indeterminate");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("indeterminate", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBase.prototype, "d", {
            get: function () {
                var ret_ = this.c.n("hideLabel");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("hideLabel", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProgressBase.prototype, "k", {
            get: function () {
                var ret_ = this.c.n("labelFormat");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("labelFormat", value_);
            },
            enumerable: false,
            configurable: true
        });
        ProgressBase.prototype.l = function () {
            this.nativeElement.connectedCallback();
        };
        ProgressBase.$t = igniteuiReactCore.markType(ProgressBase, 'ProgressBase', BaseElement.$);
        return ProgressBase;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CircularProgress = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CircularProgress, _super);
        function CircularProgress() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        CircularProgress.$t = igniteuiReactCore.markType(CircularProgress, 'CircularProgress', ProgressBase.$);
        return CircularProgress;
    }(ProgressBase));

    /**
     * A circular progress indicator used to express unspecified wait time or display
     * the length of a process.
    */
    var IgrCircularProgress = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCircularProgress, _super);
        function IgrCircularProgress(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcCircularProgressComponent);
            return _this;
        }
        IgrCircularProgress.prototype.createImplementation = function () {
            return new CircularProgress();
        };
        Object.defineProperty(IgrCircularProgress.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCircularProgress.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrCircularProgress.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-circular-progress", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCircularProgress.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        return IgrCircularProgress;
    }(IgrProgressBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCircularProgressModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCircularProgressModule() {
        }
        IgrCircularProgressModule.register = function () {
            IgrProgressBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCircularProgress', IgrCircularProgress);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCircularProgress', IgrCircularProgress);
        };
        return IgrCircularProgressModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var LinearProgressLabelAlign = /*@__PURE__*/ (function (LinearProgressLabelAlign) {
        LinearProgressLabelAlign[LinearProgressLabelAlign["Bottom"] = 0] = "Bottom";
        LinearProgressLabelAlign[LinearProgressLabelAlign["Top"] = 1] = "Top";
        LinearProgressLabelAlign[LinearProgressLabelAlign["TopStart"] = 2] = "TopStart";
        LinearProgressLabelAlign[LinearProgressLabelAlign["TopEnd"] = 3] = "TopEnd";
        LinearProgressLabelAlign[LinearProgressLabelAlign["BottomStart"] = 4] = "BottomStart";
        LinearProgressLabelAlign[LinearProgressLabelAlign["BottomEnd"] = 5] = "BottomEnd";
        return LinearProgressLabelAlign;
    })({});
    /**
     * @hidden
     */
    var LinearProgressLabelAlign_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('LinearProgressLabelAlign', 'Bottom,0|Top,1|TopStart:top-start,2|TopEnd:top-end,3|BottomStart:bottom-start,4|BottomEnd:bottom-end,5');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var LinearProgress = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(LinearProgress, _super);
        function LinearProgress() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(LinearProgress.prototype, "o", {
            get: function () {
                var ret_ = this.c.n("striped");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("striped", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LinearProgress.prototype, "n", {
            get: function () {
                var ret_ = this.c.n("labelAlign");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(LinearProgressLabelAlign_$type, igniteuiReactCore.EnumUtil.getEnumValue(LinearProgressLabelAlign_$type, this.c.f(LinearProgressLabelAlign_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(LinearProgressLabelAlign_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(LinearProgressLabelAlign_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("labelAlign", value_);
            },
            enumerable: false,
            configurable: true
        });
        LinearProgress.$t = igniteuiReactCore.markType(LinearProgress, 'LinearProgress', ProgressBase.$);
        return LinearProgress;
    }(ProgressBase));

    /**
     * A linear progress indicator used to express unspecified wait time or display
     * the length of a process.
    */
    var IgrLinearProgress = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrLinearProgress, _super);
        function IgrLinearProgress(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcLinearProgressComponent);
            return _this;
        }
        IgrLinearProgress.prototype.createImplementation = function () {
            return new LinearProgress();
        };
        Object.defineProperty(IgrLinearProgress.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrLinearProgress.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrLinearProgress.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-linear-progress", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrLinearProgress.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrLinearProgress.prototype, "striped", {
            /**
             * Sets the striped look of the control.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrLinearProgress.prototype, "labelAlign", {
            /**
             * The position for the default label of the control.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = igniteuiReactCore.ensureEnum(LinearProgressLabelAlign_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        return IgrLinearProgress;
    }(IgrProgressBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrLinearProgressModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrLinearProgressModule() {
        }
        IgrLinearProgressModule.register = function () {
            IgrProgressBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrLinearProgress', IgrLinearProgress);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrLinearProgress', IgrLinearProgress);
        };
        return IgrLinearProgressModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Rating = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Rating, _super);
        function Rating() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.n = null;
            _this.change = null;
            _this.hover = null;
            return _this;
        }
        Object.defineProperty(Rating.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "nativeElement", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                this.n = a;
                this.c.o = this.n;
            },
            enumerable: false,
            configurable: true
        });
        Rating.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Rating.prototype, "k", {
            get: function () {
                var ret_ = this.d.n("max");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("max", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "l", {
            get: function () {
                var ret_ = this.d.n("step");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("step", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "p", {
            get: function () {
                var ret_ = this.d.n("label");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("label", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "r", {
            get: function () {
                var ret_ = this.d.n("valueFormat");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("valueFormat", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "m", {
            get: function () {
                var ret_ = this.d.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "g", {
            get: function () {
                var ret_ = this.d.n("hoverPreview");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("hoverPreview", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "i", {
            get: function () {
                var ret_ = this.d.n("readOnly");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("readOnly", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "j", {
            get: function () {
                var ret_ = this.d.n("single");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("single", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "e", {
            get: function () {
                var ret_ = this.d.n("allowReset");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("allowReset", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "f", {
            get: function () {
                var ret_ = this.d.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "q", {
            get: function () {
                var ret_ = this.d.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Rating.prototype, "h", {
            get: function () {
                var ret_ = this.d.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        Rating.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.d.s("change", function (a) { return _this.change(_this, NumberEventArgs.a(a)); });
            }
            else {
                this.d.v("change");
            }
        };
        Rating.prototype.hoverChanged = function () {
            var _this = this;
            if (this.hover != null) {
                this.d.s("hover", function (a) { return _this.hover(_this, NumberEventArgs.a(a)); });
            }
            else {
                this.d.v("hover");
            }
        };
        Rating.prototype.z = function (a) {
            if (a === void 0) {
                a = -1;
            }
            this.nativeElement.stepUp(this.d.i(a));
        };
        Rating.prototype.y = function (a) {
            if (a === void 0) {
                a = -1;
            }
            this.nativeElement.stepDown(this.d.i(a));
        };
        Rating.prototype.v = function () {
            this.nativeElement.reportValidity();
        };
        Rating.prototype.t = function () {
            this.nativeElement.checkValidity();
        };
        Rating.prototype.w = function (a) {
            this.nativeElement.setCustomValidity(this.d.i(a));
        };
        Rating.$t = igniteuiReactCore.markType(Rating, 'Rating', BaseElement.$);
        return Rating;
    }(BaseElement));

    /**
     * Rating provides insight regarding others' opinions and experiences,
     * and can allow the user to submit a rating of their own
     * @cssproperty --symbol-size - The size of the symbols.
     * @cssproperty --symbol-full-color - The color of the filled symbol.
     * @cssproperty --symbol-empty-color - The color of the empty symbol.
     * @cssproperty --symbol-full-filter - The filter(s) used for the filled symbol.
     * @cssproperty --symbol-empty-filter - The filter(s) used for the empty symbol.
    */
    var IgrRating = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrRating, _super);
        function IgrRating(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._change = null;
            _this._change_wrapped = null;
            _this._hover = null;
            _this._hover_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcRatingComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrRating.prototype.createImplementation = function () {
            return new Rating();
        };
        Object.defineProperty(IgrRating.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrRating._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrRating.prototype.onImplementationCreated = function () {
        };
        IgrRating.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrRating.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrRating.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-rating", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrRating.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrRating.prototype, "max", {
            /**
             * The maximum value for the rating.
             * If there are projected symbols, the maximum value will be resolved
             * based on the number of symbols.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "step", {
            /**
             * The minimum value change allowed.
             * Valid values are in the interval between 0 and 1 inclusive.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "label", {
            /**
             * The label of the control.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "valueFormat", {
            /**
             * A format string which sets aria-valuetext. Instances of '{0}' will be replaced
             * with the current value of the control and instances of '{1}' with the maximum value for the control.
             * Important for screen-readers and useful for localization.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "value", {
            /**
             * The current value of the component
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "hoverPreview", {
            /**
             * Sets hover preview behavior for the component
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "readOnly", {
            /**
             * Makes the control a readonly field.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "single", {
            /**
             * Toggles single selection visual mode.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "allowReset", {
            /**
             * Whether to reset the rating when the user selects the same value.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrRating.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrRating.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrRating.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrRating.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Rating");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrRating.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Increments the value of the control by `n` steps multiplied by the
         * step factor.
        
        */
        IgrRating.prototype.stepUp = function (n) {
            this.i.z(n);
        };
        /**
         * Decrements the value of the control by `n` steps multiplied by
         * the step factor.
        
        */
        IgrRating.prototype.stepDown = function (n) {
            this.i.y(n);
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrRating.prototype.reportValidity = function () {
            this.i.v();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrRating.prototype.checkValidity = function () {
            this.i.t();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrRating.prototype.setCustomValidity = function (message) {
            this.i.w(message);
        };
        Object.defineProperty(IgrRating.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrNumberEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRating.prototype, "hover", {
            get: function () {
                return this._hover;
            },
            set: function (ev) {
                var _this = this;
                if (this._hover_wrapped !== null) {
                    this.i.hover = igniteuiReactCore.delegateRemove(this.i.hover, this._hover_wrapped);
                    this._hover_wrapped = null;
                    this._hover = null;
                }
                this._hover = ev;
                this._hover_wrapped = function (o, e) {
                    var outerArgs = new IgrNumberEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeHover) {
                        _this.beforeHover(_this, outerArgs);
                    }
                    if (_this._hover) {
                        _this._hover(_this, outerArgs);
                    }
                };
                this.i.hover = igniteuiReactCore.delegateCombine(this.i.hover, this._hover_wrapped);
                if (this.i.hoverChanged) {
                    this.i.hoverChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrRating;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRatingModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRatingModule() {
        }
        IgrRatingModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRating', IgrRating);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRating', IgrRating);
        };
        return IgrRatingModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RatingSymbol = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(RatingSymbol, _super);
        function RatingSymbol() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(RatingSymbol.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RatingSymbol.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        RatingSymbol.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        RatingSymbol.prototype.e = function () {
            this.nativeElement.connectedCallback();
        };
        RatingSymbol.$t = igniteuiReactCore.markType(RatingSymbol, 'RatingSymbol', BaseElement.$);
        return RatingSymbol;
    }(BaseElement));

    /**
     * Used when a custom icon/symbol/element needs to be passed to the igc-rating component.
    */
    var IgrRatingSymbol = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrRatingSymbol, _super);
        function IgrRatingSymbol(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcRatingSymbolComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrRatingSymbol.prototype.createImplementation = function () {
            return new RatingSymbol();
        };
        Object.defineProperty(IgrRatingSymbol.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrRatingSymbol.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrRatingSymbol._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrRatingSymbol.prototype.onImplementationCreated = function () {
        };
        IgrRatingSymbol.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrRatingSymbol.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrRatingSymbol.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-rating-symbol", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrRatingSymbol.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrRatingSymbol.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrRatingSymbol.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrRatingSymbol.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrRatingSymbol.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("RatingSymbol");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrRatingSymbol.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrRatingSymbol.prototype.connectedCallback = function () {
            this.i.e();
        };
        return IgrRatingSymbol;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRatingSymbolModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRatingSymbolModule() {
        }
        IgrRatingSymbolModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRatingSymbol', IgrRatingSymbol);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRatingSymbol', IgrRatingSymbol);
        };
        return IgrRatingSymbolModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrBaseAlertLikeModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrBaseAlertLikeModule() {
        }
        IgrBaseAlertLikeModule.register = function () {
        };
        return IgrBaseAlertLikeModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var BaseAlertLikePosition = /*@__PURE__*/ (function (BaseAlertLikePosition) {
        BaseAlertLikePosition[BaseAlertLikePosition["Bottom"] = 0] = "Bottom";
        BaseAlertLikePosition[BaseAlertLikePosition["Middle"] = 1] = "Middle";
        BaseAlertLikePosition[BaseAlertLikePosition["Top"] = 2] = "Top";
        return BaseAlertLikePosition;
    })({});
    /**
     * @hidden
     */
    var BaseAlertLikePosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('BaseAlertLikePosition', 'Bottom,0|Middle,1|Top,2');

    var IgrBaseAlertLike = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrBaseAlertLike, _super);
        function IgrBaseAlertLike(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrBaseAlertLike.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrBaseAlertLike.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseAlertLike.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrBaseAlertLike._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrBaseAlertLike.prototype.onImplementationCreated = function () {
        };
        IgrBaseAlertLike.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrBaseAlertLike.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrBaseAlertLike.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrBaseAlertLike.prototype, "open", {
            /**
             * Whether the component is in shown state.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseAlertLike.prototype, "displayTime", {
            /**
             * Determines the duration in ms in which the component will be visible.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseAlertLike.prototype, "keepOpen", {
            /**
             * Determines whether the component should close after the `displayTime` is over.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseAlertLike.prototype, "position", {
            /**
             * Sets the position of the component in the viewport.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(BaseAlertLikePosition_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrBaseAlertLike.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrBaseAlertLike.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrBaseAlertLike.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrBaseAlertLike.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("BaseAlertLike");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrBaseAlertLike.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Opens the component.
        
        */
        IgrBaseAlertLike.prototype.show = function () {
            var iv = this.i.g();
            return (iv);
        };
        /**
         * Closes the component.
        
        */
        IgrBaseAlertLike.prototype.hide = function () {
            var iv = this.i.d();
            return (iv);
        };
        /**
         * Toggles the open state of the component.
        
        */
        IgrBaseAlertLike.prototype.toggle = function () {
            var iv = this.i.h();
            return (iv);
        };
        return IgrBaseAlertLike;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var BaseAlertLike = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(BaseAlertLike, _super);
        function BaseAlertLike() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.j = null;
            return _this;
        }
        Object.defineProperty(BaseAlertLike.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseAlertLike.prototype, "nativeElement", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                this.j = a;
                this.b.o = this.j;
            },
            enumerable: false,
            configurable: true
        });
        BaseAlertLike.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(BaseAlertLike.prototype, "f", {
            get: function () {
                var ret_ = this.c.n("open");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("open", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseAlertLike.prototype, "i", {
            get: function () {
                var ret_ = this.c.n("displayTime");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("displayTime", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseAlertLike.prototype, "e", {
            get: function () {
                var ret_ = this.c.n("keepOpen");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("keepOpen", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseAlertLike.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("position");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(BaseAlertLikePosition_$type, igniteuiReactCore.EnumUtil.getEnumValue(BaseAlertLikePosition_$type, this.c.f(BaseAlertLikePosition_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(BaseAlertLikePosition_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(BaseAlertLikePosition_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("position", value_);
            },
            enumerable: false,
            configurable: true
        });
        BaseAlertLike.prototype.g = function () {
            return (this.nativeElement.show());
        };
        BaseAlertLike.prototype.d = function () {
            return (this.nativeElement.hide());
        };
        BaseAlertLike.prototype.h = function () {
            return (this.nativeElement.toggle());
        };
        BaseAlertLike.$t = igniteuiReactCore.markType(BaseAlertLike, 'BaseAlertLike', BaseElement.$);
        return BaseAlertLike;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Snackbar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Snackbar, _super);
        function Snackbar() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.action = null;
            return _this;
        }
        Object.defineProperty(Snackbar.prototype, "n", {
            get: function () {
                var ret_ = this.c.n("actionText");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("actionText", value_);
            },
            enumerable: false,
            configurable: true
        });
        Snackbar.prototype.actionChanged = function () {
            var _this = this;
            if (this.action != null) {
                this.c.s("action", function (a) { return _this.action(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.c.v("action");
            }
        };
        Snackbar.$t = igniteuiReactCore.markType(Snackbar, 'Snackbar', BaseAlertLike.$);
        return Snackbar;
    }(BaseAlertLike));

    /**
     * A snackbar component is used to provide feedback about an operation
     * by showing a brief message at the bottom of the screen.
    */
    var IgrSnackbar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSnackbar, _super);
        function IgrSnackbar(props) {
            var _this = _super.call(this, props) || this;
            _this._action = null;
            _this._action_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSnackbarComponent);
            return _this;
        }
        IgrSnackbar.prototype.createImplementation = function () {
            return new Snackbar();
        };
        Object.defineProperty(IgrSnackbar.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSnackbar.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrSnackbar.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-snackbar", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSnackbar.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrSnackbar.prototype, "actionText", {
            /**
             * The snackbar action button.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSnackbar.prototype, "action", {
            get: function () {
                return this._action;
            },
            set: function (ev) {
                var _this = this;
                if (this._action_wrapped !== null) {
                    this.i.action = igniteuiReactCore.delegateRemove(this.i.action, this._action_wrapped);
                    this._action_wrapped = null;
                    this._action = null;
                }
                this._action = ev;
                this._action_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeAction) {
                        _this.beforeAction(_this, outerArgs);
                    }
                    if (_this._action) {
                        _this._action(_this, outerArgs);
                    }
                };
                this.i.action = igniteuiReactCore.delegateCombine(this.i.action, this._action_wrapped);
                if (this.i.actionChanged) {
                    this.i.actionChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrSnackbar;
    }(IgrBaseAlertLike));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSnackbarModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSnackbarModule() {
        }
        IgrSnackbarModule.register = function () {
            IgrBaseAlertLikeModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSnackbar', IgrSnackbar);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSnackbar', IgrSnackbar);
        };
        return IgrSnackbarModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Toast = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Toast, _super);
        function Toast() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Toast.$t = igniteuiReactCore.markType(Toast, 'Toast', BaseAlertLike.$);
        return Toast;
    }(BaseAlertLike));

    /**
     * A toast component is used to show a notification
    */
    var IgrToast = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrToast, _super);
        function IgrToast(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcToastComponent);
            return _this;
        }
        IgrToast.prototype.createImplementation = function () {
            return new Toast();
        };
        Object.defineProperty(IgrToast.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrToast.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrToast.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-toast", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrToast.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        return IgrToast;
    }(IgrBaseAlertLike));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrToastModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrToastModule() {
        }
        IgrToastModule.register = function () {
            IgrBaseAlertLikeModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrToast', IgrToast);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrToast', IgrToast);
        };
        return IgrToastModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DropdownGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DropdownGroup, _super);
        function DropdownGroup() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(DropdownGroup.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DropdownGroup.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        DropdownGroup.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        DropdownGroup.$t = igniteuiReactCore.markType(DropdownGroup, 'DropdownGroup', BaseElement.$);
        return DropdownGroup;
    }(BaseElement));

    /**
     * A container for a group of `igc-dropdown-item` components.
    */
    var IgrDropdownGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDropdownGroup, _super);
        function IgrDropdownGroup(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDropdownGroupComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrDropdownGroup.prototype.createImplementation = function () {
            return new DropdownGroup();
        };
        Object.defineProperty(IgrDropdownGroup.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdownGroup.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrDropdownGroup._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDropdownGroup.prototype.onImplementationCreated = function () {
        };
        IgrDropdownGroup.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDropdownGroup.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDropdownGroup.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-dropdown-group", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDropdownGroup.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrDropdownGroup.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrDropdownGroup.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrDropdownGroup.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDropdownGroup.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DropdownGroup");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDropdownGroup.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDropdownGroup;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDropdownGroupModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDropdownGroupModule() {
        }
        IgrDropdownGroupModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdownGroup', IgrDropdownGroup);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdownGroup', IgrDropdownGroup);
        };
        return IgrDropdownGroupModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DropdownHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DropdownHeader, _super);
        function DropdownHeader() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(DropdownHeader.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DropdownHeader.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        DropdownHeader.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        DropdownHeader.$t = igniteuiReactCore.markType(DropdownHeader, 'DropdownHeader', BaseElement.$);
        return DropdownHeader;
    }(BaseElement));

    /**
     * Represents a header item in a igc-dropdown list.
    */
    var IgrDropdownHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDropdownHeader, _super);
        function IgrDropdownHeader(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDropdownHeaderComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrDropdownHeader.prototype.createImplementation = function () {
            return new DropdownHeader();
        };
        Object.defineProperty(IgrDropdownHeader.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdownHeader.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrDropdownHeader._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDropdownHeader.prototype.onImplementationCreated = function () {
        };
        IgrDropdownHeader.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDropdownHeader.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDropdownHeader.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-dropdown-header", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDropdownHeader.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrDropdownHeader.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrDropdownHeader.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrDropdownHeader.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDropdownHeader.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DropdownHeader");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDropdownHeader.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDropdownHeader;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDropdownHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDropdownHeaderModule() {
        }
        IgrDropdownHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdownHeader', IgrDropdownHeader);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdownHeader', IgrDropdownHeader);
        };
        return IgrDropdownHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrBaseOptionLikeModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrBaseOptionLikeModule() {
        }
        IgrBaseOptionLikeModule.register = function () {
        };
        return IgrBaseOptionLikeModule;
    }());

    var IgrBaseOptionLike = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrBaseOptionLike, _super);
        function IgrBaseOptionLike(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrBaseOptionLike.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrBaseOptionLike.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseOptionLike.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrBaseOptionLike._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrBaseOptionLike.prototype.onImplementationCreated = function () {
        };
        IgrBaseOptionLike.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrBaseOptionLike.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrBaseOptionLike.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrBaseOptionLike.prototype, "active", {
            /**
             * Whether the item is active.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseOptionLike.prototype, "disabled", {
            /**
             * Whether the item is disabled.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseOptionLike.prototype, "selected", {
            /**
             * Whether the item is selected.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrBaseOptionLike.prototype, "value", {
            /**
             * The current value of the item.
             * If not specified, the element's text content is used.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrBaseOptionLike.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrBaseOptionLike.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrBaseOptionLike.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrBaseOptionLike.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("BaseOptionLike");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrBaseOptionLike.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrBaseOptionLike.prototype.connectedCallback = function () {
            this.i.i();
        };
        return IgrBaseOptionLike;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var BaseOptionLike = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(BaseOptionLike, _super);
        function BaseOptionLike() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(BaseOptionLike.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseOptionLike.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.a.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        BaseOptionLike.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(BaseOptionLike.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("active");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("active", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseOptionLike.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseOptionLike.prototype, "e", {
            get: function () {
                var ret_ = this.b.n("selected");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("selected", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseOptionLike.prototype, "h", {
            get: function () {
                var ret_ = this.b.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        BaseOptionLike.prototype.i = function () {
            this.nativeElement.connectedCallback();
        };
        BaseOptionLike.$t = igniteuiReactCore.markType(BaseOptionLike, 'BaseOptionLike', BaseElement.$);
        return BaseOptionLike;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DropdownItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DropdownItem, _super);
        function DropdownItem() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DropdownItem.$t = igniteuiReactCore.markType(DropdownItem, 'DropdownItem', BaseOptionLike.$);
        return DropdownItem;
    }(BaseOptionLike));

    /**
     * Represents an item in a dropdown list.
    */
    var IgrDropdownItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDropdownItem, _super);
        function IgrDropdownItem(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDropdownItemComponent);
            return _this;
        }
        IgrDropdownItem.prototype.createImplementation = function () {
            return new DropdownItem();
        };
        Object.defineProperty(IgrDropdownItem.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDropdownItem.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrDropdownItem.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-dropdown-item", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDropdownItem.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        return IgrDropdownItem;
    }(IgrBaseOptionLike));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDropdownItemModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDropdownItemModule() {
        }
        IgrDropdownItemModule.register = function () {
            IgrBaseOptionLikeModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdownItem', IgrDropdownItem);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdownItem', IgrDropdownItem);
        };
        return IgrDropdownItemModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DropdownItemComponentEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DropdownItemComponentEventArgs, _super);
        function DropdownItemComponentEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        DropdownItemComponentEventArgs.b = function (a) {
            return ((function () {
                var $ret = new DropdownItemComponentEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        DropdownItemComponentEventArgs.$t = igniteuiReactCore.markType(DropdownItemComponentEventArgs, 'DropdownItemComponentEventArgs');
        return DropdownItemComponentEventArgs;
    }(igniteuiReactCore.Base));

    var IgrDropdownItemComponentEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrDropdownItemComponentEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrDropdownItemComponentEventArgs.prototype.createImplementation = function () {
            return new DropdownItemComponentEventArgs();
        };
        Object.defineProperty(IgrDropdownItemComponentEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdownItemComponentEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDropdownItemComponentEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrDropdownItemComponentEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrDropdownItemComponentEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDropdownItem({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrDropdownItemComponentEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DropdownPlacement = /*@__PURE__*/ (function (DropdownPlacement) {
        DropdownPlacement[DropdownPlacement["Top"] = 0] = "Top";
        DropdownPlacement[DropdownPlacement["TopStart"] = 1] = "TopStart";
        DropdownPlacement[DropdownPlacement["TopEnd"] = 2] = "TopEnd";
        DropdownPlacement[DropdownPlacement["Bottom"] = 3] = "Bottom";
        DropdownPlacement[DropdownPlacement["BottomStart"] = 4] = "BottomStart";
        DropdownPlacement[DropdownPlacement["BottomEnd"] = 5] = "BottomEnd";
        DropdownPlacement[DropdownPlacement["Right"] = 6] = "Right";
        DropdownPlacement[DropdownPlacement["RightStart"] = 7] = "RightStart";
        DropdownPlacement[DropdownPlacement["RightEnd"] = 8] = "RightEnd";
        DropdownPlacement[DropdownPlacement["Left"] = 9] = "Left";
        DropdownPlacement[DropdownPlacement["LeftStart"] = 10] = "LeftStart";
        DropdownPlacement[DropdownPlacement["LeftEnd"] = 11] = "LeftEnd";
        return DropdownPlacement;
    })({});
    /**
     * @hidden
     */
    var DropdownPlacement_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DropdownPlacement', 'Top,0|TopStart:top-start,1|TopEnd:top-end,2|Bottom,3|BottomStart:bottom-start,4|BottomEnd:bottom-end,5|Right,6|RightStart:right-start,7|RightEnd:right-end,8|Left,9|LeftStart:left-start,10|LeftEnd:left-end,11');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DropdownScrollStrategy = /*@__PURE__*/ (function (DropdownScrollStrategy) {
        DropdownScrollStrategy[DropdownScrollStrategy["Scroll"] = 0] = "Scroll";
        DropdownScrollStrategy[DropdownScrollStrategy["Block"] = 1] = "Block";
        DropdownScrollStrategy[DropdownScrollStrategy["Close"] = 2] = "Close";
        return DropdownScrollStrategy;
    })({});
    /**
     * @hidden
     */
    var DropdownScrollStrategy_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DropdownScrollStrategy', 'Scroll,0|Block,1|Close,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Dropdown = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Dropdown, _super);
        function Dropdown() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.opening = null;
            _this.opened = null;
            _this.closing = null;
            _this.closed = null;
            _this.change = null;
            return _this;
        }
        Dropdown.prototype.showTarget = function (target_) {
            this.nativeElement.show(target_);
        };
        Dropdown.prototype.toggleTarget = function (target_) {
            this.nativeElement.toggle(target_);
        };
        Dropdown.prototype.o = function (a) {
            return (this.nativeElement.navigateTo(a));
        };
        Dropdown.prototype.p = function (a) {
            return (this.nativeElement.select(a));
        };
        Object.defineProperty(Dropdown.prototype, "s", {
            get: function () {
                var ret_ = this.b.n("placement");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DropdownPlacement_$type, igniteuiReactCore.EnumUtil.getEnumValue(DropdownPlacement_$type, this.b.f(DropdownPlacement_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DropdownPlacement_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DropdownPlacement_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("placement", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dropdown.prototype, "t", {
            get: function () {
                var ret_ = this.b.n("scrollStrategy");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DropdownScrollStrategy_$type, igniteuiReactCore.EnumUtil.getEnumValue(DropdownScrollStrategy_$type, this.b.f(DropdownScrollStrategy_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DropdownScrollStrategy_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DropdownScrollStrategy_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("scrollStrategy", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dropdown.prototype, "y", {
            get: function () {
                var ret_ = this.b.n("flip");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("flip", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dropdown.prototype, "aa", {
            get: function () {
                var ret_ = this.b.n("distance");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("distance", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dropdown.prototype, "z", {
            get: function () {
                var ret_ = this.b.n("sameWidth");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("sameWidth", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dropdown.prototype, "n", {
            get: function () {
                var ret_ = this.b.m("items", function (a) { return new DropdownItem(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dropdown.prototype, "m", {
            get: function () {
                var ret_ = this.b.m("groups", function (a) { return new DropdownGroup(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Dropdown.prototype, "q", {
            get: function () {
                var ret_ = this.b.m("selectedItem", function (a) { return new DropdownItem(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Dropdown.prototype.openingChanged = function () {
            var _this = this;
            if (this.opening != null) {
                this.b.s("opening", function (a) { return _this.opening(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("opening");
            }
        };
        Dropdown.prototype.openedChanged = function () {
            var _this = this;
            if (this.opened != null) {
                this.b.s("opened", function (a) { return _this.opened(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("opened");
            }
        };
        Dropdown.prototype.closingChanged = function () {
            var _this = this;
            if (this.closing != null) {
                this.b.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("closing");
            }
        };
        Dropdown.prototype.closedChanged = function () {
            var _this = this;
            if (this.closed != null) {
                this.b.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("closed");
            }
        };
        Dropdown.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.b.s("change", function (a) { return _this.change(_this, DropdownItemComponentEventArgs.b(a)); });
            }
            else {
                this.b.v("change");
            }
        };
        Dropdown.prototype.af = function () {
            this.nativeElement.disconnectedCallback();
        };
        Dropdown.prototype.ac = function () {
            this.nativeElement.clearSelection();
        };
        Dropdown.$t = igniteuiReactCore.markType(Dropdown, 'Dropdown', BaseComboBoxLike.$);
        return Dropdown;
    }(BaseComboBoxLike));

    /**
     * Represents a DropDown component.
    */
    var IgrDropdown = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDropdown, _super);
        function IgrDropdown(props) {
            var _this = _super.call(this, props) || this;
            _this._opening = null;
            _this._opening_wrapped = null;
            _this._opened = null;
            _this._opened_wrapped = null;
            _this._closing = null;
            _this._closing_wrapped = null;
            _this._closed = null;
            _this._closed_wrapped = null;
            _this._change = null;
            _this._change_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcDropdownComponent);
            return _this;
        }
        IgrDropdown.prototype.createImplementation = function () {
            return new Dropdown();
        };
        Object.defineProperty(IgrDropdown.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDropdown.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrDropdown.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-dropdown", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDropdown.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrDropdown.prototype, "placement", {
            /**
             * The preferred placement of the component around the target element.
             * @type {'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'right' | 'right-start' | 'right-end' | 'left' | 'left-start' | 'left-end'}
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = igniteuiReactCore.ensureEnum(DropdownPlacement_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "scrollStrategy", {
            /**
             * Determines the behavior of the component during scrolling of the parent container.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = igniteuiReactCore.ensureEnum(DropdownScrollStrategy_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "flip", {
            /**
             * Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.
             * When true, once enough space is detected on its preferred side, it will flip back.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "distance", {
            /**
             * The distance from the target element.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "sameWidth", {
            /**
             * Whether the dropdown's width should be the same as the target's one.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "items", {
            /**
             * Returns the items of the dropdown.
            */
            get: function () {
                if (!this.i.n) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.n.length; i++) {
                    var impl = this.i.n[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrDropdownItem) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrDropdownItem._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "groups", {
            /**
             * Returns the group items of the dropdown.
            */
            get: function () {
                if (!this.i.m) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.m.length; i++) {
                    var impl = this.i.m[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrDropdownGroup) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrDropdownGroup._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "selectedItem", {
            /**
             * Returns the selected item from the dropdown or null.
            */
            get: function () {
                var r = this.i.q;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDropdownItem({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            enumerable: false,
            configurable: true
        });
        IgrDropdown.prototype._styling = function (container, component, parent) {
            _super.prototype._styling.call(this, container, component, parent);
            this._inStyling = true;
            if (this.selectedItem && this.selectedItem._styling) {
                this.selectedItem._styling(container, component, this);
            }
            this._inStyling = false;
        };
        /**
         * Shows the dropdown.
        
        */
        IgrDropdown.prototype.showTarget = function (target_) {
            this.i.showTarget(target_);
        };
        /**
         * Toggles the open state of the dropdown.
        
        */
        IgrDropdown.prototype.toggleTarget = function (target_) {
            this.i.toggleTarget(target_);
        };
        /**
         * Navigates to the item at the specified index. If it exists, returns the found item, otherwise - null.
        
        */
        IgrDropdown.prototype.navigateTo = function (index) {
            var iv = this.i.o(index);
            var ret = null;
            if (iv && iv.externalObject) {
                ret = iv.externalObject;
            }
            else {
                if (iv) {
                    var e = IgrDropdownItem._createFromInternal(iv);
                    e._implementation = iv;
                    iv.externalObject = e;
                    ret = e;
                }
            }
            return ret;
        };
        /**
         * Selects the item with the specified value. If it exists, returns the found item, otherwise - null.
        
        */
        IgrDropdown.prototype.select = function (value) {
            var iv = this.i.p(value);
            var ret = null;
            if (iv && iv.externalObject) {
                ret = iv.externalObject;
            }
            else {
                if (iv) {
                    var e = IgrDropdownItem._createFromInternal(iv);
                    e._implementation = iv;
                    iv.externalObject = e;
                    ret = e;
                }
            }
            return ret;
        };
        IgrDropdown.prototype.disconnectedCallback = function () {
            this.i.af();
        };
        /**
         * Clears the current selection of the dropdown.
        
        */
        IgrDropdown.prototype.clearSelection = function () {
            this.i.ac();
        };
        Object.defineProperty(IgrDropdown.prototype, "opening", {
            get: function () {
                return this._opening;
            },
            set: function (ev) {
                var _this = this;
                if (this._opening_wrapped !== null) {
                    this.i.opening = igniteuiReactCore.delegateRemove(this.i.opening, this._opening_wrapped);
                    this._opening_wrapped = null;
                    this._opening = null;
                }
                this._opening = ev;
                this._opening_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpening) {
                        _this.beforeOpening(_this, outerArgs);
                    }
                    if (_this._opening) {
                        _this._opening(_this, outerArgs);
                    }
                };
                this.i.opening = igniteuiReactCore.delegateCombine(this.i.opening, this._opening_wrapped);
                if (this.i.openingChanged) {
                    this.i.openingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "opened", {
            get: function () {
                return this._opened;
            },
            set: function (ev) {
                var _this = this;
                if (this._opened_wrapped !== null) {
                    this.i.opened = igniteuiReactCore.delegateRemove(this.i.opened, this._opened_wrapped);
                    this._opened_wrapped = null;
                    this._opened = null;
                }
                this._opened = ev;
                this._opened_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpened) {
                        _this.beforeOpened(_this, outerArgs);
                    }
                    if (_this._opened) {
                        _this._opened(_this, outerArgs);
                    }
                };
                this.i.opened = igniteuiReactCore.delegateCombine(this.i.opened, this._opened_wrapped);
                if (this.i.openedChanged) {
                    this.i.openedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "closing", {
            get: function () {
                return this._closing;
            },
            set: function (ev) {
                var _this = this;
                if (this._closing_wrapped !== null) {
                    this.i.closing = igniteuiReactCore.delegateRemove(this.i.closing, this._closing_wrapped);
                    this._closing_wrapped = null;
                    this._closing = null;
                }
                this._closing = ev;
                this._closing_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosing) {
                        _this.beforeClosing(_this, outerArgs);
                    }
                    if (_this._closing) {
                        _this._closing(_this, outerArgs);
                    }
                };
                this.i.closing = igniteuiReactCore.delegateCombine(this.i.closing, this._closing_wrapped);
                if (this.i.closingChanged) {
                    this.i.closingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "closed", {
            get: function () {
                return this._closed;
            },
            set: function (ev) {
                var _this = this;
                if (this._closed_wrapped !== null) {
                    this.i.closed = igniteuiReactCore.delegateRemove(this.i.closed, this._closed_wrapped);
                    this._closed_wrapped = null;
                    this._closed = null;
                }
                this._closed = ev;
                this._closed_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosed) {
                        _this.beforeClosed(_this, outerArgs);
                    }
                    if (_this._closed) {
                        _this._closed(_this, outerArgs);
                    }
                };
                this.i.closed = igniteuiReactCore.delegateCombine(this.i.closed, this._closed_wrapped);
                if (this.i.closedChanged) {
                    this.i.closedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDropdown.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrDropdownItemComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrDropdown;
    }(IgrBaseComboBoxLike));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDropdownModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDropdownModule() {
        }
        IgrDropdownModule.register = function () {
            IgrBaseComboBoxLikeModule.register();
            IgrDropdownItemModule.register();
            IgrDropdownHeaderModule.register();
            IgrDropdownGroupModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdownItemComponentEventArgs', IgrDropdownItemComponentEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdown', IgrDropdown);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDropdown', IgrDropdown);
        };
        return IgrDropdownModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DockManagerPaneType = /*@__PURE__*/ (function (DockManagerPaneType) {
        DockManagerPaneType[DockManagerPaneType["SplitPane"] = 0] = "SplitPane";
        DockManagerPaneType[DockManagerPaneType["ContentPane"] = 1] = "ContentPane";
        DockManagerPaneType[DockManagerPaneType["TabGroupPane"] = 2] = "TabGroupPane";
        DockManagerPaneType[DockManagerPaneType["DocumentHost"] = 3] = "DocumentHost";
        return DockManagerPaneType;
    })({});
    /**
     * @hidden
     */
    var DockManagerPaneType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DockManagerPaneType', 'SplitPane,0|ContentPane,1|TabGroupPane,2|DocumentHost,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var SplitPaneOrientation = /*@__PURE__*/ (function (SplitPaneOrientation) {
        SplitPaneOrientation[SplitPaneOrientation["Horizontal"] = 0] = "Horizontal";
        SplitPaneOrientation[SplitPaneOrientation["Vertical"] = 1] = "Vertical";
        return SplitPaneOrientation;
    })({});
    /**
     * @hidden
     */
    var SplitPaneOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SplitPaneOrientation', 'Horizontal:horizontal,0|Vertical:vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var UnpinnedLocation = /*@__PURE__*/ (function (UnpinnedLocation) {
        UnpinnedLocation[UnpinnedLocation["Top"] = 0] = "Top";
        UnpinnedLocation[UnpinnedLocation["Bottom"] = 1] = "Bottom";
        UnpinnedLocation[UnpinnedLocation["Left"] = 2] = "Left";
        UnpinnedLocation[UnpinnedLocation["Right"] = 3] = "Right";
        return UnpinnedLocation;
    })({});
    /**
     * @hidden
     */
    var UnpinnedLocation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('UnpinnedLocation', 'Top:top,0|Bottom:bottom,1|Left:left,2|Right:right,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DockManagerPoint = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockManagerPoint, _super);
        function DockManagerPoint() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(DockManagerPoint.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerPoint.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.a.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        DockManagerPoint.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(DockManagerPoint.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("x");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("x", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerPoint.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("y");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("y", value_);
            },
            enumerable: false,
            configurable: true
        });
        DockManagerPoint.$t = igniteuiReactCore.markType(DockManagerPoint, 'DockManagerPoint');
        return DockManagerPoint;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DockManagerPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockManagerPane, _super);
        function DockManagerPane() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.___mustPassByValue = true;
            return _this;
        }
        Object.defineProperty(DockManagerPane.prototype, "d", {
            get: function () {
                var ret_ = this.b().n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b().w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        DockManagerPane.createFromNative = function (native_) {
            if (native_ == null) {
                return null;
            }
            var a = (native_.type);
            if (a == null || a == undefined) {
                return null;
            }
            switch (a.toLowerCase()) {
                case "splitpane":
                    {
                        var b = new SplitPane();
                        b.setNativeElement(native_);
                        return b;
                    }
                case "contentpane":
                    {
                        var c = new ContentPane();
                        c.setNativeElement(native_);
                        return c;
                    }
                case "tabgrouppane":
                    {
                        var d = new TabGroupPane();
                        d.setNativeElement(native_);
                        return d;
                    }
                case "documenthost":
                    {
                        var e = new DocumentHost();
                        e.setNativeElement(native_);
                        return e;
                    }
            }
            return null;
        };
        DockManagerPane.$t = igniteuiReactCore.markType(DockManagerPane, 'DockManagerPane');
        return DockManagerPane;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var DocumentHost = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DocumentHost, _super);
        function DocumentHost() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.g = new WCNativeHelper();
            _this.j = null;
            return _this;
        }
        Object.defineProperty(DocumentHost.prototype, "h", {
            get: function () {
                return this.g;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DocumentHost.prototype, "nativeElement", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                this.j = a;
                this.g.o = this.j;
            },
            enumerable: false,
            configurable: true
        });
        DocumentHost.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(DocumentHost.prototype, "l", {
            get: function () {
                var ret_ = this.h.n("id");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("id", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DocumentHost.prototype, "e", {
            get: function () {
                var ret_ = this.h.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, this.h.f(DockManagerPaneType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.h.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DocumentHost.prototype, "f", {
            get: function () {
                var ret_ = this.h.m("rootPane", function (a) { return new SplitPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("rootPane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DocumentHost.prototype, "i", {
            get: function () {
                var ret_ = this.h.n("size");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("size", value_);
            },
            enumerable: false,
            configurable: true
        });
        DocumentHost.prototype.b = function () {
            return this.h;
        };
        DocumentHost.$t = igniteuiReactCore.markType(DocumentHost, 'DocumentHost', DockManagerPane.$);
        return DocumentHost;
    }(DockManagerPane));
    /**
     * @hidden
     */
    var TabGroupPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TabGroupPane, _super);
        function TabGroupPane() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.g = new WCNativeHelper();
            _this.m = null;
            return _this;
        }
        Object.defineProperty(TabGroupPane.prototype, "h", {
            get: function () {
                return this.g;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupPane.prototype, "nativeElement", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                this.m = a;
                this.g.o = this.m;
            },
            enumerable: false,
            configurable: true
        });
        TabGroupPane.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(TabGroupPane.prototype, "o", {
            get: function () {
                var ret_ = this.h.n("id");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("id", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupPane.prototype, "f", {
            get: function () {
                var ret_ = this.h.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, this.h.f(DockManagerPaneType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.h.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupPane.prototype, "e", {
            get: function () {
                var ret_ = this.h.k("panes", function (a) { return new ContentPaneCollection(); }, function (a) { return new ContentPane(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupPane.prototype, "l", {
            get: function () {
                var ret_ = this.h.n("size");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("size", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupPane.prototype, "k", {
            get: function () {
                var ret_ = this.h.n("selectedIndex");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("selectedIndex", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupPane.prototype, "i", {
            get: function () {
                var ret_ = this.h.n("allowEmpty");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("allowEmpty", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupPane.prototype, "j", {
            get: function () {
                var ret_ = this.h.n("isMaximized");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("isMaximized", value_);
            },
            enumerable: false,
            configurable: true
        });
        TabGroupPane.prototype.b = function () {
            return this.h;
        };
        TabGroupPane.$t = igniteuiReactCore.markType(TabGroupPane, 'TabGroupPane', DockManagerPane.$);
        return TabGroupPane;
    }(DockManagerPane));
    /**
     * @hidden
     */
    var ContentPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ContentPane, _super);
        function ContentPane() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.g = new WCNativeHelper();
            _this.v = null;
            return _this;
        }
        ContentPane.prototype.b = function () {
            return this.h;
        };
        Object.defineProperty(ContentPane.prototype, "h", {
            get: function () {
                return this.g;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "nativeElement", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                this.v = a;
                this.g.o = this.v;
            },
            enumerable: false,
            configurable: true
        });
        ContentPane.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(ContentPane.prototype, "ab", {
            get: function () {
                var ret_ = this.h.n("id");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("id", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "e", {
            get: function () {
                var ret_ = this.h.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, this.h.f(DockManagerPaneType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.h.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "x", {
            get: function () {
                var ret_ = this.h.n("contentId");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("contentId", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "z", {
            get: function () {
                var ret_ = this.h.n("header");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("header", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "aa", {
            get: function () {
                var ret_ = this.h.n("headerId");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("headerId", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "ac", {
            get: function () {
                var ret_ = this.h.n("tabHeaderId");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("tabHeaderId", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "ad", {
            get: function () {
                var ret_ = this.h.n("unpinnedHeaderId");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("unpinnedHeaderId", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "y", {
            get: function () {
                var ret_ = this.h.n("floatingHeaderId");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("floatingHeaderId", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "t", {
            get: function () {
                var ret_ = this.h.n("size");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("size", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "j", {
            get: function () {
                var ret_ = this.h.n("allowClose");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("allowClose", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "m", {
            get: function () {
                var ret_ = this.h.n("allowMaximize");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("allowMaximize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "n", {
            get: function () {
                var ret_ = this.h.n("allowPinning");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("allowPinning", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "k", {
            get: function () {
                var ret_ = this.h.n("allowDocking");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("allowDocking", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "i", {
            get: function () {
                var ret_ = this.h.n("acceptsInnerDock");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("acceptsInnerDock", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "l", {
            get: function () {
                var ret_ = this.h.n("allowFloating");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("allowFloating", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "u", {
            get: function () {
                var ret_ = this.h.n("unpinnedSize");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("unpinnedSize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "s", {
            get: function () {
                var ret_ = this.h.n("isPinned");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("isPinned", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "r", {
            get: function () {
                var ret_ = this.h.n("isMaximized");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("isMaximized", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "f", {
            get: function () {
                var ret_ = this.h.n("unpinnedLocation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(UnpinnedLocation_$type, igniteuiReactCore.EnumUtil.getEnumValue(UnpinnedLocation_$type, this.h.f(UnpinnedLocation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(UnpinnedLocation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(UnpinnedLocation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.h.w("unpinnedLocation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "q", {
            get: function () {
                var ret_ = this.h.n("hidden");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("hidden", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "o", {
            get: function () {
                var ret_ = this.h.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ContentPane.prototype, "p", {
            get: function () {
                var ret_ = this.h.n("documentOnly");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.h.w("documentOnly", value_);
            },
            enumerable: false,
            configurable: true
        });
        ContentPane.$t = igniteuiReactCore.markType(ContentPane, 'ContentPane', DockManagerPane.$);
        return ContentPane;
    }(DockManagerPane));
    /**
     * @hidden
     */
    var ContentPaneCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ContentPaneCollection, _super);
        function ContentPaneCollection() {
            return _super.call(this, ContentPane.$, 0) || this;
        }
        ContentPaneCollection.$t = igniteuiReactCore.markType(ContentPaneCollection, 'ContentPaneCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(ContentPane.$));
        return ContentPaneCollection;
    }(igniteuiReactCore.ObservableCollection$1));
    /**
     * @hidden
     */
    var SplitPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SplitPane, _super);
        function SplitPane() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.i = new WCNativeHelper();
            _this.q = null;
            return _this;
        }
        SplitPane.prototype.b = function () {
            return this.j;
        };
        Object.defineProperty(SplitPane.prototype, "j", {
            get: function () {
                return this.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "nativeElement", {
            get: function () {
                return this.q;
            },
            set: function (a) {
                this.q = a;
                this.i.o = this.q;
            },
            enumerable: false,
            configurable: true
        });
        SplitPane.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(SplitPane.prototype, "s", {
            get: function () {
                var ret_ = this.j.n("id");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("id", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "f", {
            get: function () {
                var ret_ = this.j.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, this.j.f(DockManagerPaneType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DockManagerPaneType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DockManagerPaneType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "h", {
            get: function () {
                var ret_ = this.j.n("orientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(SplitPaneOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(SplitPaneOrientation_$type, this.j.f(SplitPaneOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(SplitPaneOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(SplitPaneOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("orientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "e", {
            get: function () {
                var ret_ = this.j.k("panes", function (a) { return new DockManagerPaneCollection(); }, function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "p", {
            get: function () {
                var ret_ = this.j.n("size");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("size", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "g", {
            get: function () {
                var ret_ = this.j.m("floatingLocation", function (a) { return new DockManagerPoint(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("floatingLocation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "o", {
            get: function () {
                var ret_ = this.j.n("floatingWidth");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("floatingWidth", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "n", {
            get: function () {
                var ret_ = this.j.n("floatingHeight");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("floatingHeight", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "l", {
            get: function () {
                var ret_ = this.j.n("floatingResizable");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("floatingResizable", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "k", {
            get: function () {
                var ret_ = this.j.n("allowEmpty");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("allowEmpty", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SplitPane.prototype, "m", {
            get: function () {
                var ret_ = this.j.n("isMaximized");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("isMaximized", value_);
            },
            enumerable: false,
            configurable: true
        });
        SplitPane.$t = igniteuiReactCore.markType(SplitPane, 'SplitPane', DockManagerPane.$);
        return SplitPane;
    }(DockManagerPane));
    /**
     * @hidden
     */
    var DockManagerPaneCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockManagerPaneCollection, _super);
        function DockManagerPaneCollection() {
            return _super.call(this, DockManagerPane.$, 0) || this;
        }
        DockManagerPaneCollection.$t = igniteuiReactCore.markType(DockManagerPaneCollection, 'DockManagerPaneCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(DockManagerPane.$));
        return DockManagerPaneCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrDockManagerPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDockManagerPane, _super);
        function IgrDockManagerPane(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrDockManagerPane.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrDockManagerPane.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerPane.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrDockManagerPane._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDockManagerPane.prototype.onImplementationCreated = function () {
        };
        IgrDockManagerPane.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDockManagerPane.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDockManagerPane.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrDockManagerPane.prototype, "name", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerPane.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrDockManagerPane.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerPane.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDockManagerPane.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DockManagerPane");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        return IgrDockManagerPane;
    }(React.Component));

    var IgrDockManagerPaneCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDockManagerPaneCollection, _super);
        function IgrDockManagerPaneCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrDockManagerPane.$type) {
                IgrDockManagerPane.$type = igniteuiReactCore.markType(IgrDockManagerPane, "IgrDockManagerPane");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrDockManagerPaneCollection.prototype._createInnerColl = function () {
            if (!IgrDockManagerPane.$type) {
                IgrDockManagerPane.$type = igniteuiReactCore.markType(IgrDockManagerPane, "IgrDockManagerPane");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrDockManagerPane.$type, DockManagerPane.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrDockManagerPane._createFromInternal(int);
                    if (ext) {
                        if (!int.$type && ext._implementation.setNativeElement) {
                            ext._implementation.setNativeElement(int);
                        }
                        else {
                            ext._implementation = int;
                        }
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrDockManagerPaneCollection;
    }(igniteuiReactCore.IgCollection));

    var IgrDockManagerPoint = /** @class */ /*@__PURE__*/ (function () {
        function IgrDockManagerPoint() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrDockManagerPoint.prototype.createImplementation = function () {
            return new DockManagerPoint();
        };
        Object.defineProperty(IgrDockManagerPoint.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerPoint.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerPoint.prototype.onImplementationCreated = function () {
        };
        IgrDockManagerPoint.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrDockManagerPoint.prototype, "x", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerPoint.prototype, "y", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerPoint.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        IgrDockManagerPoint.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDockManagerPoint;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrSplitPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSplitPane, _super);
        function IgrSplitPane(props) {
            var _this = _super.call(this, props) || this;
            _this._panes = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            loader.defineCustomElements();
            return _this;
        }
        IgrSplitPane.prototype.createImplementation = function () {
            return new SplitPane();
        };
        Object.defineProperty(IgrSplitPane.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSplitPane.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrSplitPane.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSplitPane.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrSplitPane.prototype, "id", {
            /**
             * The id of the pane. If not set the Dock Manager generates it automatically.
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "type", {
            /**
             * The type of the pane.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(DockManagerPaneType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "orientation", {
            /**
             * The orientation of the split pane.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureEnum(SplitPaneOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "panes", {
            /**
             * The child panes of the split pane.
            */
            get: function () {
                if (this._panes === null) {
                    var coll = new IgrDockManagerPaneCollection();
                    var innerColl = this.i.e;
                    if (!innerColl) {
                        innerColl = new DockManagerPaneCollection();
                    }
                    this._panes = coll._fromInner(innerColl);
                }
                return this._panes;
            },
            set: function (v) {
                if (this._panes !== null) {
                    this._panes._setSyncTarget(null);
                    this._panes = null;
                }
                var coll = new IgrDockManagerPaneCollection();
                this._panes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(DockManagerPane.$type);
                var innerColl = this.i.e;
                if (!innerColl) {
                    innerColl = new DockManagerPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._panes._setSyncTarget(syncColl);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "size", {
            /**
             * The size of the pane relative to its sibling panes' sizes. Defaults to 100.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "floatingLocation", {
            /**
             * The absolute location point of the pane. Applies only for floating panes.
            */
            get: function () {
                var r = this.i.g;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerPoint();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.g = null : this.i.g = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "floatingWidth", {
            /**
             * The absolute width of the pane. Applies only for floating panes. Defaults to 100.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "floatingHeight", {
            /**
             * The absolute height of the pane. Applies only for floating panes. Defaults to 100.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "floatingResizable", {
            /**
             * Determines whether floating pane resizing is allowed. Applies only for floating panes.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "allowEmpty", {
            /**
             * Determines whether the pane should present in the UI when empty.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitPane.prototype, "isMaximized", {
            /**
             * Determines whether a split pane is maximized or not. Defaults to false.
             * @deprecated Use the `isMaximized` property of TabGroupPane and/or ContentPane instead.  Having isMaximized set to true on a split pane level has no real effect as split panes serve as containers only, meaning they have no actual content to be shown maximized.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrSplitPane.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.panes != null && this.panes.findByName && this.panes.findByName(name)) {
                return this.panes.findByName(name);
            }
            if (this.floatingLocation && this.floatingLocation.name && this.floatingLocation.name == name) {
                return this.floatingLocation;
            }
            return null;
        };
        IgrSplitPane.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrSplitPane;
    }(IgrDockManagerPane));

    var IgrSplitPaneCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSplitPaneCollection, _super);
        function IgrSplitPaneCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrSplitPane.$type) {
                IgrSplitPane.$type = igniteuiReactCore.markType(IgrSplitPane, "IgrSplitPane");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrSplitPaneCollection.prototype._createInnerColl = function () {
            if (!IgrSplitPane.$type) {
                IgrSplitPane.$type = igniteuiReactCore.markType(IgrSplitPane, "IgrSplitPane");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrSplitPane.$type, SplitPane.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrSplitPane._createFromInternal(int);
                    if (ext) {
                        if (!int.$type && ext._implementation.setNativeElement) {
                            ext._implementation.setNativeElement(int);
                        }
                        else {
                            ext._implementation = int;
                        }
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrSplitPaneCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SplitPaneCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SplitPaneCollection, _super);
        function SplitPaneCollection() {
            return _super.call(this, SplitPane.$, 0) || this;
        }
        SplitPaneCollection.$t = igniteuiReactCore.markType(SplitPaneCollection, 'SplitPaneCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(SplitPane.$));
        return SplitPaneCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DockManagerLayout = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockManagerLayout, _super);
        function DockManagerLayout() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.___mustPassByValue = true;
            _this.c = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(DockManagerLayout.prototype, "h", {
            get: function () {
                var ret_ = this.d.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerLayout.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerLayout.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.c.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        DockManagerLayout.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(DockManagerLayout.prototype, "a", {
            get: function () {
                var ret_ = this.d.m("rootPane", function (a) { return new SplitPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("rootPane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerLayout.prototype, "b", {
            get: function () {
                var ret_ = this.d.k("floatingPanes", function (a) { return new SplitPaneCollection(); }, function (a) { return new SplitPane(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        DockManagerLayout.$t = igniteuiReactCore.markType(DockManagerLayout, 'DockManagerLayout');
        return DockManagerLayout;
    }(igniteuiReactCore.Base));

    /**
     * Describes a Dock Manager layout.
    */
    var IgrDockManagerLayout = /** @class */ /*@__PURE__*/ (function () {
        function IgrDockManagerLayout() {
            this.mounted = false;
            this._floatingPanes = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrDockManagerLayout.prototype.createImplementation = function () {
            return new DockManagerLayout();
        };
        Object.defineProperty(IgrDockManagerLayout.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerLayout.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerLayout.prototype.onImplementationCreated = function () {
        };
        IgrDockManagerLayout.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrDockManagerLayout.prototype, "name", {
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerLayout.prototype, "rootPane", {
            /**
             * The root split pane of the layout.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrSplitPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerLayout.prototype, "floatingPanes", {
            /**
             * The floating panes of the layout.
            */
            get: function () {
                if (this._floatingPanes === null) {
                    var coll = new IgrSplitPaneCollection();
                    var innerColl = this.i.b;
                    if (!innerColl) {
                        innerColl = new SplitPaneCollection();
                    }
                    this._floatingPanes = coll._fromInner(innerColl);
                }
                return this._floatingPanes;
            },
            set: function (v) {
                if (this._floatingPanes !== null) {
                    this._floatingPanes._setSyncTarget(null);
                    this._floatingPanes = null;
                }
                var coll = new IgrSplitPaneCollection();
                this._floatingPanes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(SplitPane.$type);
                var innerColl = this.i.b;
                if (!innerColl) {
                    innerColl = new SplitPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._floatingPanes._setSyncTarget(syncColl);
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerLayout.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.rootPane && this.rootPane.name && this.rootPane.name == name) {
                return this.rootPane;
            }
            if (this.floatingPanes != null && this.floatingPanes.findByName && this.floatingPanes.findByName(name)) {
                return this.floatingPanes.findByName(name);
            }
            return null;
        };
        IgrDockManagerLayout.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDockManagerLayout;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDockManagerLayoutModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDockManagerLayoutModule() {
        }
        IgrDockManagerLayoutModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrDockManagerLayout", IgrDockManagerLayout);
            igniteuiReactCore.TypeRegistrar.register("DockManagerLayout", DockManagerLayout.$type);
        };
        return IgrDockManagerLayoutModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrContentPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrContentPane, _super);
        function IgrContentPane(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            loader.defineCustomElements();
            return _this;
        }
        IgrContentPane.prototype.createImplementation = function () {
            return new ContentPane();
        };
        Object.defineProperty(IgrContentPane.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrContentPane.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrContentPane.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrContentPane.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrContentPane.prototype, "id", {
            /**
             * The id of the pane. If not set the Dock Manager generates it automatically.
            */
            get: function () {
                return this.i.ab;
            },
            set: function (v) {
                this.i.ab = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "type", {
            /**
             * The type of the pane.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(DockManagerPaneType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "contentId", {
            /**
             * The slot attribute's value of the content element.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "header", {
            /**
             * The text header of the content pane. Even if header slot templates are used, the text header is used for aria label.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "headerId", {
            /**
             * The slot attribute's value of the content pane header element. If not set, the `header` property value is used.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "tabHeaderId", {
            /**
             * The slot attribute's value of the tab header element. If not set, the `header` property value is used.
            */
            get: function () {
                return this.i.ac;
            },
            set: function (v) {
                this.i.ac = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "unpinnedHeaderId", {
            /**
             * The slot attribute's value of the unpinned header element. If not set, the `header` property value is used.
            */
            get: function () {
                return this.i.ad;
            },
            set: function (v) {
                this.i.ad = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "floatingHeaderId", {
            /**
             * The slot attribute's value of the floating header element. If not set, the `headerId` property value is used.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "size", {
            /**
             * The size of the pane relative to its sibling panes' sizes. Defaults to 100.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "allowClose", {
            /**
             * Determines whether the end user is allowed to close the pane. Defaults to true.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "allowMaximize", {
            /**
             * Determines whether the end user is allowed to maximize the pane.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "allowPinning", {
            /**
             * Determines whether the end user is allowed to pin/unpin the pane. Defaults to true.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "allowDocking", {
            /**
             * Determines whether the end user is allowed to dock the pane. Defaults to true.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "acceptsInnerDock", {
            /**
             * Determines whether the end user can inner dock another pane in this one. Defaults to true.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "allowFloating", {
            /**
             * Determines whether the end user is allowed to make the pane floating. Defaults to true.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "unpinnedSize", {
            /**
             * The absolute size of the pane in an unpinned state. Defaults to 200.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "isPinned", {
            /**
             * Determines whether a content pane is pinned or not. Defaults to true.
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "isMaximized", {
            /**
             * Determines whether a content pane is maximized or not. Defaults to false.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "unpinnedLocation", {
            /**
             * The desired unpinned location of the content pane.
             * If not set the Dock Manager automatically calculates it based on the location of the pane relatively to the document host.
             * If more than one document host is presented, the closest one in the pane hierarchy will be used for the calculation.
             * If there is no document host, the default location is left.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(UnpinnedLocation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "hidden", {
            /**
             * Determines whether a pane is hidden in the UI. Defaults to false.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "disabled", {
            /**
             * Determines whether a pane is disabled. Defaults to false.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrContentPane.prototype, "documentOnly", {
            /**
             * Marks that a content pane can be docked only inside a document host.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrContentPane.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrContentPane;
    }(IgrDockManagerPane));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrContentPaneModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrContentPaneModule() {
        }
        IgrContentPaneModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrContentPane", IgrContentPane);
            igniteuiReactCore.TypeRegistrar.register("ContentPane", ContentPane.$type);
        };
        return IgrContentPaneModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSplitPaneModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSplitPaneModule() {
        }
        IgrSplitPaneModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrSplitPane", IgrSplitPane);
            igniteuiReactCore.TypeRegistrar.register("SplitPane", SplitPane.$type);
        };
        return IgrSplitPaneModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrDocumentHost = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDocumentHost, _super);
        function IgrDocumentHost(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            loader.defineCustomElements();
            return _this;
        }
        IgrDocumentHost.prototype.createImplementation = function () {
            return new DocumentHost();
        };
        Object.defineProperty(IgrDocumentHost.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDocumentHost.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrDocumentHost.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDocumentHost.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrDocumentHost.prototype, "id", {
            /**
             * The id of the pane. If not set the Dock Manager generates it automatically.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDocumentHost.prototype, "type", {
            /**
             * The type of the pane.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(DockManagerPaneType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDocumentHost.prototype, "rootPane", {
            /**
             * The root split pane of the document host.
            */
            get: function () {
                var r = this.i.f;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrSplitPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.f = null : this.i.f = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDocumentHost.prototype, "size", {
            /**
             * The size of the pane relative to its sibling panes' sizes. Defaults to 100.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDocumentHost.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.rootPane && this.rootPane.name && this.rootPane.name == name) {
                return this.rootPane;
            }
            return null;
        };
        IgrDocumentHost.prototype._styling = function (container, component, parent) {
            _super.prototype._styling.call(this, container, component, parent);
            this._inStyling = true;
            if (this.rootPane && this.rootPane._styling) {
                this.rootPane._styling(container, component, this);
            }
            this._inStyling = false;
        };
        IgrDocumentHost.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDocumentHost;
    }(IgrDockManagerPane));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDocumentHostModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDocumentHostModule() {
        }
        IgrDocumentHostModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrDocumentHost", IgrDocumentHost);
            igniteuiReactCore.TypeRegistrar.register("DocumentHost", DocumentHost.$type);
        };
        return IgrDocumentHostModule;
    }());

    var IgrContentPaneCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrContentPaneCollection, _super);
        function IgrContentPaneCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrContentPane.$type) {
                IgrContentPane.$type = igniteuiReactCore.markType(IgrContentPane, "IgrContentPane");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrContentPaneCollection.prototype._createInnerColl = function () {
            if (!IgrContentPane.$type) {
                IgrContentPane.$type = igniteuiReactCore.markType(IgrContentPane, "IgrContentPane");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrContentPane.$type, ContentPane.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrContentPane._createFromInternal(int);
                    if (ext) {
                        if (!int.$type && ext._implementation.setNativeElement) {
                            ext._implementation.setNativeElement(int);
                        }
                        else {
                            ext._implementation = int;
                        }
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrContentPaneCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrTabGroupPane = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTabGroupPane, _super);
        function IgrTabGroupPane(props) {
            var _this = _super.call(this, props) || this;
            _this._panes = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            loader.defineCustomElements();
            return _this;
        }
        IgrTabGroupPane.prototype.createImplementation = function () {
            return new TabGroupPane();
        };
        Object.defineProperty(IgrTabGroupPane.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabGroupPane.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrTabGroupPane.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrTabGroupPane.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrTabGroupPane.prototype, "id", {
            /**
             * The id of the pane. If not set the Dock Manager generates it automatically.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabGroupPane.prototype, "type", {
            /**
             * The type of the pane.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(DockManagerPaneType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabGroupPane.prototype, "panes", {
            /**
             * The child content panes of the tab group.
            */
            get: function () {
                if (this._panes === null) {
                    var coll = new IgrContentPaneCollection();
                    var innerColl = this.i.e;
                    if (!innerColl) {
                        innerColl = new ContentPaneCollection();
                    }
                    this._panes = coll._fromInner(innerColl);
                }
                return this._panes;
            },
            set: function (v) {
                if (this._panes !== null) {
                    this._panes._setSyncTarget(null);
                    this._panes = null;
                }
                var coll = new IgrContentPaneCollection();
                this._panes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(ContentPane.$type);
                var innerColl = this.i.e;
                if (!innerColl) {
                    innerColl = new ContentPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._panes._setSyncTarget(syncColl);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabGroupPane.prototype, "size", {
            /**
             * The size of the pane relative to its sibling panes' sizes. Defaults to 100.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabGroupPane.prototype, "selectedIndex", {
            /**
             * The index of the selected tab.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabGroupPane.prototype, "allowEmpty", {
            /**
             * Determines whether the pane should present in the UI when empty.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabGroupPane.prototype, "isMaximized", {
            /**
             * Determines whether a tab group is maximized or not. Defaults to false.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrTabGroupPane.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.panes != null && this.panes.findByName && this.panes.findByName(name)) {
                return this.panes.findByName(name);
            }
            return null;
        };
        IgrTabGroupPane.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrTabGroupPane;
    }(IgrDockManagerPane));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTabGroupPaneModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabGroupPaneModule() {
        }
        IgrTabGroupPaneModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrTabGroupPane", IgrTabGroupPane);
            igniteuiReactCore.TypeRegistrar.register("TabGroupPane", TabGroupPane.$type);
        };
        return IgrTabGroupPaneModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DragService = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DragService, _super);
        function DragService() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(DragService.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DragService.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        DragService.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        DragService.$t = igniteuiReactCore.markType(DragService, 'DragService');
        return DragService;
    }(igniteuiReactCore.Base));

    var IgrDragService = /** @class */ /*@__PURE__*/ (function () {
        function IgrDragService() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrDragService.prototype.createImplementation = function () {
            return new DragService();
        };
        Object.defineProperty(IgrDragService.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDragService.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDragService.prototype.onImplementationCreated = function () {
        };
        IgrDragService.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        IgrDragService.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        IgrDragService.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDragService;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TabHeaderElement = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TabHeaderElement, _super);
        function TabHeaderElement() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(TabHeaderElement.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabHeaderElement.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.b.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        TabHeaderElement.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(TabHeaderElement.prototype, "a", {
            get: function () {
                var ret_ = this.c.m("dragService", function (a) { return new DragService(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("dragService", value_);
            },
            enumerable: false,
            configurable: true
        });
        TabHeaderElement.$t = igniteuiReactCore.markType(TabHeaderElement, 'TabHeaderElement', BaseElement.$);
        return TabHeaderElement;
    }(BaseElement));

    /**
     * Describes a tab header element.
    */
    var IgrTabHeaderElement = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabHeaderElement() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTabHeaderElement.prototype.createImplementation = function () {
            return new TabHeaderElement();
        };
        Object.defineProperty(IgrTabHeaderElement.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabHeaderElement.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabHeaderElement.prototype.onImplementationCreated = function () {
        };
        IgrTabHeaderElement.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTabHeaderElement.prototype, "dragService", {
            /**
             * Gets/sets the drag service.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDragService();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabHeaderElement.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.dragService && this.dragService.name && this.dragService.name == name) {
                return this.dragService;
            }
            return null;
        };
        IgrTabHeaderElement.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrTabHeaderElement;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTabHeaderElementModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabHeaderElementModule() {
        }
        IgrTabHeaderElementModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrTabHeaderElement", IgrTabHeaderElement);
            igniteuiReactCore.TypeRegistrar.register("TabHeaderElement", TabHeaderElement.$type);
        };
        return IgrTabHeaderElementModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DockManagerShowHeaderIconOnHover = /*@__PURE__*/ (function (DockManagerShowHeaderIconOnHover) {
        DockManagerShowHeaderIconOnHover[DockManagerShowHeaderIconOnHover["CloseOnly"] = 0] = "CloseOnly";
        DockManagerShowHeaderIconOnHover[DockManagerShowHeaderIconOnHover["MoreOptionsOnly"] = 1] = "MoreOptionsOnly";
        DockManagerShowHeaderIconOnHover[DockManagerShowHeaderIconOnHover["All"] = 2] = "All";
        return DockManagerShowHeaderIconOnHover;
    })({});
    /**
     * @hidden
     */
    var DockManagerShowHeaderIconOnHover_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DockManagerShowHeaderIconOnHover', 'CloseOnly,0|MoreOptionsOnly,1|All,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DockManagerResourceStrings = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockManagerResourceStrings, _super);
        function DockManagerResourceStrings() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(DockManagerResourceStrings.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        DockManagerResourceStrings.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(DockManagerResourceStrings.prototype, "e", {
            get: function () {
                var ret_ = this.b.n("close");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("close", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "l", {
            get: function () {
                var ret_ = this.b.n("pin");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("pin", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "m", {
            get: function () {
                var ret_ = this.b.n("unpin");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("unpin", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "g", {
            get: function () {
                var ret_ = this.b.n("maximize");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("maximize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "h", {
            get: function () {
                var ret_ = this.b.n("minimize");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("minimize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "i", {
            get: function () {
                var ret_ = this.b.n("moreOptions");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("moreOptions", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "j", {
            get: function () {
                var ret_ = this.b.n("moreTabs");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("moreTabs", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "k", {
            get: function () {
                var ret_ = this.b.n("panes");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("panes", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManagerResourceStrings.prototype, "f", {
            get: function () {
                var ret_ = this.b.n("documents");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("documents", value_);
            },
            enumerable: false,
            configurable: true
        });
        DockManagerResourceStrings.$t = igniteuiReactCore.markType(DockManagerResourceStrings, 'DockManagerResourceStrings');
        return DockManagerResourceStrings;
    }(igniteuiReactCore.Base));

    /**
     * Describes dock manager resource strings.
    */
    var IgrDockManagerResourceStrings = /** @class */ /*@__PURE__*/ (function () {
        function IgrDockManagerResourceStrings() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrDockManagerResourceStrings.prototype.createImplementation = function () {
            return new DockManagerResourceStrings();
        };
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerResourceStrings.prototype.onImplementationCreated = function () {
        };
        IgrDockManagerResourceStrings.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "close", {
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "pin", {
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "unpin", {
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "maximize", {
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "minimize", {
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "moreOptions", {
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "moreTabs", {
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "panes", {
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManagerResourceStrings.prototype, "documents", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManagerResourceStrings.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        IgrDockManagerResourceStrings.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDockManagerResourceStrings;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DockManagerShowPaneHeaders = /*@__PURE__*/ (function (DockManagerShowPaneHeaders) {
        DockManagerShowPaneHeaders[DockManagerShowPaneHeaders["OnHoverOnly"] = 0] = "OnHoverOnly";
        DockManagerShowPaneHeaders[DockManagerShowPaneHeaders["Always"] = 1] = "Always";
        return DockManagerShowPaneHeaders;
    })({});
    /**
     * @hidden
     */
    var DockManagerShowPaneHeaders_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DockManagerShowPaneHeaders', 'OnHoverOnly,0|Always,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var LayoutChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(LayoutChangeEventArgs, _super);
        function LayoutChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        LayoutChangeEventArgs.b = function (a) {
            return ((function () {
                var $ret = new LayoutChangeEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        LayoutChangeEventArgs.$t = igniteuiReactCore.markType(LayoutChangeEventArgs, 'LayoutChangeEventArgs');
        return LayoutChangeEventArgs;
    }(igniteuiReactCore.Base));

    var IgrLayoutChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrLayoutChangeEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrLayoutChangeEventArgs.prototype.createImplementation = function () {
            return new LayoutChangeEventArgs();
        };
        Object.defineProperty(IgrLayoutChangeEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrLayoutChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrLayoutChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrLayoutChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrLayoutChangeEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerLayout();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrLayoutChangeEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DockManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockManager, _super);
        function DockManager() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.layoutChange = null;
            _this.j = new WCNativeHelper();
            _this.r = null;
            return _this;
        }
        DockManager.prototype.layoutChangeChanged = function () {
            var _this = this;
            if (this.layoutChange != null) {
                this.k.s("layoutChange", function (a) { return _this.layoutChange(_this, LayoutChangeEventArgs.b(_this.b)); }, false);
            }
            else {
                this.k.v("layoutChange");
            }
        };
        Object.defineProperty(DockManager.prototype, "k", {
            get: function () {
                return this.j;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "nativeElement", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                this.r = a;
                this.j.o = this.r;
            },
            enumerable: false,
            configurable: true
        });
        DockManager.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(DockManager.prototype, "b", {
            get: function () {
                var ret_ = this.k.m("layout", function (a) { return new DockManagerLayout(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("layout", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "c", {
            get: function () {
                var ret_ = this.k.m("draggedPane", function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("draggedPane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "e", {
            get: function () {
                var ret_ = this.k.m("dropPosition", function (a) { return new DockManagerPoint(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("dropPosition", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "a", {
            get: function () {
                var ret_ = this.k.m("activePane", function (a) { return new ContentPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("activePane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "n", {
            get: function () {
                var ret_ = this.k.n("allowMaximize");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("allowMaximize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "o", {
            get: function () {
                var ret_ = this.k.n("containedInBoundaries");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("containedInBoundaries", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "g", {
            get: function () {
                var ret_ = this.k.n("showHeaderIconOnHover");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DockManagerShowHeaderIconOnHover_$type, igniteuiReactCore.EnumUtil.getEnumValue(DockManagerShowHeaderIconOnHover_$type, this.k.f(DockManagerShowHeaderIconOnHover_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DockManagerShowHeaderIconOnHover_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DockManagerShowHeaderIconOnHover_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.k.w("showHeaderIconOnHover", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "d", {
            get: function () {
                var ret_ = this.k.m("maximizedPane", function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("maximizedPane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "f", {
            get: function () {
                var ret_ = this.k.m("resourceStrings", function (a) { return new DockManagerResourceStrings(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("resourceStrings", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "l", {
            get: function () {
                var ret_ = this.k.n("allowFloatingPanesResize");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("allowFloatingPanesResize", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "p", {
            get: function () {
                var ret_ = this.k.n("disableKeyboardNavigation");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("disableKeyboardNavigation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "m", {
            get: function () {
                var ret_ = this.k.n("allowInnerDock");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("allowInnerDock", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "h", {
            get: function () {
                var ret_ = this.k.n("showPaneHeaders");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DockManagerShowPaneHeaders_$type, igniteuiReactCore.EnumUtil.getEnumValue(DockManagerShowPaneHeaders_$type, this.k.f(DockManagerShowPaneHeaders_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DockManagerShowPaneHeaders_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DockManagerShowPaneHeaders_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.k.w("showPaneHeaders", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockManager.prototype, "q", {
            get: function () {
                var ret_ = this.k.n("proximityDock");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.k.w("proximityDock", value_);
            },
            enumerable: false,
            configurable: true
        });
        DockManager.prototype.t = function (a) {
            this.nativeElement.focusPane(this.k.i(a));
        };
        DockManager.$t = igniteuiReactCore.markType(DockManager, 'DockManager', BaseElement.$);
        return DockManager;
    }(BaseElement));

    /**
     * Describes a Dock Manager component.
    */
    var IgrDockManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDockManager, _super);
        function IgrDockManager(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._layoutChange = null;
            _this._layoutChange_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            loader.defineCustomElements();
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrDockManager.prototype.createImplementation = function () {
            return new DockManager();
        };
        Object.defineProperty(IgrDockManager.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrDockManager._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDockManager.prototype.onImplementationCreated = function () {
        };
        IgrDockManager.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDockManager.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDockManager.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-dockmanager", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrDockManager.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrDockManager.prototype, "layout", {
            /**
             * Gets/sets the layout configuration of the Dock Manager.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerLayout();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "draggedPane", {
            /**
             * Gets/sets the currently dragged pane.
            */
            get: function () {
                var r = this.i.c;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.c = null : this.i.c = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "dropPosition", {
            /**
             * Gets/sets the current drop position when performing custom drag/drop.
            */
            get: function () {
                var r = this.i.e;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerPoint();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.e = null : this.i.e = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "activePane", {
            /**
             * Gets/sets the active pane of the Dock Manager.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrContentPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "allowMaximize", {
            /**
             * Determines whether the end user is allowed to maximize panes. Defaults to true.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "containedInBoundaries", {
            /**
             * Determines whether the floating panes are kept inside the Dock Manager boundaries. Defaults to false.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "showHeaderIconOnHover", {
            /**
             * Determines which tab header icons should show when hovering over the tab with the mouse. Defaults to undefined.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(DockManagerShowHeaderIconOnHover_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "maximizedPane", {
            /**
             * Gets/sets the maximized pane.
            */
            get: function () {
                var r = this.i.d;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.d = null : this.i.d = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "resourceStrings", {
            /**
             * Gets/sets the resource strings.
            */
            get: function () {
                var r = this.i.f;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerResourceStrings();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.f = null : this.i.f = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "allowFloatingPanesResize", {
            /**
             * Determines whether the end user is allowed to resize floating panes. Defaults to true.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "disableKeyboardNavigation", {
            /**
             * Disables the built-in keyboard shortcuts for pane navigation. Defaults to false.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "allowInnerDock", {
            /**
             * Determines whether the end user is allowed to inner dock panes. Defaults to true.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "showPaneHeaders", {
            /**
             * Determines whether pane headers are only shown on hover or always visible. Defaults to 'always'.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureEnum(DockManagerShowPaneHeaders_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockManager.prototype, "proximityDock", {
            /**
             * Determines whether the end user can dock the dragged pane by dragging it close to the target pane edges.
             * If enabled, docking indicators are not visible. Defaults to false.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManager.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.layout && this.layout.name && this.layout.name == name) {
                return this.layout;
            }
            if (this.draggedPane && this.draggedPane.name && this.draggedPane.name == name) {
                return this.draggedPane;
            }
            if (this.dropPosition && this.dropPosition.name && this.dropPosition.name == name) {
                return this.dropPosition;
            }
            if (this.activePane && this.activePane.name && this.activePane.name == name) {
                return this.activePane;
            }
            if (this.maximizedPane && this.maximizedPane.name && this.maximizedPane.name == name) {
                return this.maximizedPane;
            }
            if (this.resourceStrings && this.resourceStrings.name && this.resourceStrings.name == name) {
                return this.resourceStrings;
            }
            return null;
        };
        Object.defineProperty(IgrDockManager.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockManager.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDockManager.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DockManager");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this.draggedPane && this.draggedPane._styling) {
                this.draggedPane._styling(container, component, this);
            }
            if (this.activePane && this.activePane._styling) {
                this.activePane._styling(container, component, this);
            }
            if (this.maximizedPane && this.maximizedPane._styling) {
                this.maximizedPane._styling(container, component, this);
            }
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDockManager.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Focuses a pane from the layout.
        
        */
        IgrDockManager.prototype.focusPane = function (contentId) {
            this.i.t(contentId);
        };
        Object.defineProperty(IgrDockManager.prototype, "layoutChange", {
            get: function () {
                return this._layoutChange;
            },
            set: function (ev) {
                var _this = this;
                if (this._layoutChange_wrapped !== null) {
                    this.i.layoutChange = igniteuiReactCore.delegateRemove(this.i.layoutChange, this._layoutChange_wrapped);
                    this._layoutChange_wrapped = null;
                    this._layoutChange = null;
                }
                this._layoutChange = ev;
                this._layoutChange_wrapped = function (o, e) {
                    var outerArgs = new IgrLayoutChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeLayoutChange) {
                        _this.beforeLayoutChange(_this, outerArgs);
                    }
                    if (_this._layoutChange) {
                        _this._layoutChange(_this, outerArgs);
                    }
                };
                this.i.layoutChange = igniteuiReactCore.delegateCombine(this.i.layoutChange, this._layoutChange_wrapped);
                if (this.i.layoutChangeChanged) {
                    this.i.layoutChangeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrDockManager;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDockManagerModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDockManagerModule() {
        }
        IgrDockManagerModule.register = function () {
            IgrDockManagerLayoutModule.register();
            IgrContentPaneModule.register();
            IgrSplitPaneModule.register();
            IgrDocumentHostModule.register();
            IgrTabGroupPaneModule.register();
            IgrTabHeaderElementModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDockManager', IgrDockManager);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDockManager', IgrDockManager);
        };
        return IgrDockManagerModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ExpansionPanelIndicatorPosition = /*@__PURE__*/ (function (ExpansionPanelIndicatorPosition) {
        ExpansionPanelIndicatorPosition[ExpansionPanelIndicatorPosition["None"] = 0] = "None";
        ExpansionPanelIndicatorPosition[ExpansionPanelIndicatorPosition["Start"] = 1] = "Start";
        ExpansionPanelIndicatorPosition[ExpansionPanelIndicatorPosition["End"] = 2] = "End";
        return ExpansionPanelIndicatorPosition;
    })({});
    /**
     * @hidden
     */
    var ExpansionPanelIndicatorPosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ExpansionPanelIndicatorPosition', 'None,0|Start,1|End,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ExpansionPanel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ExpansionPanel, _super);
        function ExpansionPanel() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.f = new WCNativeHelper();
            _this.m = null;
            _this.opening = null;
            _this.opened = null;
            _this.closing = null;
            _this.closed = null;
            return _this;
        }
        Object.defineProperty(ExpansionPanel.prototype, "g", {
            get: function () {
                return this.f;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExpansionPanel.prototype, "nativeElement", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                this.m = a;
                this.f.o = this.m;
            },
            enumerable: false,
            configurable: true
        });
        ExpansionPanel.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(ExpansionPanel.prototype, "j", {
            get: function () {
                var ret_ = this.g.n("open");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("open", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExpansionPanel.prototype, "h", {
            get: function () {
                var ret_ = this.g.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.g.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExpansionPanel.prototype, "e", {
            get: function () {
                var ret_ = this.g.n("indicatorPosition");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ExpansionPanelIndicatorPosition_$type, igniteuiReactCore.EnumUtil.getEnumValue(ExpansionPanelIndicatorPosition_$type, this.g.f(ExpansionPanelIndicatorPosition_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ExpansionPanelIndicatorPosition_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ExpansionPanelIndicatorPosition_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.g.w("indicatorPosition", value_);
            },
            enumerable: false,
            configurable: true
        });
        ExpansionPanel.prototype.openingChanged = function () {
            var _this = this;
            if (this.opening != null) {
                this.g.s("opening", function (a) { return _this.opening(_this, ExpansionPanelComponentEventArgs.b(a)); });
            }
            else {
                this.g.v("opening");
            }
        };
        ExpansionPanel.prototype.openedChanged = function () {
            var _this = this;
            if (this.opened != null) {
                this.g.s("opened", function (a) { return _this.opened(_this, ExpansionPanelComponentEventArgs.b(a)); });
            }
            else {
                this.g.v("opened");
            }
        };
        ExpansionPanel.prototype.closingChanged = function () {
            var _this = this;
            if (this.closing != null) {
                this.g.s("closing", function (a) { return _this.closing(_this, ExpansionPanelComponentEventArgs.b(a)); });
            }
            else {
                this.g.v("closing");
            }
        };
        ExpansionPanel.prototype.closedChanged = function () {
            var _this = this;
            if (this.closed != null) {
                this.g.s("closed", function (a) { return _this.closed(_this, ExpansionPanelComponentEventArgs.b(a)); });
            }
            else {
                this.g.v("closed");
            }
        };
        ExpansionPanel.prototype.q = function () {
            this.nativeElement.connectedCallback();
        };
        ExpansionPanel.prototype.l = function () {
            return (this.nativeElement.toggle());
        };
        ExpansionPanel.prototype.i = function () {
            return (this.nativeElement.hide());
        };
        ExpansionPanel.prototype.k = function () {
            return (this.nativeElement.show());
        };
        ExpansionPanel.$t = igniteuiReactCore.markType(ExpansionPanel, 'ExpansionPanel', BaseElement.$);
        return ExpansionPanel;
    }(BaseElement));
    /**
     * @hidden
     */
    var ExpansionPanelComponentEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ExpansionPanelComponentEventArgs, _super);
        function ExpansionPanelComponentEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        ExpansionPanelComponentEventArgs.b = function (a) {
            return ((function () {
                var $ret = new ExpansionPanelComponentEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        ExpansionPanelComponentEventArgs.$t = igniteuiReactCore.markType(ExpansionPanelComponentEventArgs, 'ExpansionPanelComponentEventArgs');
        return ExpansionPanelComponentEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * The Expansion Panel Component provides a way to display information in a toggleable way -
     * compact summary view containing title and description and expanded detail view containing
     * additional content to the summary header.
    */
    var IgrExpansionPanel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrExpansionPanel, _super);
        function IgrExpansionPanel(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._opening = null;
            _this._opening_wrapped = null;
            _this._opened = null;
            _this._opened_wrapped = null;
            _this._closing = null;
            _this._closing_wrapped = null;
            _this._closed = null;
            _this._closed_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcExpansionPanelComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrExpansionPanel.prototype.createImplementation = function () {
            return new ExpansionPanel();
        };
        Object.defineProperty(IgrExpansionPanel.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrExpansionPanel.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrExpansionPanel._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrExpansionPanel.prototype.onImplementationCreated = function () {
        };
        IgrExpansionPanel.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrExpansionPanel.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrExpansionPanel.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-expansion-panel", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrExpansionPanel.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrExpansionPanel.prototype, "open", {
            /**
             * Indicates whether the contents of the control should be visible.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrExpansionPanel.prototype, "disabled", {
            /**
             * Get/Set whether the expansion panel is disabled. Disabled panels are ignored for user interactions.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrExpansionPanel.prototype, "indicatorPosition", {
            /**
             * The indicator position of the expansion panel.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(ExpansionPanelIndicatorPosition_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrExpansionPanel.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrExpansionPanel.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrExpansionPanel.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrExpansionPanel.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ExpansionPanel");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrExpansionPanel.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrExpansionPanel.prototype.connectedCallback = function () {
            this.i.q();
        };
        /**
         * Toggles the panel open/close state.
        
        */
        IgrExpansionPanel.prototype.toggle = function () {
            var iv = this.i.l();
            return (iv);
        };
        /**
         * Hides the panel content.
        
        */
        IgrExpansionPanel.prototype.hide = function () {
            var iv = this.i.i();
            return (iv);
        };
        /**
         * Shows the panel content.
        
        */
        IgrExpansionPanel.prototype.show = function () {
            var iv = this.i.k();
            return (iv);
        };
        Object.defineProperty(IgrExpansionPanel.prototype, "opening", {
            get: function () {
                return this._opening;
            },
            set: function (ev) {
                var _this = this;
                if (this._opening_wrapped !== null) {
                    this.i.opening = igniteuiReactCore.delegateRemove(this.i.opening, this._opening_wrapped);
                    this._opening_wrapped = null;
                    this._opening = null;
                }
                this._opening = ev;
                this._opening_wrapped = function (o, e) {
                    var outerArgs = new IgrExpansionPanelComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpening) {
                        _this.beforeOpening(_this, outerArgs);
                    }
                    if (_this._opening) {
                        _this._opening(_this, outerArgs);
                    }
                };
                this.i.opening = igniteuiReactCore.delegateCombine(this.i.opening, this._opening_wrapped);
                if (this.i.openingChanged) {
                    this.i.openingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrExpansionPanel.prototype, "opened", {
            get: function () {
                return this._opened;
            },
            set: function (ev) {
                var _this = this;
                if (this._opened_wrapped !== null) {
                    this.i.opened = igniteuiReactCore.delegateRemove(this.i.opened, this._opened_wrapped);
                    this._opened_wrapped = null;
                    this._opened = null;
                }
                this._opened = ev;
                this._opened_wrapped = function (o, e) {
                    var outerArgs = new IgrExpansionPanelComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpened) {
                        _this.beforeOpened(_this, outerArgs);
                    }
                    if (_this._opened) {
                        _this._opened(_this, outerArgs);
                    }
                };
                this.i.opened = igniteuiReactCore.delegateCombine(this.i.opened, this._opened_wrapped);
                if (this.i.openedChanged) {
                    this.i.openedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrExpansionPanel.prototype, "closing", {
            get: function () {
                return this._closing;
            },
            set: function (ev) {
                var _this = this;
                if (this._closing_wrapped !== null) {
                    this.i.closing = igniteuiReactCore.delegateRemove(this.i.closing, this._closing_wrapped);
                    this._closing_wrapped = null;
                    this._closing = null;
                }
                this._closing = ev;
                this._closing_wrapped = function (o, e) {
                    var outerArgs = new IgrExpansionPanelComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosing) {
                        _this.beforeClosing(_this, outerArgs);
                    }
                    if (_this._closing) {
                        _this._closing(_this, outerArgs);
                    }
                };
                this.i.closing = igniteuiReactCore.delegateCombine(this.i.closing, this._closing_wrapped);
                if (this.i.closingChanged) {
                    this.i.closingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrExpansionPanel.prototype, "closed", {
            get: function () {
                return this._closed;
            },
            set: function (ev) {
                var _this = this;
                if (this._closed_wrapped !== null) {
                    this.i.closed = igniteuiReactCore.delegateRemove(this.i.closed, this._closed_wrapped);
                    this._closed_wrapped = null;
                    this._closed = null;
                }
                this._closed = ev;
                this._closed_wrapped = function (o, e) {
                    var outerArgs = new IgrExpansionPanelComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosed) {
                        _this.beforeClosed(_this, outerArgs);
                    }
                    if (_this._closed) {
                        _this._closed(_this, outerArgs);
                    }
                };
                this.i.closed = igniteuiReactCore.delegateCombine(this.i.closed, this._closed_wrapped);
                if (this.i.closedChanged) {
                    this.i.closedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrExpansionPanel;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrExpansionPanelComponentEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrExpansionPanelComponentEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrExpansionPanelComponentEventArgs.prototype.createImplementation = function () {
            return new ExpansionPanelComponentEventArgs();
        };
        Object.defineProperty(IgrExpansionPanelComponentEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrExpansionPanelComponentEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrExpansionPanelComponentEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrExpansionPanelComponentEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrExpansionPanelComponentEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrExpansionPanel({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrExpansionPanelComponentEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrExpansionPanelModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrExpansionPanelModule() {
        }
        IgrExpansionPanelModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrExpansionPanelComponentEventArgs', IgrExpansionPanelComponentEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrExpansionPanel', IgrExpansionPanel);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrExpansionPanel', IgrExpansionPanel);
        };
        return IgrExpansionPanelModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var MaskInputValueMode = /*@__PURE__*/ (function (MaskInputValueMode) {
        MaskInputValueMode[MaskInputValueMode["Raw"] = 0] = "Raw";
        MaskInputValueMode[MaskInputValueMode["WithFormatting"] = 1] = "WithFormatting";
        return MaskInputValueMode;
    })({});
    /**
     * @hidden
     */
    var MaskInputValueMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('MaskInputValueMode', 'Raw,0|WithFormatting,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MaskInput = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(MaskInput, _super);
        function MaskInput() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.change = null;
            return _this;
        }
        Object.defineProperty(MaskInput.prototype, "ae", {
            get: function () {
                var ret_ = this.e.n("valueMode");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(MaskInputValueMode_$type, igniteuiReactCore.EnumUtil.getEnumValue(MaskInputValueMode_$type, this.e.f(MaskInputValueMode_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(MaskInputValueMode_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(MaskInputValueMode_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("valueMode", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MaskInput.prototype, "ag", {
            get: function () {
                var ret_ = this.e.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MaskInput.prototype, "af", {
            get: function () {
                var ret_ = this.e.n("mask");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("mask", value_);
            },
            enumerable: false,
            configurable: true
        });
        MaskInput.prototype.ai = function () {
            this.nativeElement.connectedCallback();
        };
        MaskInput.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.e.s("change", function (a) { return _this.change(_this, ComponentDataValueChangedEventArgs.a(a)); });
            }
            else {
                this.e.v("change");
            }
        };
        MaskInput.$t = igniteuiReactCore.markType(MaskInput, 'MaskInput', MaskInputBase.$);
        return MaskInput;
    }(MaskInputBase));

    /**
     * A masked input is an input field where a developer can control user input and format the visible value,
     * based on configurable rules
    */
    var IgrMaskInput = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrMaskInput, _super);
        function IgrMaskInput(props) {
            var _this = _super.call(this, props) || this;
            _this._change = null;
            _this._change_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcMaskInputComponent);
            return _this;
        }
        IgrMaskInput.prototype.createImplementation = function () {
            return new MaskInput();
        };
        Object.defineProperty(IgrMaskInput.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrMaskInput.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrMaskInput.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-mask-input", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrMaskInput.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrMaskInput.prototype, "valueMode", {
            /**
             * Dictates the behavior when retrieving the value of the control:
             * - `raw` will return the clean user input.
             * - `withFormatting` will return the value with all literals and prompts.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = igniteuiReactCore.ensureEnum(MaskInputValueMode_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMaskInput.prototype, "value", {
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMaskInput.prototype, "mask", {
            /**
             * The mask pattern to apply on the input.
            */
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrMaskInput.prototype.connectedCallback = function () {
            this.i.ai();
        };
        Object.defineProperty(IgrMaskInput.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrComponentDataValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrMaskInput;
    }(IgrMaskInputBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrMaskInputModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrMaskInputModule() {
        }
        IgrMaskInputModule.register = function () {
            IgrMaskInputBaseModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrMaskInput', IgrMaskInput);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrMaskInput', IgrMaskInput);
        };
        return IgrMaskInputModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeItem, _super);
        function TreeItem() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.k = null;
            return _this;
        }
        Object.defineProperty(TreeItem.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "nativeElement", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                this.k = a;
                this.c.o = this.k;
            },
            enumerable: false,
            configurable: true
        });
        TreeItem.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(TreeItem.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("parent", function (a) { return new TreeItem(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("parent", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "j", {
            get: function () {
                var ret_ = this.d.n("level");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("level", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "n", {
            get: function () {
                var ret_ = this.d.n("label");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("label", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "g", {
            get: function () {
                var ret_ = this.d.n("expanded");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("expanded", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "e", {
            get: function () {
                var ret_ = this.d.n("active");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("active", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "f", {
            get: function () {
                var ret_ = this.d.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "i", {
            get: function () {
                var ret_ = this.d.n("selected");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("selected", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "h", {
            get: function () {
                var ret_ = this.d.n("loading");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("loading", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "m", {
            get: function () {
                var ret_ = this.d.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeItem.prototype, "a", {
            get: function () {
                var ret_ = this.d.m("path", function (a) { return new TreeItem(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        TreeItem.prototype.q = function () {
            this.nativeElement.connectedCallback();
        };
        TreeItem.prototype.r = function () {
            this.nativeElement.disconnectedCallback();
        };
        TreeItem.prototype.t = function () {
            this.nativeElement.expandWithEvent();
        };
        TreeItem.prototype.p = function () {
            this.nativeElement.collapseWithEvent();
        };
        TreeItem.prototype.v = function () {
            this.nativeElement.toggle();
        };
        TreeItem.prototype.s = function () {
            this.nativeElement.expand();
        };
        TreeItem.prototype.o = function () {
            this.nativeElement.collapse();
        };
        TreeItem.$t = igniteuiReactCore.markType(TreeItem, 'TreeItem', BaseElement.$);
        return TreeItem;
    }(BaseElement));

    /**
     * The tree-item component represents a child item of the tree component or another tree item.
    */
    var IgrTreeItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTreeItem, _super);
        function IgrTreeItem(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcTreeItemComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrTreeItem.prototype.createImplementation = function () {
            return new TreeItem();
        };
        Object.defineProperty(IgrTreeItem.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrTreeItem._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrTreeItem.prototype.onImplementationCreated = function () {
        };
        IgrTreeItem.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrTreeItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrTreeItem.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-tree-item", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrTreeItem.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrTreeItem.prototype, "parent", {
            /**
             * The parent item of the current tree item (if any)
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrTreeItem({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "level", {
            /**
             * The depth of the item, relative to the root.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "label", {
            /**
             * The tree item label.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "expanded", {
            /**
             * The tree item expansion state.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "active", {
            /**
             * Marks the item as the tree's active item.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "disabled", {
            /**
             * Get/Set whether the tree item is disabled. Disabled items are ignored for user interactions.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "selected", {
            /**
             * The tree item selection state.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "loading", {
            /**
             * To be used for load-on-demand scenarios in order to specify whether the item is loading data.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "value", {
            /**
             * The value entry that the tree item is visualizing. Required for searching through items.
             * @type any
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItem.prototype, "path", {
            /**
             * The full path to the tree item, starting from the top-most ancestor.
            */
            get: function () {
                if (!this.i.a) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.a.length; i++) {
                    var impl = this.i.a[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrTreeItem) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrTreeItem._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeItem.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.parent && this.parent.name && this.parent.name == name) {
                return this.parent;
            }
            return null;
        };
        Object.defineProperty(IgrTreeItem.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeItem.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrTreeItem.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("TreeItem");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this.parent && this.parent._styling) {
                this.parent._styling(container, component, this);
            }
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrTreeItem.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrTreeItem.prototype.connectedCallback = function () {
            this.i.q();
        };
        IgrTreeItem.prototype.disconnectedCallback = function () {
            this.i.r();
        };
        /**
         * @private
         * Expands the tree item.
        
        */
        IgrTreeItem.prototype.expandWithEvent = function () {
            this.i.t();
        };
        /**
         * @private
         * Collapses the tree item.
        
        */
        IgrTreeItem.prototype.collapseWithEvent = function () {
            this.i.p();
        };
        /**
         * Toggles tree item expansion state.
        
        */
        IgrTreeItem.prototype.toggle = function () {
            this.i.v();
        };
        /**
         * Expands the tree item.
        
        */
        IgrTreeItem.prototype.expand = function () {
            this.i.s();
        };
        /**
         * Collapses the tree item.
        
        */
        IgrTreeItem.prototype.collapse = function () {
            this.i.o();
        };
        return IgrTreeItem;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTreeItemModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeItemModule() {
        }
        IgrTreeItemModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTreeItem', IgrTreeItem);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTreeItem', IgrTreeItem);
        };
        return IgrTreeItemModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeSelectionChangeDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeSelectionChangeDetail, _super);
        function TreeSelectionChangeDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(TreeSelectionChangeDetail.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeSelectionChangeDetail.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.b.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TreeSelectionChangeDetail.prototype, "a", {
            get: function () {
                var ret_ = this.c.m("newSelection", function (a) { return new TreeItem(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("newSelection", value_);
            },
            enumerable: false,
            configurable: true
        });
        TreeSelectionChangeDetail.$t = igniteuiReactCore.markType(TreeSelectionChangeDetail, 'TreeSelectionChangeDetail');
        return TreeSelectionChangeDetail;
    }(igniteuiReactCore.Base));

    var IgrTreeSelectionChangeDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeSelectionChangeDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTreeSelectionChangeDetail.prototype.createImplementation = function () {
            return new TreeSelectionChangeDetail();
        };
        Object.defineProperty(IgrTreeSelectionChangeDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeSelectionChangeDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeSelectionChangeDetail.prototype.onImplementationCreated = function () {
        };
        IgrTreeSelectionChangeDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTreeSelectionChangeDetail.prototype, "newSelection", {
            get: function () {
                if (!this.i.a) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.a.length; i++) {
                    var impl = this.i.a[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrTreeItem) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrTreeItem._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            set: function (v) {
                var arr = [];
                for (var i = 0; i < v.length; i++) {
                    arr.push(v[i].i);
                }
                this.i.a = arr;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeSelectionChangeDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrTreeSelectionChangeDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeSelectionChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeSelectionChangeEventArgs, _super);
        function TreeSelectionChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        TreeSelectionChangeEventArgs.b = function (a) {
            return ((function () {
                var $ret = new TreeSelectionChangeEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        TreeSelectionChangeEventArgs.$t = igniteuiReactCore.markType(TreeSelectionChangeEventArgs, 'TreeSelectionChangeEventArgs');
        return TreeSelectionChangeEventArgs;
    }(igniteuiReactCore.Base));

    var IgrTreeSelectionChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeSelectionChangeEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTreeSelectionChangeEventArgs.prototype.createImplementation = function () {
            return new TreeSelectionChangeEventArgs();
        };
        Object.defineProperty(IgrTreeSelectionChangeEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeSelectionChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeSelectionChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTreeSelectionChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTreeSelectionChangeEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrTreeSelectionChangeDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTreeSelectionChangeEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeItemComponentEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeItemComponentEventArgs, _super);
        function TreeItemComponentEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        TreeItemComponentEventArgs.b = function (a) {
            return ((function () {
                var $ret = new TreeItemComponentEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        TreeItemComponentEventArgs.$t = igniteuiReactCore.markType(TreeItemComponentEventArgs, 'TreeItemComponentEventArgs');
        return TreeItemComponentEventArgs;
    }(igniteuiReactCore.Base));

    var IgrTreeItemComponentEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeItemComponentEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTreeItemComponentEventArgs.prototype.createImplementation = function () {
            return new TreeItemComponentEventArgs();
        };
        Object.defineProperty(IgrTreeItemComponentEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeItemComponentEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeItemComponentEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTreeItemComponentEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTreeItemComponentEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrTreeItem({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTreeItemComponentEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TreeSelection = /*@__PURE__*/ (function (TreeSelection) {
        TreeSelection[TreeSelection["None"] = 0] = "None";
        TreeSelection[TreeSelection["Multiple"] = 1] = "Multiple";
        TreeSelection[TreeSelection["Cascade"] = 2] = "Cascade";
        return TreeSelection;
    })({});
    /**
     * @hidden
     */
    var TreeSelection_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TreeSelection', 'None,0|Multiple,1|Cascade,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Tree = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Tree, _super);
        function Tree() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.h = new WCNativeHelper();
            _this.l = null;
            _this.selectionChanged = null;
            _this.itemExpanding = null;
            _this.itemExpanded = null;
            _this.itemCollapsing = null;
            _this.itemCollapsed = null;
            _this.activeItem = null;
            return _this;
        }
        Object.defineProperty(Tree.prototype, "i", {
            get: function () {
                return this.h;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tree.prototype, "nativeElement", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                this.l = a;
                this.h.o = this.l;
            },
            enumerable: false,
            configurable: true
        });
        Tree.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Tree.prototype, "j", {
            get: function () {
                var ret_ = this.i.n("singleBranchExpand");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.i.w("singleBranchExpand", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tree.prototype, "k", {
            get: function () {
                var ret_ = this.i.n("toggleNodeOnClick");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.i.w("toggleNodeOnClick", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tree.prototype, "f", {
            get: function () {
                var ret_ = this.i.n("selection");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TreeSelection_$type, igniteuiReactCore.EnumUtil.getEnumValue(TreeSelection_$type, this.i.f(TreeSelection_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TreeSelection_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TreeSelection_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.i.w("selection", value_);
            },
            enumerable: false,
            configurable: true
        });
        Tree.prototype.selectionChangedChanged = function () {
            var _this = this;
            if (this.selectionChanged != null) {
                this.i.s("selection", function (a) { return _this.selectionChanged(_this, TreeSelectionChangeEventArgs.b(a)); });
            }
            else {
                this.i.v("selection");
            }
        };
        Tree.prototype.itemExpandingChanged = function () {
            var _this = this;
            if (this.itemExpanding != null) {
                this.i.s("itemExpanding", function (a) { return _this.itemExpanding(_this, TreeItemComponentEventArgs.b(a)); });
            }
            else {
                this.i.v("itemExpanding");
            }
        };
        Tree.prototype.itemExpandedChanged = function () {
            var _this = this;
            if (this.itemExpanded != null) {
                this.i.s("itemExpanded", function (a) { return _this.itemExpanded(_this, TreeItemComponentEventArgs.b(a)); });
            }
            else {
                this.i.v("itemExpanded");
            }
        };
        Tree.prototype.itemCollapsingChanged = function () {
            var _this = this;
            if (this.itemCollapsing != null) {
                this.i.s("itemCollapsing", function (a) { return _this.itemCollapsing(_this, TreeItemComponentEventArgs.b(a)); });
            }
            else {
                this.i.v("itemCollapsing");
            }
        };
        Tree.prototype.itemCollapsedChanged = function () {
            var _this = this;
            if (this.itemCollapsed != null) {
                this.i.s("itemCollapsed", function (a) { return _this.itemCollapsed(_this, TreeItemComponentEventArgs.b(a)); });
            }
            else {
                this.i.v("itemCollapsed");
            }
        };
        Tree.prototype.activeItemChanged = function () {
            var _this = this;
            if (this.activeItem != null) {
                this.i.s("activeItem", function (a) { return _this.activeItem(_this, TreeItemComponentEventArgs.b(a)); });
            }
            else {
                this.i.v("activeItem");
            }
        };
        Tree.prototype.o = function () {
            this.nativeElement.connectedCallback();
        };
        Tree.prototype.p = function (a) {
            this.nativeElement.expandToItem(this.i.i(a));
        };
        Tree.$t = igniteuiReactCore.markType(Tree, 'Tree', BaseElement.$);
        return Tree;
    }(BaseElement));

    /**
     * The tree allows users to represent hierarchical data in a tree-view structure,
     * maintaining parent-child relationships, as well as to define static tree-view structure without a corresponding data model.
    */
    var IgrTree = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTree, _super);
        function IgrTree(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._selectionChanged = null;
            _this._selectionChanged_wrapped = null;
            _this._itemExpanding = null;
            _this._itemExpanding_wrapped = null;
            _this._itemExpanded = null;
            _this._itemExpanded_wrapped = null;
            _this._itemCollapsing = null;
            _this._itemCollapsing_wrapped = null;
            _this._itemCollapsed = null;
            _this._itemCollapsed_wrapped = null;
            _this._activeItem = null;
            _this._activeItem_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcTreeComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrTree.prototype.createImplementation = function () {
            return new Tree();
        };
        Object.defineProperty(IgrTree.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrTree._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrTree.prototype.onImplementationCreated = function () {
        };
        IgrTree.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrTree.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrTree.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-tree", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrTree.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrTree.prototype, "singleBranchExpand", {
            /**
             * Whether a single or multiple of a parent's child items can be expanded.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "toggleNodeOnClick", {
            /**
             * Whether clicking over nodes will change their expanded state or not.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "selection", {
            /**
             * The selection state of the tree.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(TreeSelection_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrTree.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrTree.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrTree.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrTree.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Tree");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrTree.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrTree.prototype.connectedCallback = function () {
            this.i.o();
        };
        /**
         * @private
        
        */
        IgrTree.prototype.expandToItem = function (item) {
            this.i.p((item == null ? null : item.i));
        };
        Object.defineProperty(IgrTree.prototype, "selectionChanged", {
            get: function () {
                return this._selectionChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._selectionChanged_wrapped !== null) {
                    this.i.selectionChanged = igniteuiReactCore.delegateRemove(this.i.selectionChanged, this._selectionChanged_wrapped);
                    this._selectionChanged_wrapped = null;
                    this._selectionChanged = null;
                }
                this._selectionChanged = ev;
                this._selectionChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrTreeSelectionChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelectionChanged) {
                        _this.beforeSelectionChanged(_this, outerArgs);
                    }
                    if (_this._selectionChanged) {
                        _this._selectionChanged(_this, outerArgs);
                    }
                };
                this.i.selectionChanged = igniteuiReactCore.delegateCombine(this.i.selectionChanged, this._selectionChanged_wrapped);
                if (this.i.selectionChangedChanged) {
                    this.i.selectionChangedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "itemExpanding", {
            get: function () {
                return this._itemExpanding;
            },
            set: function (ev) {
                var _this = this;
                if (this._itemExpanding_wrapped !== null) {
                    this.i.itemExpanding = igniteuiReactCore.delegateRemove(this.i.itemExpanding, this._itemExpanding_wrapped);
                    this._itemExpanding_wrapped = null;
                    this._itemExpanding = null;
                }
                this._itemExpanding = ev;
                this._itemExpanding_wrapped = function (o, e) {
                    var outerArgs = new IgrTreeItemComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeItemExpanding) {
                        _this.beforeItemExpanding(_this, outerArgs);
                    }
                    if (_this._itemExpanding) {
                        _this._itemExpanding(_this, outerArgs);
                    }
                };
                this.i.itemExpanding = igniteuiReactCore.delegateCombine(this.i.itemExpanding, this._itemExpanding_wrapped);
                if (this.i.itemExpandingChanged) {
                    this.i.itemExpandingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "itemExpanded", {
            get: function () {
                return this._itemExpanded;
            },
            set: function (ev) {
                var _this = this;
                if (this._itemExpanded_wrapped !== null) {
                    this.i.itemExpanded = igniteuiReactCore.delegateRemove(this.i.itemExpanded, this._itemExpanded_wrapped);
                    this._itemExpanded_wrapped = null;
                    this._itemExpanded = null;
                }
                this._itemExpanded = ev;
                this._itemExpanded_wrapped = function (o, e) {
                    var outerArgs = new IgrTreeItemComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeItemExpanded) {
                        _this.beforeItemExpanded(_this, outerArgs);
                    }
                    if (_this._itemExpanded) {
                        _this._itemExpanded(_this, outerArgs);
                    }
                };
                this.i.itemExpanded = igniteuiReactCore.delegateCombine(this.i.itemExpanded, this._itemExpanded_wrapped);
                if (this.i.itemExpandedChanged) {
                    this.i.itemExpandedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "itemCollapsing", {
            get: function () {
                return this._itemCollapsing;
            },
            set: function (ev) {
                var _this = this;
                if (this._itemCollapsing_wrapped !== null) {
                    this.i.itemCollapsing = igniteuiReactCore.delegateRemove(this.i.itemCollapsing, this._itemCollapsing_wrapped);
                    this._itemCollapsing_wrapped = null;
                    this._itemCollapsing = null;
                }
                this._itemCollapsing = ev;
                this._itemCollapsing_wrapped = function (o, e) {
                    var outerArgs = new IgrTreeItemComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeItemCollapsing) {
                        _this.beforeItemCollapsing(_this, outerArgs);
                    }
                    if (_this._itemCollapsing) {
                        _this._itemCollapsing(_this, outerArgs);
                    }
                };
                this.i.itemCollapsing = igniteuiReactCore.delegateCombine(this.i.itemCollapsing, this._itemCollapsing_wrapped);
                if (this.i.itemCollapsingChanged) {
                    this.i.itemCollapsingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "itemCollapsed", {
            get: function () {
                return this._itemCollapsed;
            },
            set: function (ev) {
                var _this = this;
                if (this._itemCollapsed_wrapped !== null) {
                    this.i.itemCollapsed = igniteuiReactCore.delegateRemove(this.i.itemCollapsed, this._itemCollapsed_wrapped);
                    this._itemCollapsed_wrapped = null;
                    this._itemCollapsed = null;
                }
                this._itemCollapsed = ev;
                this._itemCollapsed_wrapped = function (o, e) {
                    var outerArgs = new IgrTreeItemComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeItemCollapsed) {
                        _this.beforeItemCollapsed(_this, outerArgs);
                    }
                    if (_this._itemCollapsed) {
                        _this._itemCollapsed(_this, outerArgs);
                    }
                };
                this.i.itemCollapsed = igniteuiReactCore.delegateCombine(this.i.itemCollapsed, this._itemCollapsed_wrapped);
                if (this.i.itemCollapsedChanged) {
                    this.i.itemCollapsedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTree.prototype, "activeItem", {
            get: function () {
                return this._activeItem;
            },
            set: function (ev) {
                var _this = this;
                if (this._activeItem_wrapped !== null) {
                    this.i.activeItem = igniteuiReactCore.delegateRemove(this.i.activeItem, this._activeItem_wrapped);
                    this._activeItem_wrapped = null;
                    this._activeItem = null;
                }
                this._activeItem = ev;
                this._activeItem_wrapped = function (o, e) {
                    var outerArgs = new IgrTreeItemComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeActiveItem) {
                        _this.beforeActiveItem(_this, outerArgs);
                    }
                    if (_this._activeItem) {
                        _this._activeItem(_this, outerArgs);
                    }
                };
                this.i.activeItem = igniteuiReactCore.delegateCombine(this.i.activeItem, this._activeItem_wrapped);
                if (this.i.activeItemChanged) {
                    this.i.activeItemChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTree;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTreeModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeModule() {
        }
        IgrTreeModule.register = function () {
            IgrTreeItemModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTreeSelectionChangeEventArgs', IgrTreeSelectionChangeEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTreeItemComponentEventArgs', IgrTreeItemComponentEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTree', IgrTree);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTree', IgrTree);
        };
        return IgrTreeModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Tab = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Tab, _super);
        function Tab() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(Tab.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tab.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.a.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        Tab.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Tab.prototype, "g", {
            get: function () {
                var ret_ = this.b.n("panel");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("panel", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tab.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("selected");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("selected", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tab.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Tab.prototype.i = function () {
            this.nativeElement.connectedCallback();
        };
        Tab.prototype.j = function (a) {
            this.nativeElement.focus(this.b.i(a));
        };
        Tab.prototype.h = function () {
            this.nativeElement.blur();
        };
        Tab.$t = igniteuiReactCore.markType(Tab, 'Tab', BaseElement.$);
        return Tab;
    }(BaseElement));

    /**
     * Represents the tab header.
    */
    var IgrTab = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTab, _super);
        function IgrTab(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcTabComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrTab.prototype.createImplementation = function () {
            return new Tab();
        };
        Object.defineProperty(IgrTab.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTab.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrTab._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrTab.prototype.onImplementationCreated = function () {
        };
        IgrTab.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrTab.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrTab.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-tab", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrTab.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrTab.prototype, "panel", {
            /**
             * The id of the tab panel which will be controlled by the tab.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTab.prototype, "selected", {
            /**
             * Determines whether the tab is selected.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTab.prototype, "disabled", {
            /**
             * Determines whether the tab is disabled.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrTab.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrTab.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrTab.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrTab.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Tab");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrTab.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrTab.prototype.connectedCallback = function () {
            this.i.i();
        };
        /**
         * Sets focus to the tab.
        
        */
        IgrTab.prototype.focus = function (options) {
            this.i.j((options == null ? null : options.i));
        };
        /**
         * Removes focus from the tab.
        
        */
        IgrTab.prototype.blur = function () {
            this.i.h();
        };
        return IgrTab;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTabModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabModule() {
        }
        IgrTabModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTab', IgrTab);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTab', IgrTab);
        };
        return IgrTabModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TabPanel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TabPanel, _super);
        function TabPanel() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(TabPanel.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabPanel.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        TabPanel.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        TabPanel.prototype.e = function () {
            this.nativeElement.connectedCallback();
        };
        TabPanel.$t = igniteuiReactCore.markType(TabPanel, 'TabPanel', BaseElement.$);
        return TabPanel;
    }(BaseElement));

    /**
     * Represents the content of a tab
    */
    var IgrTabPanel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTabPanel, _super);
        function IgrTabPanel(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcTabPanelComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrTabPanel.prototype.createImplementation = function () {
            return new TabPanel();
        };
        Object.defineProperty(IgrTabPanel.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabPanel.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrTabPanel._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrTabPanel.prototype.onImplementationCreated = function () {
        };
        IgrTabPanel.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrTabPanel.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrTabPanel.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-tab-panel", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrTabPanel.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrTabPanel.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrTabPanel.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabPanel.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrTabPanel.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("TabPanel");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrTabPanel.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrTabPanel.prototype.connectedCallback = function () {
            this.i.e();
        };
        return IgrTabPanel;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTabPanelModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabPanelModule() {
        }
        IgrTabPanelModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTabPanel', IgrTabPanel);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTabPanel', IgrTabPanel);
        };
        return IgrTabPanelModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TabComponentEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TabComponentEventArgs, _super);
        function TabComponentEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        TabComponentEventArgs.b = function (a) {
            return ((function () {
                var $ret = new TabComponentEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        TabComponentEventArgs.$t = igniteuiReactCore.markType(TabComponentEventArgs, 'TabComponentEventArgs');
        return TabComponentEventArgs;
    }(igniteuiReactCore.Base));

    var IgrTabComponentEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabComponentEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTabComponentEventArgs.prototype.createImplementation = function () {
            return new TabComponentEventArgs();
        };
        Object.defineProperty(IgrTabComponentEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabComponentEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabComponentEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTabComponentEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTabComponentEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrTab({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTabComponentEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TabsAlignment = /*@__PURE__*/ (function (TabsAlignment) {
        TabsAlignment[TabsAlignment["Start"] = 0] = "Start";
        TabsAlignment[TabsAlignment["End"] = 1] = "End";
        TabsAlignment[TabsAlignment["Center"] = 2] = "Center";
        TabsAlignment[TabsAlignment["Justify"] = 3] = "Justify";
        return TabsAlignment;
    })({});
    /**
     * @hidden
     */
    var TabsAlignment_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TabsAlignment', 'Start,0|End,1|Center,2|Justify,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var TabsActivation = /*@__PURE__*/ (function (TabsActivation) {
        TabsActivation[TabsActivation["Manual"] = 0] = "Manual";
        TabsActivation[TabsActivation["Auto"] = 1] = "Auto";
        return TabsActivation;
    })({});
    /**
     * @hidden
     */
    var TabsActivation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TabsActivation', 'Manual,0|Auto,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Tabs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Tabs, _super);
        function Tabs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.f = null;
            _this.change = null;
            return _this;
        }
        Object.defineProperty(Tabs.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tabs.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.d.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        Tabs.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Tabs.prototype, "h", {
            get: function () {
                var ret_ = this.e.n("selected");
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tabs.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("alignment");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TabsAlignment_$type, igniteuiReactCore.EnumUtil.getEnumValue(TabsAlignment_$type, this.e.f(TabsAlignment_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TabsAlignment_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TabsAlignment_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("alignment", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Tabs.prototype, "b", {
            get: function () {
                var ret_ = this.e.n("activation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(TabsActivation_$type, igniteuiReactCore.EnumUtil.getEnumValue(TabsActivation_$type, this.e.f(TabsActivation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(TabsActivation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(TabsActivation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("activation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Tabs.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.e.s("change", function (a) { return _this.change(_this, TabComponentEventArgs.b(a)); });
            }
            else {
                this.e.v("change");
            }
        };
        Tabs.prototype.j = function () {
            this.nativeElement.disconnectedCallback();
        };
        Tabs.prototype.k = function (a) {
            this.nativeElement.select(this.e.i(a));
        };
        Tabs.$t = igniteuiReactCore.markType(Tabs, 'Tabs', BaseElement.$);
        return Tabs;
    }(BaseElement));

    /**
     * Represents tabs component
    */
    var IgrTabs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTabs, _super);
        function IgrTabs(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._change = null;
            _this._change_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcTabsComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrTabs.prototype.createImplementation = function () {
            return new Tabs();
        };
        Object.defineProperty(IgrTabs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrTabs._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrTabs.prototype.onImplementationCreated = function () {
        };
        IgrTabs.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrTabs.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrTabs.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-tabs", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrTabs.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrTabs.prototype, "selected", {
            /**
             * Returns the currently selected tab.
            */
            get: function () {
                return this.i.h;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabs.prototype, "alignment", {
            /**
             * Sets the alignment for the tab headers
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(TabsAlignment_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabs.prototype, "activation", {
            /**
             * Determines the tab activation. When set to auto,
             * the tab is instantly selected while navigating with the Left/Right Arrows, Home or End keys
             * and the corresponding panel is displayed.
             * When set to manual, the tab is only focused. The selection happens after pressing Space or Enter.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(TabsActivation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrTabs.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrTabs.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabs.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrTabs.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Tabs");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrTabs.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrTabs.prototype.disconnectedCallback = function () {
            this.i.j();
        };
        /**
         * Selects the specified tab and displays the corresponding panel.
        
        */
        IgrTabs.prototype.select = function (name) {
            this.i.k(name);
        };
        Object.defineProperty(IgrTabs.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrTabComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTabs;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTabsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabsModule() {
        }
        IgrTabsModule.register = function () {
            IgrTabModule.register();
            IgrTabPanelModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTabComponentEventArgs', IgrTabComponentEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTabs', IgrTabs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrTabs', IgrTabs);
        };
        return IgrTabsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Accordion = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Accordion, _super);
        function Accordion() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(Accordion.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Accordion.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.a.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        Accordion.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Accordion.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("singleExpand");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("singleExpand", value_);
            },
            enumerable: false,
            configurable: true
        });
        Accordion.prototype.f = function () {
            this.nativeElement.hideAll();
        };
        Accordion.prototype.h = function () {
            this.nativeElement.showAll();
        };
        Accordion.$t = igniteuiReactCore.markType(Accordion, 'Accordion', BaseElement.$);
        return Accordion;
    }(BaseElement));

    /**
     * The Accordion is a container-based component that can house multiple expansion panels
     * and offers keyboard navigation.
    */
    var IgrAccordion = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrAccordion, _super);
        function IgrAccordion(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcAccordionComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrAccordion.prototype.createImplementation = function () {
            return new Accordion();
        };
        Object.defineProperty(IgrAccordion.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrAccordion.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrAccordion._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrAccordion.prototype.onImplementationCreated = function () {
        };
        IgrAccordion.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrAccordion.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrAccordion.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-accordion", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrAccordion.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrAccordion.prototype, "singleExpand", {
            /**
             * Allows only one panel to be expanded at a time.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrAccordion.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrAccordion.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrAccordion.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrAccordion.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Accordion");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrAccordion.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        /**
         * Hides all of the child expansion panels' contents.
        
        */
        IgrAccordion.prototype.hideAll = function () {
            this.i.f();
        };
        /**
         * Shows all of the child expansion panels' contents.
        
        */
        IgrAccordion.prototype.showAll = function () {
            this.i.h();
        };
        return IgrAccordion;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrAccordionModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrAccordionModule() {
        }
        IgrAccordionModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrAccordion', IgrAccordion);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrAccordion', IgrAccordion);
        };
        return IgrAccordionModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ComboChangeType = /*@__PURE__*/ (function (ComboChangeType) {
        ComboChangeType[ComboChangeType["Selection"] = 0] = "Selection";
        ComboChangeType[ComboChangeType["Deselection"] = 1] = "Deselection";
        ComboChangeType[ComboChangeType["Addition"] = 2] = "Addition";
        return ComboChangeType;
    })({});
    /**
     * @hidden
     */
    var ComboChangeType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ComboChangeType', 'Selection,0|Deselection,1|Addition,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ComboChangeEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ComboChangeEventArgsDetail, _super);
        function ComboChangeEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(ComboChangeEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.e.n("newValue");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("newValue", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ComboChangeEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.e.n("items");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("items", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ComboChangeEventArgsDetail.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ComboChangeType_$type, igniteuiReactCore.EnumUtil.getEnumValue(ComboChangeType_$type, this.e.f(ComboChangeType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ComboChangeType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ComboChangeType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ComboChangeEventArgsDetail.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ComboChangeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.d.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        ComboChangeEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        ComboChangeEventArgsDetail.$t = igniteuiReactCore.markType(ComboChangeEventArgsDetail, 'ComboChangeEventArgsDetail');
        return ComboChangeEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrComboChangeEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrComboChangeEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrComboChangeEventArgsDetail.prototype.createImplementation = function () {
            return new ComboChangeEventArgsDetail();
        };
        Object.defineProperty(IgrComboChangeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComboChangeEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrComboChangeEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrComboChangeEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrComboChangeEventArgsDetail.prototype, "newValue", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.b = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComboChangeEventArgsDetail.prototype, "items", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.a = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComboChangeEventArgsDetail.prototype, "type", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(ComboChangeType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrComboChangeEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        IgrComboChangeEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrComboChangeEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ComboChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ComboChangeEventArgs, _super);
        function ComboChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        ComboChangeEventArgs.a = function (a) {
            return ((function () {
                var $ret = new ComboChangeEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        ComboChangeEventArgs.$t = igniteuiReactCore.markType(ComboChangeEventArgs, 'ComboChangeEventArgs');
        return ComboChangeEventArgs;
    }(igniteuiReactCore.Base));

    var IgrComboChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrComboChangeEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrComboChangeEventArgs.prototype.createImplementation = function () {
            return new ComboChangeEventArgs();
        };
        Object.defineProperty(IgrComboChangeEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrComboChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrComboChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrComboChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrComboChangeEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrComboChangeEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrComboChangeEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var GroupingDirection = /*@__PURE__*/ (function (GroupingDirection) {
        GroupingDirection[GroupingDirection["Asc"] = 0] = "Asc";
        GroupingDirection[GroupingDirection["Desc"] = 1] = "Desc";
        GroupingDirection[GroupingDirection["None"] = 2] = "None";
        return GroupingDirection;
    })({});
    /**
     * @hidden
     */
    var GroupingDirection_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GroupingDirection', 'Asc,0|Desc,1|None,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FilteringOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FilteringOptions, _super);
        function FilteringOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FilteringOptions.$t = igniteuiReactCore.markType(FilteringOptions, 'FilteringOptions');
        return FilteringOptions;
    }(igniteuiReactCore.Base));

    var IgrFilteringOptions = /** @class */ /*@__PURE__*/ (function () {
        function IgrFilteringOptions() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrFilteringOptions.prototype.createImplementation = function () {
            return new FilteringOptions();
        };
        Object.defineProperty(IgrFilteringOptions.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFilteringOptions.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrFilteringOptions.prototype.onImplementationCreated = function () {
        };
        IgrFilteringOptions.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        IgrFilteringOptions.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrFilteringOptions;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Combo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Combo, _super);
        function Combo() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.m = new WCNativeHelper();
            _this.ab = null;
            _this.change = null;
            _this.focus = null;
            _this.blur = null;
            _this.opening = null;
            _this.opened = null;
            _this.closing = null;
            _this.closed = null;
            _this.ae = null;
            _this.ad = null;
            return _this;
        }
        Object.defineProperty(Combo.prototype, "n", {
            get: function () {
                return this.m;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "nativeElement", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                this.ab = a;
                this.m.o = this.ab;
            },
            enumerable: false,
            configurable: true
        });
        Combo.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Combo.prototype, "a", {
            get: function () {
                var ret_ = this.n.n("data");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("data", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "w", {
            get: function () {
                var ret_ = this.n.n("outlined");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("outlined", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "z", {
            get: function () {
                var ret_ = this.n.n("singleSelect");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("singleSelect", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "o", {
            get: function () {
                var ret_ = this.n.n("autofocus");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("autofocus", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "p", {
            get: function () {
                var ret_ = this.n.n("autofocusList");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("autofocusList", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "ah", {
            get: function () {
                var ret_ = this.n.n("label");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("label", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "aj", {
            get: function () {
                var ret_ = this.n.n("placeholder");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("placeholder", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "ak", {
            get: function () {
                var ret_ = this.n.n("placeholderSearch");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("placeholderSearch", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "v", {
            get: function () {
                var ret_ = this.n.n("open");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("open", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "al", {
            get: function () {
                var ret_ = this.n.n("valueKey");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("valueKey", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "af", {
            get: function () {
                var ret_ = this.n.n("displayKey");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("displayKey", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "ag", {
            get: function () {
                var ret_ = this.n.n("groupKey");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("groupKey", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "f", {
            get: function () {
                var ret_ = this.n.n("groupSorting");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(GroupingDirection_$type, igniteuiReactCore.EnumUtil.getEnumValue(GroupingDirection_$type, this.n.f(GroupingDirection_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(GroupingDirection_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(GroupingDirection_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.n.w("groupSorting", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "e", {
            get: function () {
                var ret_ = this.n.m("filteringOptions", function (a) { return new FilteringOptions(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("filteringOptions", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "q", {
            get: function () {
                var ret_ = this.n.n("caseSensitiveIcon");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("caseSensitiveIcon", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "s", {
            get: function () {
                var ret_ = this.n.n("disableFiltering");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("disableFiltering", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "c", {
            get: function () {
                var ret_ = this.n.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "b", {
            get: function () {
                var ret_ = this.n.n("selection");
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "r", {
            get: function () {
                var ret_ = this.n.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "x", {
            get: function () {
                var ret_ = this.n.n("required");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("required", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "ai", {
            get: function () {
                var ret_ = this.n.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Combo.prototype, "u", {
            get: function () {
                var ret_ = this.n.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.n.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        Combo.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.n.s("change", function (a) { return _this.change(_this, ComboChangeEventArgs.a(a)); });
            }
            else {
                this.n.v("change");
            }
        };
        Combo.prototype.focusChanged = function () {
            var _this = this;
            if (this.focus != null) {
                this.n.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.n.v("focus");
            }
        };
        Combo.prototype.blurChanged = function () {
            var _this = this;
            if (this.blur != null) {
                this.n.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.n.v("blur");
            }
        };
        Combo.prototype.openingChanged = function () {
            var _this = this;
            if (this.opening != null) {
                this.n.s("opening", function (a) { return _this.opening(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.n.v("opening");
            }
        };
        Combo.prototype.openedChanged = function () {
            var _this = this;
            if (this.opened != null) {
                this.n.s("opened", function (a) { return _this.opened(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.n.v("opened");
            }
        };
        Combo.prototype.closingChanged = function () {
            var _this = this;
            if (this.closing != null) {
                this.n.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.n.v("closing");
            }
        };
        Combo.prototype.closedChanged = function () {
            var _this = this;
            if (this.closed != null) {
                this.n.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.n.v("closed");
            }
        };
        Combo.prototype.as = function () {
            this.nativeElement.connectedCallback();
        };
        Combo.prototype.av = function (a) {
            this.nativeElement.focus(this.n.i(a));
        };
        Combo.prototype.an = function () {
            this.nativeElement.blur();
        };
        Combo.prototype.az = function (a) {
            this.nativeElement.select(this.n.i(a));
        };
        Combo.prototype.at = function (a) {
            this.nativeElement.deselect(this.n.i(a));
        };
        Combo.prototype.y = function () {
            return (this.nativeElement.show());
        };
        Combo.prototype.t = function () {
            return (this.nativeElement.hide());
        };
        Combo.prototype.aa = function () {
            return (this.nativeElement.toggle());
        };
        Combo.prototype.ay = function () {
            this.nativeElement.reportValidity();
        };
        Combo.prototype.ap = function () {
            this.nativeElement.checkValidity();
        };
        Combo.prototype.a0 = function (a) {
            this.nativeElement.setCustomValidity(this.n.i(a));
        };
        Combo.$t = igniteuiReactCore.markType(Combo, 'Combo', BaseElement.$);
        return Combo;
    }(BaseElement));

    /**
     * The Combo component is similar to the Select component in that it provides a list of options from which the user can make a selection.
     * In contrast to the Select component, the Combo component displays all options in a virtualized list of items,
     * meaning the combo box can simultaneously show thousands of options, where one or more options can be selected.
     * Additionally, users can create custom item templates, allowing for robust data visualization.
     * The Combo component features case-sensitive filtering, grouping, complex data binding, dynamic addition of values and more.
    */
    var IgrCombo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrCombo, _super);
        function IgrCombo(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._change = null;
            _this._change_wrapped = null;
            _this._focus = null;
            _this._focus_wrapped = null;
            _this._blur = null;
            _this._blur_wrapped = null;
            _this._opening = null;
            _this._opening_wrapped = null;
            _this._opened = null;
            _this._opened_wrapped = null;
            _this._closing = null;
            _this._closing_wrapped = null;
            _this._closed = null;
            _this._closed_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcComboComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrCombo.prototype.createImplementation = function () {
            return new Combo();
        };
        Object.defineProperty(IgrCombo.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrCombo._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrCombo.prototype.onImplementationCreated = function () {
        };
        IgrCombo.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrCombo.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrCombo.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-combo", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrCombo.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrCombo.prototype, "data", {
            /**
             * The data source used to generate the list of options.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.a = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "outlined", {
            /**
             * The outlined attribute of the control.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "singleSelect", {
            /**
             * Enables single selection mode and moves item filtering to the main input.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "autofocus", {
            /**
             * The autofocus attribute of the control.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "autofocusList", {
            /**
             * Focuses the list of options when the menu opens.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "label", {
            /**
             * The label attribute of the control.
            */
            get: function () {
                return this.i.ah;
            },
            set: function (v) {
                this.i.ah = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "placeholder", {
            /**
             * The placeholder attribute of the control.
            */
            get: function () {
                return this.i.aj;
            },
            set: function (v) {
                this.i.aj = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "placeholderSearch", {
            /**
             * The placeholder attribute of the search input.
            */
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "open", {
            /**
             * Sets the open state of the component.
            */
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "valueKey", {
            /**
             * The key in the data source used when selecting items.
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "displayKey", {
            /**
             * The key in the data source used to display items in the list.
            */
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "groupKey", {
            /**
             * The key in the data source used to group items in the list.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "groupSorting", {
            /**
             * Sorts the items in each group by ascending or descending order.
             * @type {"asc" | "desc" | "none"}
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(GroupingDirection_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "filteringOptions", {
            get: function () {
                var r = this.i.e;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrFilteringOptions();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.e = null : this.i.e = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "caseSensitiveIcon", {
            /**
             * Enables the case sensitive search icon in the filtering input.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "disableFiltering", {
            /**
             * Disables the filtering of the list of options.
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "value", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                if (v && !Array.isArray(v) && typeof (v) == "string") {
                    var re = /\s*(?:,|\s|$)\s*/gm;
                    v = v.split(re);
                }
                this.i.c = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "selection", {
            /**
             * Returns the current selection as an array of objects as provided in the `data` source.
            */
            get: function () {
                return this.i.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "required", {
            /**
             * Makes the control a required field in a form context.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "itemTemplate", {
            get: function () {
                return this._itemTemplate;
            },
            set: function (v) {
                this._itemTemplate = v;
                if (!this._itemTemplateAdapter) {
                    this._itemTemplateAdapter = new igniteuiReactCore.ReactTemplateAdapter(this._renderer, this._portalManager, "ae", { html: litHtml.html });
                }
                this._itemTemplateAdapter.setValue(this.i, this._itemTemplate);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "groupHeaderTemplate", {
            get: function () {
                return this._groupHeaderTemplate;
            },
            set: function (v) {
                this._groupHeaderTemplate = v;
                if (!this._groupHeaderTemplateAdapter) {
                    this._groupHeaderTemplateAdapter = new igniteuiReactCore.ReactTemplateAdapter(this._renderer, this._portalManager, "ad", { html: litHtml.html });
                }
                this._groupHeaderTemplateAdapter.setValue(this.i, this._groupHeaderTemplate);
            },
            enumerable: false,
            configurable: true
        });
        IgrCombo.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.filteringOptions && this.filteringOptions.name && this.filteringOptions.name == name) {
                return this.filteringOptions;
            }
            return null;
        };
        Object.defineProperty(IgrCombo.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrCombo.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCombo.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Combo");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCombo.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrCombo.prototype.connectedCallback = function () {
            this.i.as();
        };
        /**
         * Sets focus on the component.
        
        */
        IgrCombo.prototype.focusComponent = function (options) {
            this.i.av((options == null ? null : options.i));
        };
        /**
         * Removes focus from the component.
        
        */
        IgrCombo.prototype.blurComponent = function () {
            this.i.an();
        };
        IgrCombo.prototype.select = function (items) {
            this.i.az(items);
        };
        IgrCombo.prototype.deselect = function (items) {
            this.i.at(items);
        };
        /**
         * Shows the list of options.
        
        */
        IgrCombo.prototype.show = function () {
            var iv = this.i.y();
            return (iv);
        };
        /**
         * Hides the list of options.
        
        */
        IgrCombo.prototype.hide = function () {
            var iv = this.i.t();
            return (iv);
        };
        /**
         * Toggles the list of options.
        
        */
        IgrCombo.prototype.toggle = function () {
            var iv = this.i.aa();
            return (iv);
        };
        /**
         * Checks for validity of the control and shows the browser message if it invalid.
        
        */
        IgrCombo.prototype.reportValidity = function () {
            this.i.ay();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrCombo.prototype.checkValidity = function () {
            this.i.ap();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrCombo.prototype.setCustomValidity = function (message) {
            this.i.a0(message);
        };
        Object.defineProperty(IgrCombo.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrComboChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "focus", {
            get: function () {
                return this._focus;
            },
            set: function (ev) {
                var _this = this;
                if (this._focus_wrapped !== null) {
                    this.i.focus = igniteuiReactCore.delegateRemove(this.i.focus, this._focus_wrapped);
                    this._focus_wrapped = null;
                    this._focus = null;
                }
                this._focus = ev;
                this._focus_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFocus) {
                        _this.beforeFocus(_this, outerArgs);
                    }
                    if (_this._focus) {
                        _this._focus(_this, outerArgs);
                    }
                };
                this.i.focus = igniteuiReactCore.delegateCombine(this.i.focus, this._focus_wrapped);
                if (this.i.focusChanged) {
                    this.i.focusChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            set: function (ev) {
                var _this = this;
                if (this._blur_wrapped !== null) {
                    this.i.blur = igniteuiReactCore.delegateRemove(this.i.blur, this._blur_wrapped);
                    this._blur_wrapped = null;
                    this._blur = null;
                }
                this._blur = ev;
                this._blur_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeBlur) {
                        _this.beforeBlur(_this, outerArgs);
                    }
                    if (_this._blur) {
                        _this._blur(_this, outerArgs);
                    }
                };
                this.i.blur = igniteuiReactCore.delegateCombine(this.i.blur, this._blur_wrapped);
                if (this.i.blurChanged) {
                    this.i.blurChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "opening", {
            get: function () {
                return this._opening;
            },
            set: function (ev) {
                var _this = this;
                if (this._opening_wrapped !== null) {
                    this.i.opening = igniteuiReactCore.delegateRemove(this.i.opening, this._opening_wrapped);
                    this._opening_wrapped = null;
                    this._opening = null;
                }
                this._opening = ev;
                this._opening_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpening) {
                        _this.beforeOpening(_this, outerArgs);
                    }
                    if (_this._opening) {
                        _this._opening(_this, outerArgs);
                    }
                };
                this.i.opening = igniteuiReactCore.delegateCombine(this.i.opening, this._opening_wrapped);
                if (this.i.openingChanged) {
                    this.i.openingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "opened", {
            get: function () {
                return this._opened;
            },
            set: function (ev) {
                var _this = this;
                if (this._opened_wrapped !== null) {
                    this.i.opened = igniteuiReactCore.delegateRemove(this.i.opened, this._opened_wrapped);
                    this._opened_wrapped = null;
                    this._opened = null;
                }
                this._opened = ev;
                this._opened_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpened) {
                        _this.beforeOpened(_this, outerArgs);
                    }
                    if (_this._opened) {
                        _this._opened(_this, outerArgs);
                    }
                };
                this.i.opened = igniteuiReactCore.delegateCombine(this.i.opened, this._opened_wrapped);
                if (this.i.openedChanged) {
                    this.i.openedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "closing", {
            get: function () {
                return this._closing;
            },
            set: function (ev) {
                var _this = this;
                if (this._closing_wrapped !== null) {
                    this.i.closing = igniteuiReactCore.delegateRemove(this.i.closing, this._closing_wrapped);
                    this._closing_wrapped = null;
                    this._closing = null;
                }
                this._closing = ev;
                this._closing_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosing) {
                        _this.beforeClosing(_this, outerArgs);
                    }
                    if (_this._closing) {
                        _this._closing(_this, outerArgs);
                    }
                };
                this.i.closing = igniteuiReactCore.delegateCombine(this.i.closing, this._closing_wrapped);
                if (this.i.closingChanged) {
                    this.i.closingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCombo.prototype, "closed", {
            get: function () {
                return this._closed;
            },
            set: function (ev) {
                var _this = this;
                if (this._closed_wrapped !== null) {
                    this.i.closed = igniteuiReactCore.delegateRemove(this.i.closed, this._closed_wrapped);
                    this._closed_wrapped = null;
                    this._closed = null;
                }
                this._closed = ev;
                this._closed_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosed) {
                        _this.beforeClosed(_this, outerArgs);
                    }
                    if (_this._closed) {
                        _this._closed(_this, outerArgs);
                    }
                };
                this.i.closed = igniteuiReactCore.delegateCombine(this.i.closed, this._closed_wrapped);
                if (this.i.closedChanged) {
                    this.i.closedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrCombo;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrComboModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrComboModule() {
        }
        IgrComboModule.register = function () {
            IgrIconModule.register();
            IgrInputModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrComboChangeEventArgs', IgrComboChangeEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCombo', IgrCombo);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCombo', IgrCombo);
        };
        return IgrComboModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SelectItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SelectItem, _super);
        function SelectItem() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SelectItem.$t = igniteuiReactCore.markType(SelectItem, 'SelectItem', BaseOptionLike.$);
        return SelectItem;
    }(BaseOptionLike));

    /**
     * Represents an item in a select list.
    */
    var IgrSelectItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSelectItem, _super);
        function IgrSelectItem(props) {
            var _this = _super.call(this, props) || this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSelectItemComponent);
            return _this;
        }
        IgrSelectItem.prototype.createImplementation = function () {
            return new SelectItem();
        };
        Object.defineProperty(IgrSelectItem.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSelectItem.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrSelectItem.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-select-item", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSelectItem.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        return IgrSelectItem;
    }(IgrBaseOptionLike));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSelectItemModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSelectItemModule() {
        }
        IgrSelectItemModule.register = function () {
            IgrBaseOptionLikeModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelectItem', IgrSelectItem);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelectItem', IgrSelectItem);
        };
        return IgrSelectItemModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SelectGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SelectGroup, _super);
        function SelectGroup() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(SelectGroup.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectGroup.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.b.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        SelectGroup.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(SelectGroup.prototype, "a", {
            get: function () {
                var ret_ = this.c.m("items", function (a) { return new SelectItem(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("items", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectGroup.prototype, "d", {
            get: function () {
                var ret_ = this.c.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        SelectGroup.$t = igniteuiReactCore.markType(SelectGroup, 'SelectGroup', BaseElement.$);
        return SelectGroup;
    }(BaseElement));

    /**

    */
    var IgrSelectGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSelectGroup, _super);
        function IgrSelectGroup(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSelectGroupComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrSelectGroup.prototype.createImplementation = function () {
            return new SelectGroup();
        };
        Object.defineProperty(IgrSelectGroup.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelectGroup.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrSelectGroup._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrSelectGroup.prototype.onImplementationCreated = function () {
        };
        IgrSelectGroup.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrSelectGroup.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrSelectGroup.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-select-group", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSelectGroup.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrSelectGroup.prototype, "items", {
            /**
             * All child `igc-select-item`s.
            */
            get: function () {
                if (!this.i.a) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.a.length; i++) {
                    var impl = this.i.a[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrSelectItem) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrSelectItem._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            set: function (v) {
                var arr = [];
                for (var i = 0; i < v.length; i++) {
                    arr.push(v[i].i);
                }
                this.i.a = arr;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelectGroup.prototype, "disabled", {
            /**
             * Whether the group item and all its children are disabled.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrSelectGroup.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrSelectGroup.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrSelectGroup.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrSelectGroup.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("SelectGroup");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrSelectGroup.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrSelectGroup;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSelectGroupModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSelectGroupModule() {
        }
        IgrSelectGroupModule.register = function () {
            IgrSelectItemModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelectGroup', IgrSelectGroup);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelectGroup', IgrSelectGroup);
        };
        return IgrSelectGroupModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SelectHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SelectHeader, _super);
        function SelectHeader() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.c = null;
            return _this;
        }
        Object.defineProperty(SelectHeader.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectHeader.prototype, "nativeElement", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.a.o = this.c;
            },
            enumerable: false,
            configurable: true
        });
        SelectHeader.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        SelectHeader.$t = igniteuiReactCore.markType(SelectHeader, 'SelectHeader', BaseElement.$);
        return SelectHeader;
    }(BaseElement));

    /**
     * Represents a header item in an igc-select component.
    */
    var IgrSelectHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSelectHeader, _super);
        function IgrSelectHeader(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSelectHeaderComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrSelectHeader.prototype.createImplementation = function () {
            return new SelectHeader();
        };
        Object.defineProperty(IgrSelectHeader.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelectHeader.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrSelectHeader._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrSelectHeader.prototype.onImplementationCreated = function () {
        };
        IgrSelectHeader.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrSelectHeader.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrSelectHeader.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-select-header", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSelectHeader.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrSelectHeader.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrSelectHeader.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrSelectHeader.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrSelectHeader.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("SelectHeader");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrSelectHeader.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrSelectHeader;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSelectHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSelectHeaderModule() {
        }
        IgrSelectHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelectHeader', IgrSelectHeader);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelectHeader', IgrSelectHeader);
        };
        return IgrSelectHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SelectItemComponentEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SelectItemComponentEventArgs, _super);
        function SelectItemComponentEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        SelectItemComponentEventArgs.b = function (a) {
            return ((function () {
                var $ret = new SelectItemComponentEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        SelectItemComponentEventArgs.$t = igniteuiReactCore.markType(SelectItemComponentEventArgs, 'SelectItemComponentEventArgs');
        return SelectItemComponentEventArgs;
    }(igniteuiReactCore.Base));

    var IgrSelectItemComponentEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrSelectItemComponentEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrSelectItemComponentEventArgs.prototype.createImplementation = function () {
            return new SelectItemComponentEventArgs();
        };
        Object.defineProperty(IgrSelectItemComponentEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelectItemComponentEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSelectItemComponentEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrSelectItemComponentEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrSelectItemComponentEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrSelectItem({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrSelectItemComponentEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var SelectScrollStrategy = /*@__PURE__*/ (function (SelectScrollStrategy) {
        SelectScrollStrategy[SelectScrollStrategy["Scroll"] = 0] = "Scroll";
        SelectScrollStrategy[SelectScrollStrategy["Block"] = 1] = "Block";
        SelectScrollStrategy[SelectScrollStrategy["Close"] = 2] = "Close";
        return SelectScrollStrategy;
    })({});
    /**
     * @hidden
     */
    var SelectScrollStrategy_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SelectScrollStrategy', 'Scroll,0|Block,1|Close,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Select = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Select, _super);
        function Select() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.change = null;
            _this.focus = null;
            _this.blur = null;
            _this.opening = null;
            _this.opened = null;
            _this.closing = null;
            _this.closed = null;
            return _this;
        }
        Object.defineProperty(Select.prototype, "ah", {
            get: function () {
                var ret_ = this.b.n("value");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("value", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "ab", {
            get: function () {
                var ret_ = this.b.n("outlined");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("outlined", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "y", {
            get: function () {
                var ret_ = this.b.n("autofocus");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("autofocus", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "ad", {
            get: function () {
                var ret_ = this.b.n("distance");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("distance", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "ae", {
            get: function () {
                var ret_ = this.b.n("label");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("label", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "ag", {
            get: function () {
                var ret_ = this.b.n("placeholder");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("placeholder", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "o", {
            get: function () {
                var ret_ = this.b.n("placement");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DropdownPlacement_$type, igniteuiReactCore.EnumUtil.getEnumValue(DropdownPlacement_$type, this.b.f(DropdownPlacement_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DropdownPlacement_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DropdownPlacement_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("placement", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "r", {
            get: function () {
                var ret_ = this.b.n("scrollStrategy");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(SelectScrollStrategy_$type, igniteuiReactCore.EnumUtil.getEnumValue(SelectScrollStrategy_$type, this.b.f(SelectScrollStrategy_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(SelectScrollStrategy_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(SelectScrollStrategy_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.b.w("scrollStrategy", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "n", {
            get: function () {
                var ret_ = this.b.m("items", function (a) { return new SelectItem(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "m", {
            get: function () {
                var ret_ = this.b.m("groups", function (a) { return new SelectGroup(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "p", {
            get: function () {
                var ret_ = this.b.m("selectedItem", function (a) { return new SelectItem(); });
                return ret_;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "z", {
            get: function () {
                var ret_ = this.b.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "ac", {
            get: function () {
                var ret_ = this.b.n("required");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("required", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "af", {
            get: function () {
                var ret_ = this.b.n("name");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("name", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select.prototype, "aa", {
            get: function () {
                var ret_ = this.b.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        Select.prototype.changeChanged = function () {
            var _this = this;
            if (this.change != null) {
                this.b.s("change", function (a) { return _this.change(_this, SelectItemComponentEventArgs.b(a)); });
            }
            else {
                this.b.v("change");
            }
        };
        Select.prototype.focusChanged = function () {
            var _this = this;
            if (this.focus != null) {
                this.b.s("focus", function (a) { return _this.focus(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.b.v("focus");
            }
        };
        Select.prototype.blurChanged = function () {
            var _this = this;
            if (this.blur != null) {
                this.b.s("blur", function (a) { return _this.blur(_this, VoidEventArgs.b(a)); }, false);
            }
            else {
                this.b.v("blur");
            }
        };
        Select.prototype.openingChanged = function () {
            var _this = this;
            if (this.opening != null) {
                this.b.s("opening", function (a) { return _this.opening(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("opening");
            }
        };
        Select.prototype.openedChanged = function () {
            var _this = this;
            if (this.opened != null) {
                this.b.s("opened", function (a) { return _this.opened(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("opened");
            }
        };
        Select.prototype.closingChanged = function () {
            var _this = this;
            if (this.closing != null) {
                this.b.s("closing", function (a) { return _this.closing(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("closing");
            }
        };
        Select.prototype.closedChanged = function () {
            var _this = this;
            if (this.closed != null) {
                this.b.s("closed", function (a) { return _this.closed(_this, VoidEventArgs.b(a)); });
            }
            else {
                this.b.v("closed");
            }
        };
        Select.prototype.aq = function (a) {
            this.nativeElement.focus(this.b.i(a));
        };
        Select.prototype.aj = function () {
            this.nativeElement.blur();
        };
        Select.prototype.at = function () {
            this.nativeElement.reportValidity();
        };
        Select.prototype.am = function () {
            this.nativeElement.clearSelection();
        };
        Select.prototype.al = function () {
            this.nativeElement.checkValidity();
        };
        Select.prototype.au = function (a) {
            this.nativeElement.setCustomValidity(this.b.i(a));
        };
        Select.$t = igniteuiReactCore.markType(Select, 'Select', BaseComboBoxLike.$);
        return Select;
    }(BaseComboBoxLike));

    /**
     * Represents a control that provides a menu of options.
    */
    var IgrSelect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrSelect, _super);
        function IgrSelect(props) {
            var _this = _super.call(this, props) || this;
            _this._change = null;
            _this._change_wrapped = null;
            _this._focus = null;
            _this._focus_wrapped = null;
            _this._blur = null;
            _this._blur_wrapped = null;
            _this._opening = null;
            _this._opening_wrapped = null;
            _this._opened = null;
            _this._opened_wrapped = null;
            _this._closing = null;
            _this._closing_wrapped = null;
            _this._closed = null;
            _this._closed_wrapped = null;
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcSelectComponent);
            return _this;
        }
        IgrSelect.prototype.createImplementation = function () {
            return new Select();
        };
        Object.defineProperty(IgrSelect.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSelect.prototype.componentDidMount = function () {
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            _super.prototype.componentDidMount.call(this);
        };
        IgrSelect.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-select", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrSelect.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrSelect.prototype, "value", {
            get: function () {
                return this.i.ah;
            },
            set: function (v) {
                this.i.ah = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "outlined", {
            /**
             * The outlined attribute of the control.
            */
            get: function () {
                return this.i.ab;
            },
            set: function (v) {
                this.i.ab = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "autofocus", {
            /**
             * The autofocus attribute of the control.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "distance", {
            /**
             * The distance of the select dropdown from its input.
            */
            get: function () {
                return this.i.ad;
            },
            set: function (v) {
                this.i.ad = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "label", {
            /**
             * The label attribute of the control.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "placeholder", {
            /**
             * The placeholder attribute of the control.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "placement", {
            /**
             * The preferred placement of the select dropdown around its input.
             * @type {'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'right' | 'right-start' | 'right-end' | 'left' | 'left-start' | 'left-end'}
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureEnum(DropdownPlacement_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "scrollStrategy", {
            /**
             * Determines the behavior of the component during scrolling of the parent container.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = igniteuiReactCore.ensureEnum(SelectScrollStrategy_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "items", {
            /**
             * Returns the items of the igc-select component.
            */
            get: function () {
                if (!this.i.n) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.n.length; i++) {
                    var impl = this.i.n[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrSelectItem) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrSelectItem._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "groups", {
            /**
             * Returns the groups of the igc-select component.
            */
            get: function () {
                if (!this.i.m) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.m.length; i++) {
                    var impl = this.i.m[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrSelectGroup) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrSelectGroup._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "selectedItem", {
            /**
             * Returns the selected item from the dropdown or null.
            */
            get: function () {
                var r = this.i.p;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrSelectItem({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "disabled", {
            /**
             * The disabled state of the component
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "required", {
            /**
             * Makes the control a required field in a form context.
            */
            get: function () {
                return this.i.ac;
            },
            set: function (v) {
                this.i.ac = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "name", {
            /**
             * The name attribute of the control.
            */
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "invalid", {
            /**
             * Control the validity of the control.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrSelect.prototype._styling = function (container, component, parent) {
            _super.prototype._styling.call(this, container, component, parent);
            this._inStyling = true;
            if (this.selectedItem && this.selectedItem._styling) {
                this.selectedItem._styling(container, component, this);
            }
            this._inStyling = false;
        };
        /**
         * Sets focus on the component.
        
        */
        IgrSelect.prototype.focusComponent = function (options) {
            this.i.aq((options == null ? null : options.i));
        };
        /**
         * Removes focus from the component.
        
        */
        IgrSelect.prototype.blurComponent = function () {
            this.i.aj();
        };
        /**
         * Checks the validity of the control and moves the focus to it if it is not valid.
        
        */
        IgrSelect.prototype.reportValidity = function () {
            this.i.at();
        };
        /**
         * Resets the current value and selection of the component.
        
        */
        IgrSelect.prototype.clearSelection = function () {
            this.i.am();
        };
        /**
         * Checks for validity of the control and emits the invalid event if it invalid.
        
        */
        IgrSelect.prototype.checkValidity = function () {
            this.i.al();
        };
        /**
         * Sets a custom validation message for the control.
         * As long as `message` is not empty, the control is considered invalid.
        
        */
        IgrSelect.prototype.setCustomValidity = function (message) {
            this.i.au(message);
        };
        Object.defineProperty(IgrSelect.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrSelectItemComponentEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
                if (this.i.changeChanged) {
                    this.i.changeChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "focus", {
            get: function () {
                return this._focus;
            },
            set: function (ev) {
                var _this = this;
                if (this._focus_wrapped !== null) {
                    this.i.focus = igniteuiReactCore.delegateRemove(this.i.focus, this._focus_wrapped);
                    this._focus_wrapped = null;
                    this._focus = null;
                }
                this._focus = ev;
                this._focus_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFocus) {
                        _this.beforeFocus(_this, outerArgs);
                    }
                    if (_this._focus) {
                        _this._focus(_this, outerArgs);
                    }
                };
                this.i.focus = igniteuiReactCore.delegateCombine(this.i.focus, this._focus_wrapped);
                if (this.i.focusChanged) {
                    this.i.focusChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "blur", {
            get: function () {
                return this._blur;
            },
            set: function (ev) {
                var _this = this;
                if (this._blur_wrapped !== null) {
                    this.i.blur = igniteuiReactCore.delegateRemove(this.i.blur, this._blur_wrapped);
                    this._blur_wrapped = null;
                    this._blur = null;
                }
                this._blur = ev;
                this._blur_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeBlur) {
                        _this.beforeBlur(_this, outerArgs);
                    }
                    if (_this._blur) {
                        _this._blur(_this, outerArgs);
                    }
                };
                this.i.blur = igniteuiReactCore.delegateCombine(this.i.blur, this._blur_wrapped);
                if (this.i.blurChanged) {
                    this.i.blurChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "opening", {
            get: function () {
                return this._opening;
            },
            set: function (ev) {
                var _this = this;
                if (this._opening_wrapped !== null) {
                    this.i.opening = igniteuiReactCore.delegateRemove(this.i.opening, this._opening_wrapped);
                    this._opening_wrapped = null;
                    this._opening = null;
                }
                this._opening = ev;
                this._opening_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpening) {
                        _this.beforeOpening(_this, outerArgs);
                    }
                    if (_this._opening) {
                        _this._opening(_this, outerArgs);
                    }
                };
                this.i.opening = igniteuiReactCore.delegateCombine(this.i.opening, this._opening_wrapped);
                if (this.i.openingChanged) {
                    this.i.openingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "opened", {
            get: function () {
                return this._opened;
            },
            set: function (ev) {
                var _this = this;
                if (this._opened_wrapped !== null) {
                    this.i.opened = igniteuiReactCore.delegateRemove(this.i.opened, this._opened_wrapped);
                    this._opened_wrapped = null;
                    this._opened = null;
                }
                this._opened = ev;
                this._opened_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeOpened) {
                        _this.beforeOpened(_this, outerArgs);
                    }
                    if (_this._opened) {
                        _this._opened(_this, outerArgs);
                    }
                };
                this.i.opened = igniteuiReactCore.delegateCombine(this.i.opened, this._opened_wrapped);
                if (this.i.openedChanged) {
                    this.i.openedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "closing", {
            get: function () {
                return this._closing;
            },
            set: function (ev) {
                var _this = this;
                if (this._closing_wrapped !== null) {
                    this.i.closing = igniteuiReactCore.delegateRemove(this.i.closing, this._closing_wrapped);
                    this._closing_wrapped = null;
                    this._closing = null;
                }
                this._closing = ev;
                this._closing_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosing) {
                        _this.beforeClosing(_this, outerArgs);
                    }
                    if (_this._closing) {
                        _this._closing(_this, outerArgs);
                    }
                };
                this.i.closing = igniteuiReactCore.delegateCombine(this.i.closing, this._closing_wrapped);
                if (this.i.closingChanged) {
                    this.i.closingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSelect.prototype, "closed", {
            get: function () {
                return this._closed;
            },
            set: function (ev) {
                var _this = this;
                if (this._closed_wrapped !== null) {
                    this.i.closed = igniteuiReactCore.delegateRemove(this.i.closed, this._closed_wrapped);
                    this._closed_wrapped = null;
                    this._closed = null;
                }
                this._closed = ev;
                this._closed_wrapped = function (o, e) {
                    var outerArgs = new IgrVoidEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClosed) {
                        _this.beforeClosed(_this, outerArgs);
                    }
                    if (_this._closed) {
                        _this._closed(_this, outerArgs);
                    }
                };
                this.i.closed = igniteuiReactCore.delegateCombine(this.i.closed, this._closed_wrapped);
                if (this.i.closedChanged) {
                    this.i.closedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrSelect;
    }(IgrBaseComboBoxLike));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSelectModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSelectModule() {
        }
        IgrSelectModule.register = function () {
            IgrBaseComboBoxLikeModule.register();
            IgrIconModule.register();
            IgrInputModule.register();
            IgrSelectGroupModule.register();
            IgrSelectHeaderModule.register();
            IgrSelectItemModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelectItemComponentEventArgs', IgrSelectItemComponentEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelect', IgrSelect);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrSelect', IgrSelect);
        };
        return IgrSelectModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StepType = /*@__PURE__*/ (function (StepType) {
        StepType[StepType["In"] = 0] = "In";
        StepType[StepType["Out"] = 1] = "Out";
        return StepType;
    })({});
    /**
     * @hidden
     */
    var StepType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StepType', 'In,0|Out,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StepDirection = /*@__PURE__*/ (function (StepDirection) {
        StepDirection[StepDirection["Normal"] = 0] = "Normal";
        StepDirection[StepDirection["Reverse"] = 1] = "Reverse";
        return StepDirection;
    })({});
    /**
     * @hidden
     */
    var StepDirection_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StepDirection', 'Normal,0|Reverse,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Step = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Step, _super);
        function Step() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.h = null;
            return _this;
        }
        Object.defineProperty(Step.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Step.prototype, "nativeElement", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
                this.a.o = this.h;
            },
            enumerable: false,
            configurable: true
        });
        Step.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Step.prototype, "f", {
            get: function () {
                var ret_ = this.b.n("invalid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("invalid", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Step.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("active");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("active", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Step.prototype, "g", {
            get: function () {
                var ret_ = this.b.n("optional");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("optional", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Step.prototype, "e", {
            get: function () {
                var ret_ = this.b.n("disabled");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("disabled", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Step.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("complete");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("complete", value_);
            },
            enumerable: false,
            configurable: true
        });
        Step.prototype.k = function (a, b) {
            this.nativeElement.toggleAnimation(this.b.i(igniteuiReactCore.enumGetBox(StepType_$type, a)), this.b.i(igniteuiReactCore.enumGetBox(StepDirection_$type, b)));
        };
        Step.$t = igniteuiReactCore.markType(Step, 'Step', BaseElement.$);
        return Step;
    }(BaseElement));

    /**
     * The step component is used within the `igc-stepper` element and it holds the content of each step.
     * It also supports custom indicators, title and subtitle.
    */
    var IgrStep = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrStep, _super);
        function IgrStep(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcStepComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrStep.prototype.createImplementation = function () {
            return new Step();
        };
        Object.defineProperty(IgrStep.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStep.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrStep._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrStep.prototype.onImplementationCreated = function () {
        };
        IgrStep.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrStep.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrStep.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-step", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrStep.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrStep.prototype, "invalid", {
            /**
             * Gets/sets whether the step is invalid.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStep.prototype, "active", {
            /**
             * Gets/sets whether the step is activе.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStep.prototype, "optional", {
            /**
             * Gets/sets whether the step is optional.
             * @remarks
             * Optional steps validity does not affect the default behavior when the stepper is in linear mode i.e.
             * if optional step is invalid the user could still move to the next step.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStep.prototype, "disabled", {
            /**
             * Gets/sets whether the step is interactable.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStep.prototype, "complete", {
            /**
             * Gets/sets whether the step is completed.
             * @remarks
             * When set to `true` the following separator is styled `solid`.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrStep.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrStep.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrStep.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrStep.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Step");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrStep.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrStep.prototype.toggleAnimation = function (type, direction) {
            this.i.k((type == null ? null : type), (direction == null ? null : direction));
        };
        return IgrStep;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrStepModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrStepModule() {
        }
        IgrStepModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrStep', IgrStep);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrStep', IgrStep);
        };
        return IgrStepModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ActiveStepChangingArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ActiveStepChangingArgsDetail, _super);
        function ActiveStepChangingArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(ActiveStepChangingArgsDetail.prototype, "d", {
            get: function () {
                var ret_ = this.b.n("oldIndex");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("oldIndex", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActiveStepChangingArgsDetail.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("newIndex");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("newIndex", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActiveStepChangingArgsDetail.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActiveStepChangingArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.a.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        ActiveStepChangingArgsDetail.$t = igniteuiReactCore.markType(ActiveStepChangingArgsDetail, 'ActiveStepChangingArgsDetail');
        return ActiveStepChangingArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrActiveStepChangingArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrActiveStepChangingArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrActiveStepChangingArgsDetail.prototype.createImplementation = function () {
            return new ActiveStepChangingArgsDetail();
        };
        Object.defineProperty(IgrActiveStepChangingArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActiveStepChangingArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrActiveStepChangingArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrActiveStepChangingArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrActiveStepChangingArgsDetail.prototype, "oldIndex", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActiveStepChangingArgsDetail.prototype, "newIndex", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrActiveStepChangingArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrActiveStepChangingArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ActiveStepChangingArgsEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ActiveStepChangingArgsEventArgs, _super);
        function ActiveStepChangingArgsEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        ActiveStepChangingArgsEventArgs.b = function (a) {
            return ((function () {
                var $ret = new ActiveStepChangingArgsEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        ActiveStepChangingArgsEventArgs.$t = igniteuiReactCore.markType(ActiveStepChangingArgsEventArgs, 'ActiveStepChangingArgsEventArgs');
        return ActiveStepChangingArgsEventArgs;
    }(igniteuiReactCore.Base));

    var IgrActiveStepChangingArgsEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrActiveStepChangingArgsEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrActiveStepChangingArgsEventArgs.prototype.createImplementation = function () {
            return new ActiveStepChangingArgsEventArgs();
        };
        Object.defineProperty(IgrActiveStepChangingArgsEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActiveStepChangingArgsEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrActiveStepChangingArgsEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrActiveStepChangingArgsEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrActiveStepChangingArgsEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrActiveStepChangingArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrActiveStepChangingArgsEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ActiveStepChangedArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ActiveStepChangedArgsDetail, _super);
        function ActiveStepChangedArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(ActiveStepChangedArgsDetail.prototype, "c", {
            get: function () {
                var ret_ = this.b.n("index");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.b.w("index", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActiveStepChangedArgsDetail.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActiveStepChangedArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.a.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        ActiveStepChangedArgsDetail.$t = igniteuiReactCore.markType(ActiveStepChangedArgsDetail, 'ActiveStepChangedArgsDetail');
        return ActiveStepChangedArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrActiveStepChangedArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrActiveStepChangedArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrActiveStepChangedArgsDetail.prototype.createImplementation = function () {
            return new ActiveStepChangedArgsDetail();
        };
        Object.defineProperty(IgrActiveStepChangedArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActiveStepChangedArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrActiveStepChangedArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrActiveStepChangedArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrActiveStepChangedArgsDetail.prototype, "index", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrActiveStepChangedArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrActiveStepChangedArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ActiveStepChangedArgsEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ActiveStepChangedArgsEventArgs, _super);
        function ActiveStepChangedArgsEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        ActiveStepChangedArgsEventArgs.b = function (a) {
            return ((function () {
                var $ret = new ActiveStepChangedArgsEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        ActiveStepChangedArgsEventArgs.$t = igniteuiReactCore.markType(ActiveStepChangedArgsEventArgs, 'ActiveStepChangedArgsEventArgs');
        return ActiveStepChangedArgsEventArgs;
    }(igniteuiReactCore.Base));

    var IgrActiveStepChangedArgsEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrActiveStepChangedArgsEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrActiveStepChangedArgsEventArgs.prototype.createImplementation = function () {
            return new ActiveStepChangedArgsEventArgs();
        };
        Object.defineProperty(IgrActiveStepChangedArgsEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActiveStepChangedArgsEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrActiveStepChangedArgsEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrActiveStepChangedArgsEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrActiveStepChangedArgsEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrActiveStepChangedArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrActiveStepChangedArgsEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StepperOrientation = /*@__PURE__*/ (function (StepperOrientation) {
        StepperOrientation[StepperOrientation["Horizontal"] = 0] = "Horizontal";
        StepperOrientation[StepperOrientation["Vertical"] = 1] = "Vertical";
        return StepperOrientation;
    })({});
    /**
     * @hidden
     */
    var StepperOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StepperOrientation', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StepperStepType = /*@__PURE__*/ (function (StepperStepType) {
        StepperStepType[StepperStepType["Indicator"] = 0] = "Indicator";
        StepperStepType[StepperStepType["Title"] = 1] = "Title";
        StepperStepType[StepperStepType["Full"] = 2] = "Full";
        return StepperStepType;
    })({});
    /**
     * @hidden
     */
    var StepperStepType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StepperStepType', 'Indicator,0|Title,1|Full,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StepperVerticalAnimation = /*@__PURE__*/ (function (StepperVerticalAnimation) {
        StepperVerticalAnimation[StepperVerticalAnimation["None"] = 0] = "None";
        StepperVerticalAnimation[StepperVerticalAnimation["Grow"] = 1] = "Grow";
        StepperVerticalAnimation[StepperVerticalAnimation["Fade"] = 2] = "Fade";
        return StepperVerticalAnimation;
    })({});
    /**
     * @hidden
     */
    var StepperVerticalAnimation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StepperVerticalAnimation', 'None,0|Grow,1|Fade,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StepperHorizontalAnimation = /*@__PURE__*/ (function (StepperHorizontalAnimation) {
        StepperHorizontalAnimation[StepperHorizontalAnimation["None"] = 0] = "None";
        StepperHorizontalAnimation[StepperHorizontalAnimation["Fade"] = 1] = "Fade";
        StepperHorizontalAnimation[StepperHorizontalAnimation["Slide"] = 2] = "Slide";
        return StepperHorizontalAnimation;
    })({});
    /**
     * @hidden
     */
    var StepperHorizontalAnimation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StepperHorizontalAnimation', 'None,0|Fade,1|Slide,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var StepperTitlePosition = /*@__PURE__*/ (function (StepperTitlePosition) {
        StepperTitlePosition[StepperTitlePosition["Bottom"] = 0] = "Bottom";
        StepperTitlePosition[StepperTitlePosition["Top"] = 1] = "Top";
        StepperTitlePosition[StepperTitlePosition["Start"] = 2] = "Start";
        StepperTitlePosition[StepperTitlePosition["End"] = 3] = "End";
        return StepperTitlePosition;
    })({});
    /**
     * @hidden
     */
    var StepperTitlePosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('StepperTitlePosition', 'Bottom,0|Top,1|Start,2|End,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Stepper = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(Stepper, _super);
        function Stepper() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.i = new WCNativeHelper();
            _this.n = null;
            _this.activeStepChanging = null;
            _this.activeStepChanged = null;
            return _this;
        }
        Object.defineProperty(Stepper.prototype, "j", {
            get: function () {
                return this.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "nativeElement", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                this.n = a;
                this.i.o = this.n;
            },
            enumerable: false,
            configurable: true
        });
        Stepper.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(Stepper.prototype, "a", {
            get: function () {
                var ret_ = this.j.m("steps", function (a) { return new Step(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("steps", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "e", {
            get: function () {
                var ret_ = this.j.n("orientation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StepperOrientation_$type, igniteuiReactCore.EnumUtil.getEnumValue(StepperOrientation_$type, this.j.f(StepperOrientation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StepperOrientation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StepperOrientation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("orientation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "f", {
            get: function () {
                var ret_ = this.j.n("stepType");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StepperStepType_$type, igniteuiReactCore.EnumUtil.getEnumValue(StepperStepType_$type, this.j.f(StepperStepType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StepperStepType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StepperStepType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("stepType", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "l", {
            get: function () {
                var ret_ = this.j.n("linear");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("linear", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "k", {
            get: function () {
                var ret_ = this.j.n("contentTop");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("contentTop", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "h", {
            get: function () {
                var ret_ = this.j.n("verticalAnimation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StepperVerticalAnimation_$type, igniteuiReactCore.EnumUtil.getEnumValue(StepperVerticalAnimation_$type, this.j.f(StepperVerticalAnimation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StepperVerticalAnimation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StepperVerticalAnimation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("verticalAnimation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "d", {
            get: function () {
                var ret_ = this.j.n("horizontalAnimation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StepperHorizontalAnimation_$type, igniteuiReactCore.EnumUtil.getEnumValue(StepperHorizontalAnimation_$type, this.j.f(StepperHorizontalAnimation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StepperHorizontalAnimation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StepperHorizontalAnimation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("horizontalAnimation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "m", {
            get: function () {
                var ret_ = this.j.n("animationDuration");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.j.w("animationDuration", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Stepper.prototype, "g", {
            get: function () {
                var ret_ = this.j.n("titlePosition");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(StepperTitlePosition_$type, igniteuiReactCore.EnumUtil.getEnumValue(StepperTitlePosition_$type, this.j.f(StepperTitlePosition_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(StepperTitlePosition_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(StepperTitlePosition_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.j.w("titlePosition", value_);
            },
            enumerable: false,
            configurable: true
        });
        Stepper.prototype.activeStepChangingChanged = function () {
            var _this = this;
            if (this.activeStepChanging != null) {
                this.j.s("activeStepChanging", function (a) { return _this.activeStepChanging(_this, ActiveStepChangingArgsEventArgs.b(a)); });
            }
            else {
                this.j.v("activeStepChanging");
            }
        };
        Stepper.prototype.activeStepChangedChanged = function () {
            var _this = this;
            if (this.activeStepChanged != null) {
                this.j.s("activeStepChanged", function (a) { return _this.activeStepChanged(_this, ActiveStepChangedArgsEventArgs.b(a)); });
            }
            else {
                this.j.v("activeStepChanged");
            }
        };
        Stepper.prototype.r = function () {
            this.nativeElement.connectedCallback();
        };
        Stepper.prototype.s = function (a) {
            this.nativeElement.navigateTo(this.j.i(a));
        };
        Stepper.prototype.t = function () {
            this.nativeElement.next();
        };
        Stepper.prototype.u = function () {
            this.nativeElement.prev();
        };
        Stepper.prototype.v = function () {
            this.nativeElement.reset();
        };
        Stepper.$t = igniteuiReactCore.markType(Stepper, 'Stepper', BaseElement.$);
        return Stepper;
    }(BaseElement));

    /**
     * IgxStepper provides a wizard-like workflow by dividing content into logical steps.
     * @remarks
     * The stepper component allows the user to navigate between multiple steps.
     * It supports horizontal and vertical orientation as well as keyboard navigation and provides API methods to control the active step.
    */
    var IgrStepper = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrStepper, _super);
        function IgrStepper(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._activeStepChanging = null;
            _this._activeStepChanging_wrapped = null;
            _this._activeStepChanged = null;
            _this._activeStepChanged_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            igniteuiWebcomponents.defineComponents(igniteuiWebcomponents.IgcStepperComponent);
            _this._implementation = _this.createImplementation();
            _this._portalManager = new igniteuiReactCore.PortalManager("templates", function () {
                if (_this.mounted) {
                    _this.setState({});
                }
            });
            if (typeof window !== 'undefined' && typeof document !== 'undefined') {
                _this._renderer = new igniteuiReactCore.ReactRenderer(_this._implementation.nativeElement, document, false, null, _this._portalManager);
            }
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrStepper.prototype.createImplementation = function () {
            return new Stepper();
        };
        Object.defineProperty(IgrStepper.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrStepper._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrStepper.prototype.onImplementationCreated = function () {
        };
        IgrStepper.prototype.componentDidMount = function () {
            var e_1, _a;
            this.i.nativeElement = this._elRef;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrStepper.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrStepper.prototype.render = function () {
            var _this = this;
            var nativePropsName = Object.keys(this.props).filter(function (prop) { return !igniteuiReactCore.isValidProp(_this, prop) && prop !== "originalRef"; });
            var nativeProps = {};
            nativePropsName.forEach(function (propName) {
                nativeProps[propName] = _this.props[propName];
            });
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var style = {};
            if (this.props.style) {
                style = this.props.style;
            }
            var div = React.createElement("igc-stepper", tslib.__assign(tslib.__assign({}, nativeProps), { ref: this._getMainRef, id: this.props.id, class: this.props.className, style: style, children: children }));
            return div;
        };
        IgrStepper.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        Object.defineProperty(IgrStepper.prototype, "steps", {
            /**
             * Returns all of the stepper's steps.
            */
            get: function () {
                if (!this.i.a) {
                    return undefined;
                }
                var ret = [];
                for (var i = 0; i < this.i.a.length; i++) {
                    var impl = this.i.a[i];
                    if (!impl.externalObject) {
                        if (impl instanceof IgrStep) {
                            ret.push(impl);
                            continue;
                        }
                        var e = IgrStep._createFromInternal(impl);
                        e._implementation = impl;
                        impl.externalObject = e;
                    }
                    ret.push(impl.externalObject);
                }
                return ret;
            },
            set: function (v) {
                var arr = [];
                for (var i = 0; i < v.length; i++) {
                    arr.push(v[i].i);
                }
                this.i.a = arr;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "orientation", {
            /**
             * Gets/Sets the orientation of the stepper.
             * @remarks
             * Default value is `horizontal`.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(StepperOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "stepType", {
            /**
             * Get/Set the type of the steps.
             * @remarks
             * Default value is `full`.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(StepperStepType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "linear", {
            /**
             * Get/Set whether the stepper is linear.
             * @remarks
             * If the stepper is in linear mode and if the active step is valid only then the user is able to move forward.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "contentTop", {
            /**
             * Get/Set whether the content is displayed above the steps.
             * @remarks
             * Default value is `false` and the content is below the steps.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "verticalAnimation", {
            /**
             * The animation type when in vertical mode.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureEnum(StepperVerticalAnimation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "horizontalAnimation", {
            /**
             * The animation type when in horizontal mode.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureEnum(StepperHorizontalAnimation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "animationDuration", {
            /**
             * The animation duration in either vertical or horizontal mode.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "titlePosition", {
            /**
             * Get/Set the position of the steps title.
             * @remarks
             * The default value is undefined.
             * When the stepper is horizontally orientated the title is positioned below the indicator.
             * When the stepper is horizontally orientated the title is positioned on the right side of the indicator.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(StepperTitlePosition_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrStepper.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrStepper.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrStepper.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrStepper.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Stepper");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrStepper.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        IgrStepper.prototype.connectedCallback = function () {
            this.i.r();
        };
        /**
         * Activates the step at a given index.
        
        */
        IgrStepper.prototype.navigateTo = function (index) {
            this.i.s(index);
        };
        /**
         * Activates the next enabled step.
        
        */
        IgrStepper.prototype.next = function () {
            this.i.t();
        };
        /**
         * Activates the previous enabled step.
        
        */
        IgrStepper.prototype.prev = function () {
            this.i.u();
        };
        /**
         * Resets the stepper to its initial state i.e. activates the first step.
         * @remarks
         * The steps' content will not be automatically reset.
        
        */
        IgrStepper.prototype.reset = function () {
            this.i.v();
        };
        Object.defineProperty(IgrStepper.prototype, "activeStepChanging", {
            get: function () {
                return this._activeStepChanging;
            },
            set: function (ev) {
                var _this = this;
                if (this._activeStepChanging_wrapped !== null) {
                    this.i.activeStepChanging = igniteuiReactCore.delegateRemove(this.i.activeStepChanging, this._activeStepChanging_wrapped);
                    this._activeStepChanging_wrapped = null;
                    this._activeStepChanging = null;
                }
                this._activeStepChanging = ev;
                this._activeStepChanging_wrapped = function (o, e) {
                    var outerArgs = new IgrActiveStepChangingArgsEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeActiveStepChanging) {
                        _this.beforeActiveStepChanging(_this, outerArgs);
                    }
                    if (_this._activeStepChanging) {
                        _this._activeStepChanging(_this, outerArgs);
                    }
                };
                this.i.activeStepChanging = igniteuiReactCore.delegateCombine(this.i.activeStepChanging, this._activeStepChanging_wrapped);
                if (this.i.activeStepChangingChanged) {
                    this.i.activeStepChangingChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrStepper.prototype, "activeStepChanged", {
            get: function () {
                return this._activeStepChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._activeStepChanged_wrapped !== null) {
                    this.i.activeStepChanged = igniteuiReactCore.delegateRemove(this.i.activeStepChanged, this._activeStepChanged_wrapped);
                    this._activeStepChanged_wrapped = null;
                    this._activeStepChanged = null;
                }
                this._activeStepChanged = ev;
                this._activeStepChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrActiveStepChangedArgsEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeActiveStepChanged) {
                        _this.beforeActiveStepChanged(_this, outerArgs);
                    }
                    if (_this._activeStepChanged) {
                        _this._activeStepChanged(_this, outerArgs);
                    }
                };
                this.i.activeStepChanged = igniteuiReactCore.delegateCombine(this.i.activeStepChanged, this._activeStepChanged_wrapped);
                if (this.i.activeStepChangedChanged) {
                    this.i.activeStepChangedChanged();
                }
                ;
            },
            enumerable: false,
            configurable: true
        });
        return IgrStepper;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrStepperModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrStepperModule() {
        }
        IgrStepperModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrActiveStepChangingArgsEventArgs', IgrActiveStepChangingArgsEventArgs);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrActiveStepChangedArgsEventArgs', IgrActiveStepChangedArgsEventArgs);
            IgrStepModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrStepper', IgrStepper);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrStepper', IgrStepper);
        };
        return IgrStepperModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneScrollEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneScrollEventArgs, _super);
        function PaneScrollEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        PaneScrollEventArgs.a = function (a) {
            return ((function () {
                var $ret = new PaneScrollEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        PaneScrollEventArgs.$t = igniteuiReactCore.markType(PaneScrollEventArgs, 'PaneScrollEventArgs');
        return PaneScrollEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneScrollEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneScrollEventArgsDetail, _super);
        function PaneScrollEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(PaneScrollEventArgsDetail.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneScrollEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.b.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        PaneScrollEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PaneScrollEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.c.m("pane", function (a) { return new ContentPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("pane", value_);
            },
            enumerable: false,
            configurable: true
        });
        PaneScrollEventArgsDetail.$t = igniteuiReactCore.markType(PaneScrollEventArgsDetail, 'PaneScrollEventArgsDetail');
        return PaneScrollEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrPaneScrollEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneScrollEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneScrollEventArgsDetail.prototype.createImplementation = function () {
            return new PaneScrollEventArgsDetail();
        };
        Object.defineProperty(IgrPaneScrollEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneScrollEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneScrollEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrPaneScrollEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneScrollEventArgsDetail.prototype, "pane", {
            /**
             * Gets the content pane that is scrolled.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrContentPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneScrollEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.pane && this.pane.name && this.pane.name == name) {
                return this.pane;
            }
            return null;
        };
        IgrPaneScrollEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPaneScrollEventArgsDetail;
    }());

    var IgrPaneScrollEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneScrollEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneScrollEventArgs.prototype.createImplementation = function () {
            return new PaneScrollEventArgs();
        };
        Object.defineProperty(IgrPaneScrollEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneScrollEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneScrollEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrPaneScrollEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneScrollEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneScrollEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrPaneScrollEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SplitterResizeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(SplitterResizeEventArgs, _super);
        function SplitterResizeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = 0;
            _this.d = 0;
            _this.c = 0;
            return _this;
        }
        SplitterResizeEventArgs.$t = igniteuiReactCore.markType(SplitterResizeEventArgs, 'SplitterResizeEventArgs');
        return SplitterResizeEventArgs;
    }(igniteuiReactCore.Base));

    var IgrSplitterResizeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrSplitterResizeEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrSplitterResizeEventArgs.prototype.createImplementation = function () {
            return new SplitterResizeEventArgs();
        };
        Object.defineProperty(IgrSplitterResizeEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitterResizeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrSplitterResizeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrSplitterResizeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrSplitterResizeEventArgs.prototype, "pane", {
            /**
             * Gets the pane being resized with the splitter.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitterResizeEventArgs.prototype, "orientation", {
            /**
             * Gets the pane's orientation.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(SplitPaneOrientation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitterResizeEventArgs.prototype, "paneWidth", {
            /**
             * Gets the pane's width.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrSplitterResizeEventArgs.prototype, "paneHeight", {
            /**
             * Gets the pane's height.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: false,
            configurable: true
        });
        return IgrSplitterResizeEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ActivePaneEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ActivePaneEventArgsDetail, _super);
        function ActivePaneEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(ActivePaneEventArgsDetail.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActivePaneEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        ActivePaneEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(ActivePaneEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.d.m("newPane", function (a) { return new ContentPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("newPane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActivePaneEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("oldPane", function (a) { return new ContentPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("oldPane", value_);
            },
            enumerable: false,
            configurable: true
        });
        ActivePaneEventArgsDetail.$t = igniteuiReactCore.markType(ActivePaneEventArgsDetail, 'ActivePaneEventArgsDetail');
        return ActivePaneEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrActivePaneEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrActivePaneEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrActivePaneEventArgsDetail.prototype.createImplementation = function () {
            return new ActivePaneEventArgsDetail();
        };
        Object.defineProperty(IgrActivePaneEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActivePaneEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrActivePaneEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrActivePaneEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrActivePaneEventArgsDetail.prototype, "newPane", {
            /**
             * Gets the new active pane.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrContentPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActivePaneEventArgsDetail.prototype, "oldPane", {
            /**
             * Gets the old active pane.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrContentPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrActivePaneEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.newPane && this.newPane.name && this.newPane.name == name) {
                return this.newPane;
            }
            if (this.oldPane && this.oldPane.name && this.oldPane.name == name) {
                return this.oldPane;
            }
            return null;
        };
        IgrActivePaneEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrActivePaneEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ResizerLocation = /*@__PURE__*/ (function (ResizerLocation) {
        ResizerLocation[ResizerLocation["Top"] = 0] = "Top";
        ResizerLocation[ResizerLocation["Bottom"] = 1] = "Bottom";
        ResizerLocation[ResizerLocation["Left"] = 2] = "Left";
        ResizerLocation[ResizerLocation["Right"] = 3] = "Right";
        ResizerLocation[ResizerLocation["TopLeft"] = 4] = "TopLeft";
        ResizerLocation[ResizerLocation["TopRight"] = 5] = "TopRight";
        ResizerLocation[ResizerLocation["BottomLeft"] = 6] = "BottomLeft";
        ResizerLocation[ResizerLocation["BottomRight"] = 7] = "BottomRight";
        return ResizerLocation;
    })({});
    /**
     * @hidden
     */
    var ResizerLocation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ResizerLocation', 'Top:top,0|Bottom:bottom,1|Left:left,2|Right:right,3|TopLeft:topLeft,4|TopRight:topRight,5|BottomLeft:bottomLeft,6|BottomRight:bottomRight,7');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FloatingPaneResizeEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FloatingPaneResizeEventArgsDetail, _super);
        function FloatingPaneResizeEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(FloatingPaneResizeEventArgsDetail.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatingPaneResizeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        FloatingPaneResizeEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(FloatingPaneResizeEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("sourcePane", function (a) { return new SplitPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("sourcePane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatingPaneResizeEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.d.n("resizerLocation");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(ResizerLocation_$type, igniteuiReactCore.EnumUtil.getEnumValue(ResizerLocation_$type, this.d.f(ResizerLocation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(ResizerLocation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(ResizerLocation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.d.w("resizerLocation", value_);
            },
            enumerable: false,
            configurable: true
        });
        FloatingPaneResizeEventArgsDetail.$t = igniteuiReactCore.markType(FloatingPaneResizeEventArgsDetail, 'FloatingPaneResizeEventArgsDetail');
        return FloatingPaneResizeEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrFloatingPaneResizeEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrFloatingPaneResizeEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrFloatingPaneResizeEventArgsDetail.prototype.createImplementation = function () {
            return new FloatingPaneResizeEventArgsDetail();
        };
        Object.defineProperty(IgrFloatingPaneResizeEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrFloatingPaneResizeEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrFloatingPaneResizeEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrFloatingPaneResizeEventArgsDetail.prototype, "sourcePane", {
            /**
             * Gets the source pane that triggers the resize operation.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrSplitPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeEventArgsDetail.prototype, "resizerLocation", {
            /**
             * Gets the edge/corner that is being dragged.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(ResizerLocation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrFloatingPaneResizeEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.sourcePane && this.sourcePane.name && this.sourcePane.name == name) {
                return this.sourcePane;
            }
            return null;
        };
        IgrFloatingPaneResizeEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrFloatingPaneResizeEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FloatingPaneResizeMoveEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FloatingPaneResizeMoveEventArgsDetail, _super);
        function FloatingPaneResizeMoveEventArgsDetail() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(FloatingPaneResizeMoveEventArgsDetail.prototype, "m", {
            get: function () {
                var ret_ = this.d.n("oldWidth");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("oldWidth", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatingPaneResizeMoveEventArgsDetail.prototype, "k", {
            get: function () {
                var ret_ = this.d.n("newWidth");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("newWidth", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatingPaneResizeMoveEventArgsDetail.prototype, "l", {
            get: function () {
                var ret_ = this.d.n("oldHeight");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("oldHeight", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatingPaneResizeMoveEventArgsDetail.prototype, "j", {
            get: function () {
                var ret_ = this.d.n("newHeight");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("newHeight", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatingPaneResizeMoveEventArgsDetail.prototype, "i", {
            get: function () {
                var ret_ = this.d.m("oldLocation", function (a) { return new DockManagerPoint(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("oldLocation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatingPaneResizeMoveEventArgsDetail.prototype, "h", {
            get: function () {
                var ret_ = this.d.m("newLocation", function (a) { return new DockManagerPoint(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("newLocation", value_);
            },
            enumerable: false,
            configurable: true
        });
        FloatingPaneResizeMoveEventArgsDetail.$t = igniteuiReactCore.markType(FloatingPaneResizeMoveEventArgsDetail, 'FloatingPaneResizeMoveEventArgsDetail', FloatingPaneResizeEventArgsDetail.$);
        return FloatingPaneResizeMoveEventArgsDetail;
    }(FloatingPaneResizeEventArgsDetail));

    var IgrFloatingPaneResizeMoveEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrFloatingPaneResizeMoveEventArgsDetail, _super);
        function IgrFloatingPaneResizeMoveEventArgsDetail() {
            return _super.call(this) || this;
        }
        IgrFloatingPaneResizeMoveEventArgsDetail.prototype.createImplementation = function () {
            return new FloatingPaneResizeMoveEventArgsDetail();
        };
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgsDetail.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgsDetail.prototype, "oldWidth", {
            /**
             * Gets the pane's width before the resizing operation.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgsDetail.prototype, "newWidth", {
            /**
             * Gets the pane's width after the resizing operation.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgsDetail.prototype, "oldHeight", {
            /**
             * Gets the pane's height before the resizing operation.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgsDetail.prototype, "newHeight", {
            /**
             * Gets the pane's height after the resizing operation.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgsDetail.prototype, "oldLocation", {
            /**
             * Gets the pane's floating location before the resizing operation.
            */
            get: function () {
                var r = this.i.i;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerPoint();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.i = null : this.i.i = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgsDetail.prototype, "newLocation", {
            /**
             * Gets the pane's floating location after the resizing operation.
            */
            get: function () {
                var r = this.i.h;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerPoint();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.h = null : this.i.h = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrFloatingPaneResizeMoveEventArgsDetail.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.oldLocation && this.oldLocation.name && this.oldLocation.name == name) {
                return this.oldLocation;
            }
            if (this.newLocation && this.newLocation.name && this.newLocation.name == name) {
                return this.newLocation;
            }
            return null;
        };
        return IgrFloatingPaneResizeMoveEventArgsDetail;
    }(IgrFloatingPaneResizeEventArgsDetail));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var KeyBindingHandler = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(KeyBindingHandler, _super);
        function KeyBindingHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        KeyBindingHandler.$t = igniteuiReactCore.markType(KeyBindingHandler, 'KeyBindingHandler');
        return KeyBindingHandler;
    }(igniteuiReactCore.Base));

    var IgrKeyBindingHandler = /** @class */ /*@__PURE__*/ (function () {
        function IgrKeyBindingHandler() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrKeyBindingHandler.prototype.createImplementation = function () {
            return new KeyBindingHandler();
        };
        Object.defineProperty(IgrKeyBindingHandler.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrKeyBindingHandler.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrKeyBindingHandler.prototype.onImplementationCreated = function () {
        };
        IgrKeyBindingHandler.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        IgrKeyBindingHandler.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrKeyBindingHandler;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var KeyBindingOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(KeyBindingOptions, _super);
        function KeyBindingOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        KeyBindingOptions.$t = igniteuiReactCore.markType(KeyBindingOptions, 'KeyBindingOptions');
        return KeyBindingOptions;
    }(igniteuiReactCore.Base));

    var IgrKeyBindingOptions = /** @class */ /*@__PURE__*/ (function () {
        function IgrKeyBindingOptions() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrKeyBindingOptions.prototype.createImplementation = function () {
            return new KeyBindingOptions();
        };
        Object.defineProperty(IgrKeyBindingOptions.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrKeyBindingOptions.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrKeyBindingOptions.prototype.onImplementationCreated = function () {
        };
        IgrKeyBindingOptions.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        IgrKeyBindingOptions.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrKeyBindingOptions;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var KeyBindingTrigger = /*@__PURE__*/ (function (KeyBindingTrigger) {
        KeyBindingTrigger[KeyBindingTrigger["Keydown"] = 0] = "Keydown";
        KeyBindingTrigger[KeyBindingTrigger["Keyup"] = 1] = "Keyup";
        KeyBindingTrigger[KeyBindingTrigger["KeydownRepeat"] = 2] = "KeydownRepeat";
        return KeyBindingTrigger;
    })({});
    /**
     * @hidden
     */
    var KeyBindingTrigger_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('KeyBindingTrigger', 'Keydown,0|Keyup,1|KeydownRepeat,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneCloseEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneCloseEventArgsDetail, _super);
        function PaneCloseEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(PaneCloseEventArgsDetail.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneCloseEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        PaneCloseEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PaneCloseEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("sourcePane", function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("sourcePane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneCloseEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.d.n("panes");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("panes", value_);
            },
            enumerable: false,
            configurable: true
        });
        PaneCloseEventArgsDetail.$t = igniteuiReactCore.markType(PaneCloseEventArgsDetail, 'PaneCloseEventArgsDetail');
        return PaneCloseEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrPaneCloseEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneCloseEventArgsDetail() {
            this.mounted = false;
            this._panes = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneCloseEventArgsDetail.prototype.createImplementation = function () {
            return new PaneCloseEventArgsDetail();
        };
        Object.defineProperty(IgrPaneCloseEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneCloseEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneCloseEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrPaneCloseEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneCloseEventArgsDetail.prototype, "sourcePane", {
            /**
             * Get the source pane that triggers the close.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneCloseEventArgsDetail.prototype, "panes", {
            /**
             * Gets/sets the panes that are about to close.
            */
            get: function () {
                if (this._panes === null) {
                    var coll = new IgrContentPaneCollection();
                    var innerColl = this.i.a;
                    if (!innerColl) {
                        innerColl = new ContentPaneCollection();
                    }
                    this._panes = coll._fromInner(innerColl);
                    this.i.a = innerColl;
                }
                return this._panes;
            },
            set: function (v) {
                if (this._panes !== null) {
                    this._panes._setSyncTarget(null);
                    this._panes = null;
                }
                var coll = new IgrContentPaneCollection();
                this._panes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(ContentPane.$type);
                var innerColl = this.i.a;
                if (!innerColl) {
                    innerColl = new ContentPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._panes._setSyncTarget(syncColl);
                this.i.a = innerColl;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneCloseEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.sourcePane && this.sourcePane.name && this.sourcePane.name == name) {
                return this.sourcePane;
            }
            if (this.panes != null && this.panes.findByName && this.panes.findByName(name)) {
                return this.panes.findByName(name);
            }
            return null;
        };
        IgrPaneCloseEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPaneCloseEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneDragEndEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneDragEndEventArgsDetail, _super);
        function PaneDragEndEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(PaneDragEndEventArgsDetail.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragEndEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        PaneDragEndEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PaneDragEndEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("sourcePane", function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("sourcePane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragEndEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.d.n("panes");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("panes", value_);
            },
            enumerable: false,
            configurable: true
        });
        PaneDragEndEventArgsDetail.$t = igniteuiReactCore.markType(PaneDragEndEventArgsDetail, 'PaneDragEndEventArgsDetail');
        return PaneDragEndEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrPaneDragEndEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneDragEndEventArgsDetail() {
            this.mounted = false;
            this._panes = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneDragEndEventArgsDetail.prototype.createImplementation = function () {
            return new PaneDragEndEventArgsDetail();
        };
        Object.defineProperty(IgrPaneDragEndEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragEndEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragEndEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrPaneDragEndEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneDragEndEventArgsDetail.prototype, "sourcePane", {
            /**
             * Gets the source pane that ends dragging.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragEndEventArgsDetail.prototype, "panes", {
            /**
             * Gets the panes that end dragging.
            */
            get: function () {
                if (this._panes === null) {
                    var coll = new IgrContentPaneCollection();
                    var innerColl = this.i.a;
                    if (!innerColl) {
                        innerColl = new ContentPaneCollection();
                    }
                    this._panes = coll._fromInner(innerColl);
                    this.i.a = innerColl;
                }
                return this._panes;
            },
            set: function (v) {
                if (this._panes !== null) {
                    this._panes._setSyncTarget(null);
                    this._panes = null;
                }
                var coll = new IgrContentPaneCollection();
                this._panes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(ContentPane.$type);
                var innerColl = this.i.a;
                if (!innerColl) {
                    innerColl = new ContentPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._panes._setSyncTarget(syncColl);
                this.i.a = innerColl;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragEndEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.sourcePane && this.sourcePane.name && this.sourcePane.name == name) {
                return this.sourcePane;
            }
            if (this.panes != null && this.panes.findByName && this.panes.findByName(name)) {
                return this.panes.findByName(name);
            }
            return null;
        };
        IgrPaneDragEndEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPaneDragEndEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneDragAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneDragAction, _super);
        function PaneDragAction() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        PaneDragAction.$t = igniteuiReactCore.markType(PaneDragAction, 'PaneDragAction');
        return PaneDragAction;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneDragOverEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneDragOverEventArgsDetail, _super);
        function PaneDragOverEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.g = null;
            return _this;
        }
        Object.defineProperty(PaneDragOverEventArgsDetail.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragOverEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                this.g = a;
                this.d.o = this.g;
            },
            enumerable: false,
            configurable: true
        });
        PaneDragOverEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PaneDragOverEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.e.m("sourcePane", function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("sourcePane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragOverEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.e.n("panes");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("panes", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragOverEventArgsDetail.prototype, "c", {
            get: function () {
                var ret_ = this.e.m("action", function (a) { return new PaneDragAction(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("action", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragOverEventArgsDetail.prototype, "f", {
            get: function () {
                var ret_ = this.e.n("isValid");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("isValid", value_);
            },
            enumerable: false,
            configurable: true
        });
        PaneDragOverEventArgsDetail.$t = igniteuiReactCore.markType(PaneDragOverEventArgsDetail, 'PaneDragOverEventArgsDetail');
        return PaneDragOverEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrPaneDragAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrPaneDragAction, _super);
        function IgrPaneDragAction(props) {
            var _this = _super.call(this, props) || this;
            _this.mounted = false;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            if (_this._initializeAdapters) {
                _this._initializeAdapters();
            }
            return _this;
        }
        IgrPaneDragAction.prototype.createImplementation = function () {
            return new PaneDragAction();
        };
        Object.defineProperty(IgrPaneDragAction.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragAction.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: false,
            configurable: true
        });
        IgrPaneDragAction._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrPaneDragAction.prototype.onImplementationCreated = function () {
        };
        IgrPaneDragAction.prototype.componentDidMount = function () {
            var e_1, _a;
            this.mounted = true;
            try {
                for (var _b = tslib.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrPaneDragAction.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrPaneDragAction.prototype.render = function () {
            return null;
        };
        IgrPaneDragAction.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        Object.defineProperty(IgrPaneDragAction.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragAction.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrPaneDragAction.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("PaneDragAction");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        return IgrPaneDragAction;
    }(React.Component));

    var IgrPaneDragOverEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneDragOverEventArgsDetail() {
            this.mounted = false;
            this._panes = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneDragOverEventArgsDetail.prototype.createImplementation = function () {
            return new PaneDragOverEventArgsDetail();
        };
        Object.defineProperty(IgrPaneDragOverEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragOverEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragOverEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrPaneDragOverEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneDragOverEventArgsDetail.prototype, "sourcePane", {
            /**
             * Gets the source pane that triggers the drag over.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragOverEventArgsDetail.prototype, "panes", {
            /**
             * Gets the panes that are dragged over.
            */
            get: function () {
                if (this._panes === null) {
                    var coll = new IgrContentPaneCollection();
                    var innerColl = this.i.a;
                    if (!innerColl) {
                        innerColl = new ContentPaneCollection();
                    }
                    this._panes = coll._fromInner(innerColl);
                    this.i.a = innerColl;
                }
                return this._panes;
            },
            set: function (v) {
                if (this._panes !== null) {
                    this._panes._setSyncTarget(null);
                    this._panes = null;
                }
                var coll = new IgrContentPaneCollection();
                this._panes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(ContentPane.$type);
                var innerColl = this.i.a;
                if (!innerColl) {
                    innerColl = new ContentPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._panes._setSyncTarget(syncColl);
                this.i.a = innerColl;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragOverEventArgsDetail.prototype, "action", {
            /**
             * Gets information about the action being performed.
            */
            get: function () {
                var r = this.i.c;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneDragAction({});
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.c = null : this.i.c = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragOverEventArgsDetail.prototype, "isValid", {
            /**
             * Gets/sets whether the action is valid.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragOverEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.sourcePane && this.sourcePane.name && this.sourcePane.name == name) {
                return this.sourcePane;
            }
            if (this.panes != null && this.panes.findByName && this.panes.findByName(name)) {
                return this.panes.findByName(name);
            }
            if (this.action && this.action.name && this.action.name == name) {
                return this.action;
            }
            return null;
        };
        IgrPaneDragOverEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPaneDragOverEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneDragStartEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneDragStartEventArgsDetail, _super);
        function PaneDragStartEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(PaneDragStartEventArgsDetail.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragStartEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        PaneDragStartEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PaneDragStartEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("sourcePane", function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("sourcePane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneDragStartEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.d.n("panes");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("panes", value_);
            },
            enumerable: false,
            configurable: true
        });
        PaneDragStartEventArgsDetail.$t = igniteuiReactCore.markType(PaneDragStartEventArgsDetail, 'PaneDragStartEventArgsDetail');
        return PaneDragStartEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrPaneDragStartEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneDragStartEventArgsDetail() {
            this.mounted = false;
            this._panes = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneDragStartEventArgsDetail.prototype.createImplementation = function () {
            return new PaneDragStartEventArgsDetail();
        };
        Object.defineProperty(IgrPaneDragStartEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragStartEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragStartEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrPaneDragStartEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneDragStartEventArgsDetail.prototype, "sourcePane", {
            /**
             * Gets the source pane that triggers the drag start.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragStartEventArgsDetail.prototype, "panes", {
            /**
             * Gets the panes that are about to get dragged.
            */
            get: function () {
                if (this._panes === null) {
                    var coll = new IgrContentPaneCollection();
                    var innerColl = this.i.a;
                    if (!innerColl) {
                        innerColl = new ContentPaneCollection();
                    }
                    this._panes = coll._fromInner(innerColl);
                    this.i.a = innerColl;
                }
                return this._panes;
            },
            set: function (v) {
                if (this._panes !== null) {
                    this._panes._setSyncTarget(null);
                    this._panes = null;
                }
                var coll = new IgrContentPaneCollection();
                this._panes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(ContentPane.$type);
                var innerColl = this.i.a;
                if (!innerColl) {
                    innerColl = new ContentPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._panes._setSyncTarget(syncColl);
                this.i.a = innerColl;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragStartEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.sourcePane && this.sourcePane.name && this.sourcePane.name == name) {
                return this.sourcePane;
            }
            if (this.panes != null && this.panes.findByName && this.panes.findByName(name)) {
                return this.panes.findByName(name);
            }
            return null;
        };
        IgrPaneDragStartEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPaneDragStartEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneHeaderElement = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneHeaderElement, _super);
        function PaneHeaderElement() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.d = null;
            return _this;
        }
        Object.defineProperty(PaneHeaderElement.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneHeaderElement.prototype, "nativeElement", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
                this.b.o = this.d;
            },
            enumerable: false,
            configurable: true
        });
        PaneHeaderElement.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PaneHeaderElement.prototype, "a", {
            get: function () {
                var ret_ = this.c.m("dragService", function (a) { return new DragService(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("dragService", value_);
            },
            enumerable: false,
            configurable: true
        });
        PaneHeaderElement.$t = igniteuiReactCore.markType(PaneHeaderElement, 'PaneHeaderElement', BaseElement.$);
        return PaneHeaderElement;
    }(BaseElement));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneHeaderConnectionEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneHeaderConnectionEventArgsDetail, _super);
        function PaneHeaderConnectionEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(PaneHeaderConnectionEventArgsDetail.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneHeaderConnectionEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        PaneHeaderConnectionEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PaneHeaderConnectionEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.d.m("pane", function (a) { return new ContentPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("pane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaneHeaderConnectionEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("element", function (a) { return new PaneHeaderElement(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("element", value_);
            },
            enumerable: false,
            configurable: true
        });
        PaneHeaderConnectionEventArgsDetail.$t = igniteuiReactCore.markType(PaneHeaderConnectionEventArgsDetail, 'PaneHeaderConnectionEventArgsDetail');
        return PaneHeaderConnectionEventArgsDetail;
    }(igniteuiReactCore.Base));

    /**
     * Describes a pane header element.
    */
    var IgrPaneHeaderElement = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneHeaderElement() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneHeaderElement.prototype.createImplementation = function () {
            return new PaneHeaderElement();
        };
        Object.defineProperty(IgrPaneHeaderElement.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneHeaderElement.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneHeaderElement.prototype.onImplementationCreated = function () {
        };
        IgrPaneHeaderElement.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneHeaderElement.prototype, "dragService", {
            /**
             * Gets/sets the drag service.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDragService();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneHeaderElement.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.dragService && this.dragService.name && this.dragService.name == name) {
                return this.dragService;
            }
            return null;
        };
        IgrPaneHeaderElement.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPaneHeaderElement;
    }());

    var IgrPaneHeaderConnectionEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneHeaderConnectionEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneHeaderConnectionEventArgsDetail.prototype.createImplementation = function () {
            return new PaneHeaderConnectionEventArgsDetail();
        };
        Object.defineProperty(IgrPaneHeaderConnectionEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneHeaderConnectionEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneHeaderConnectionEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrPaneHeaderConnectionEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneHeaderConnectionEventArgsDetail.prototype, "pane", {
            /**
             * The pane whose header is being connected/disconnected.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrContentPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneHeaderConnectionEventArgsDetail.prototype, "element", {
            /**
             * The header element that is being connected/disconnected.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneHeaderElement();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneHeaderConnectionEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.pane && this.pane.name && this.pane.name == name) {
                return this.pane;
            }
            if (this.element && this.element.name && this.element.name == name) {
                return this.element;
            }
            return null;
        };
        IgrPaneHeaderConnectionEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPaneHeaderConnectionEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PanePinnedEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PanePinnedEventArgsDetail, _super);
        function PanePinnedEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.g = null;
            return _this;
        }
        Object.defineProperty(PanePinnedEventArgsDetail.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PanePinnedEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                this.g = a;
                this.d.o = this.g;
            },
            enumerable: false,
            configurable: true
        });
        PanePinnedEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(PanePinnedEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.e.m("sourcePane", function (a) { return new ContentPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("sourcePane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PanePinnedEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.e.n("panes");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("panes", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PanePinnedEventArgsDetail.prototype, "f", {
            get: function () {
                var ret_ = this.e.n("newValue");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("newValue", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PanePinnedEventArgsDetail.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("location");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(UnpinnedLocation_$type, igniteuiReactCore.EnumUtil.getEnumValue(UnpinnedLocation_$type, this.e.f(UnpinnedLocation_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(UnpinnedLocation_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(UnpinnedLocation_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("location", value_);
            },
            enumerable: false,
            configurable: true
        });
        PanePinnedEventArgsDetail.$t = igniteuiReactCore.markType(PanePinnedEventArgsDetail, 'PanePinnedEventArgsDetail');
        return PanePinnedEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrPanePinnedEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrPanePinnedEventArgsDetail() {
            this.mounted = false;
            this._panes = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPanePinnedEventArgsDetail.prototype.createImplementation = function () {
            return new PanePinnedEventArgsDetail();
        };
        Object.defineProperty(IgrPanePinnedEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPanePinnedEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPanePinnedEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrPanePinnedEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPanePinnedEventArgsDetail.prototype, "sourcePane", {
            /**
             * Gets the source pane that triggers the pinned state change.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrContentPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPanePinnedEventArgsDetail.prototype, "panes", {
            /**
             * Gets/sets the panes that are about to get pinned/unpinned.
            */
            get: function () {
                if (this._panes === null) {
                    var coll = new IgrContentPaneCollection();
                    var innerColl = this.i.b;
                    if (!innerColl) {
                        innerColl = new ContentPaneCollection();
                    }
                    this._panes = coll._fromInner(innerColl);
                    this.i.b = innerColl;
                }
                return this._panes;
            },
            set: function (v) {
                if (this._panes !== null) {
                    this._panes._setSyncTarget(null);
                    this._panes = null;
                }
                var coll = new IgrContentPaneCollection();
                this._panes = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(ContentPane.$type);
                var innerColl = this.i.b;
                if (!innerColl) {
                    innerColl = new ContentPaneCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._panes._setSyncTarget(syncColl);
                this.i.b = innerColl;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPanePinnedEventArgsDetail.prototype, "newValue", {
            /**
             * Gets the new pinned value.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPanePinnedEventArgsDetail.prototype, "location", {
            /**
             * Gets the unpinned location.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(UnpinnedLocation_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        IgrPanePinnedEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.sourcePane && this.sourcePane.name && this.sourcePane.name == name) {
                return this.sourcePane;
            }
            if (this.panes != null && this.panes.findByName && this.panes.findByName(name)) {
                return this.panes.findByName(name);
            }
            return null;
        };
        IgrPanePinnedEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrPanePinnedEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TabHeaderConnectionEventArgsDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TabHeaderConnectionEventArgsDetail, _super);
        function TabHeaderConnectionEventArgsDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(TabHeaderConnectionEventArgsDetail.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabHeaderConnectionEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.c.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        TabHeaderConnectionEventArgsDetail.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(TabHeaderConnectionEventArgsDetail.prototype, "a", {
            get: function () {
                var ret_ = this.d.m("pane", function (a) { return new ContentPane(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("pane", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabHeaderConnectionEventArgsDetail.prototype, "b", {
            get: function () {
                var ret_ = this.d.m("element", function (a) { return new TabHeaderElement(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("element", value_);
            },
            enumerable: false,
            configurable: true
        });
        TabHeaderConnectionEventArgsDetail.$t = igniteuiReactCore.markType(TabHeaderConnectionEventArgsDetail, 'TabHeaderConnectionEventArgsDetail');
        return TabHeaderConnectionEventArgsDetail;
    }(igniteuiReactCore.Base));

    var IgrTabHeaderConnectionEventArgsDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabHeaderConnectionEventArgsDetail() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTabHeaderConnectionEventArgsDetail.prototype.createImplementation = function () {
            return new TabHeaderConnectionEventArgsDetail();
        };
        Object.defineProperty(IgrTabHeaderConnectionEventArgsDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabHeaderConnectionEventArgsDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabHeaderConnectionEventArgsDetail.prototype.onImplementationCreated = function () {
        };
        IgrTabHeaderConnectionEventArgsDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTabHeaderConnectionEventArgsDetail.prototype, "pane", {
            /**
             * The pane whose tab header is being connected/disconnected.
            */
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrContentPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabHeaderConnectionEventArgsDetail.prototype, "element", {
            /**
             * The tab header element that is being connected/disconnected.
            */
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrTabHeaderElement();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabHeaderConnectionEventArgsDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.pane && this.pane.name && this.pane.name == name) {
                return this.pane;
            }
            if (this.element && this.element.name && this.element.name == name) {
                return this.element;
            }
            return null;
        };
        IgrTabHeaderConnectionEventArgsDetail.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrTabHeaderConnectionEventArgsDetail;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeSelectionChange = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeSelectionChange, _super);
        function TreeSelectionChange() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TreeSelectionChange.$t = igniteuiReactCore.markType(TreeSelectionChange, 'TreeSelectionChange');
        return TreeSelectionChange;
    }(igniteuiReactCore.Base));

    var IgrTreeSelectionChange = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeSelectionChange() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTreeSelectionChange.prototype.createImplementation = function () {
            return new TreeSelectionChange();
        };
        Object.defineProperty(IgrTreeSelectionChange.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeSelectionChange.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeSelectionChange.prototype.onImplementationCreated = function () {
        };
        IgrTreeSelectionChange.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        IgrTreeSelectionChange.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrTreeSelectionChange;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ValidatorHandler = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ValidatorHandler, _super);
        function ValidatorHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ValidatorHandler.$t = igniteuiReactCore.markType(ValidatorHandler, 'ValidatorHandler');
        return ValidatorHandler;
    }(igniteuiReactCore.Base));

    var IgrValidatorHandler = /** @class */ /*@__PURE__*/ (function () {
        function IgrValidatorHandler() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrValidatorHandler.prototype.createImplementation = function () {
            return new ValidatorHandler();
        };
        Object.defineProperty(IgrValidatorHandler.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrValidatorHandler.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrValidatorHandler.prototype.onImplementationCreated = function () {
        };
        IgrValidatorHandler.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        IgrValidatorHandler.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrValidatorHandler;
    }());

    var IgrTreeItemCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrTreeItemCollection, _super);
        function IgrTreeItemCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrTreeItem.$type) {
                IgrTreeItem.$type = igniteuiReactCore.markType(IgrTreeItem, "IgrTreeItem");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrTreeItemCollection.prototype._createInnerColl = function () {
            if (!IgrTreeItem.$type) {
                IgrTreeItem.$type = igniteuiReactCore.markType(IgrTreeItem, "IgrTreeItem");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrTreeItem.$type, TreeItem.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrTreeItem._createFromInternal(int);
                    if (ext) {
                        if (!int.$type && ext._implementation.setNativeElement) {
                            ext._implementation.setNativeElement(int);
                        }
                        else {
                            ext._implementation = int;
                        }
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrTreeItemCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeItemCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeItemCollection, _super);
        function TreeItemCollection() {
            return _super.call(this, TreeItem.$, 0) || this;
        }
        TreeItemCollection.$t = igniteuiReactCore.markType(TreeItemCollection, 'TreeItemCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(TreeItem.$));
        return TreeItemCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    var IgrDropdownItemCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDropdownItemCollection, _super);
        function IgrDropdownItemCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrDropdownItem.$type) {
                IgrDropdownItem.$type = igniteuiReactCore.markType(IgrDropdownItem, "IgrDropdownItem");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrDropdownItemCollection.prototype._createInnerColl = function () {
            if (!IgrDropdownItem.$type) {
                IgrDropdownItem.$type = igniteuiReactCore.markType(IgrDropdownItem, "IgrDropdownItem");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrDropdownItem.$type, DropdownItem.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrDropdownItem._createFromInternal(int);
                    if (ext) {
                        if (!int.$type && ext._implementation.setNativeElement) {
                            ext._implementation.setNativeElement(int);
                        }
                        else {
                            ext._implementation = int;
                        }
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrDropdownItemCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DropdownItemCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DropdownItemCollection, _super);
        function DropdownItemCollection() {
            return _super.call(this, DropdownItem.$, 0) || this;
        }
        DropdownItemCollection.$t = igniteuiReactCore.markType(DropdownItemCollection, 'DropdownItemCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(DropdownItem.$));
        return DropdownItemCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeSelectionOptionsEventDetail = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeSelectionOptionsEventDetail, _super);
        function TreeSelectionOptionsEventDetail() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        TreeSelectionOptionsEventDetail.$t = igniteuiReactCore.markType(TreeSelectionOptionsEventDetail, 'TreeSelectionOptionsEventDetail');
        return TreeSelectionOptionsEventDetail;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TreeSelectionOptionsEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TreeSelectionOptionsEventArgs, _super);
        function TreeSelectionOptionsEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        TreeSelectionOptionsEventArgs.a = function (a) {
            var b = (a.newSelection);
            var c = new TreeItemCollection();
            for (var e = 0; e < b.length; e++) {
                var d = b[e];
                var f = new TreeItem();
                f.setNativeElement(d);
                c.add(f);
            }
            var g = ((function () {
                var $ret = new TreeSelectionOptionsEventArgs();
                $ret.b = new TreeSelectionOptionsEventDetail();
                return $ret;
            })());
            g.b.a = c;
            return g;
        };
        TreeSelectionOptionsEventArgs.$t = igniteuiReactCore.markType(TreeSelectionOptionsEventArgs, 'TreeSelectionOptionsEventArgs');
        return TreeSelectionOptionsEventArgs;
    }(igniteuiReactCore.Base));

    var IgrTreeSelectionOptionsEventDetail = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeSelectionOptionsEventDetail() {
            this.mounted = false;
            this._newSelection = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTreeSelectionOptionsEventDetail.prototype.createImplementation = function () {
            return new TreeSelectionOptionsEventDetail();
        };
        Object.defineProperty(IgrTreeSelectionOptionsEventDetail.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeSelectionOptionsEventDetail.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeSelectionOptionsEventDetail.prototype.onImplementationCreated = function () {
        };
        IgrTreeSelectionOptionsEventDetail.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTreeSelectionOptionsEventDetail.prototype, "newSelection", {
            get: function () {
                if (this._newSelection === null) {
                    var coll = new IgrTreeItemCollection();
                    var innerColl = this.i.a;
                    if (!innerColl) {
                        innerColl = new TreeItemCollection();
                    }
                    this._newSelection = coll._fromInner(innerColl);
                    this.i.a = innerColl;
                }
                return this._newSelection;
            },
            set: function (v) {
                if (this._newSelection !== null) {
                    this._newSelection._setSyncTarget(null);
                    this._newSelection = null;
                }
                var coll = new IgrTreeItemCollection();
                this._newSelection = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(TreeItem.$type);
                var innerColl = this.i.a;
                if (!innerColl) {
                    innerColl = new TreeItemCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._newSelection._setSyncTarget(syncColl);
                this.i.a = innerColl;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeSelectionOptionsEventDetail.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            if (this.newSelection != null && this.newSelection.findByName && this.newSelection.findByName(name)) {
                return this.newSelection.findByName(name);
            }
            return null;
        };
        return IgrTreeSelectionOptionsEventDetail;
    }());

    var IgrTreeSelectionOptionsEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTreeSelectionOptionsEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTreeSelectionOptionsEventArgs.prototype.createImplementation = function () {
            return new TreeSelectionOptionsEventArgs();
        };
        Object.defineProperty(IgrTreeSelectionOptionsEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTreeSelectionOptionsEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTreeSelectionOptionsEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTreeSelectionOptionsEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTreeSelectionOptionsEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrTreeSelectionOptionsEventDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTreeSelectionOptionsEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var PaneDragActionType = /*@__PURE__*/ (function (PaneDragActionType) {
        PaneDragActionType[PaneDragActionType["FloatPane"] = 0] = "FloatPane";
        PaneDragActionType[PaneDragActionType["MoveFloatingPane"] = 1] = "MoveFloatingPane";
        PaneDragActionType[PaneDragActionType["DockPane"] = 2] = "DockPane";
        PaneDragActionType[PaneDragActionType["MoveTab"] = 3] = "MoveTab";
        return PaneDragActionType;
    })({});
    /**
     * @hidden
     */
    var PaneDragActionType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('PaneDragActionType', 'FloatPane,0|MoveFloatingPane,1|DockPane,2|MoveTab,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DockingIndicatorPosition = /*@__PURE__*/ (function (DockingIndicatorPosition) {
        DockingIndicatorPosition[DockingIndicatorPosition["Left"] = 0] = "Left";
        DockingIndicatorPosition[DockingIndicatorPosition["OuterLeft"] = 1] = "OuterLeft";
        DockingIndicatorPosition[DockingIndicatorPosition["Right"] = 2] = "Right";
        DockingIndicatorPosition[DockingIndicatorPosition["OuterRight"] = 3] = "OuterRight";
        DockingIndicatorPosition[DockingIndicatorPosition["Top"] = 4] = "Top";
        DockingIndicatorPosition[DockingIndicatorPosition["OuterTop"] = 5] = "OuterTop";
        DockingIndicatorPosition[DockingIndicatorPosition["Bottom"] = 6] = "Bottom";
        DockingIndicatorPosition[DockingIndicatorPosition["OuterBottom"] = 7] = "OuterBottom";
        DockingIndicatorPosition[DockingIndicatorPosition["Center"] = 8] = "Center";
        return DockingIndicatorPosition;
    })({});
    /**
     * @hidden
     */
    var DockingIndicatorPosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DockingIndicatorPosition', 'Left:left,0|OuterLeft:outerLeft,1|Right:right,2|OuterRight:outerRight,3|Top:top,4|OuterTop:outerTop,5|Bottom:bottom,6|OuterBottom:outerBottom,7|Center:center,8');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DockingIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockingIndicator, _super);
        function DockingIndicator() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.e = null;
            return _this;
        }
        Object.defineProperty(DockingIndicator.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockingIndicator.prototype, "nativeElement", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
                this.b.o = this.e;
            },
            enumerable: false,
            configurable: true
        });
        DockingIndicator.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(DockingIndicator.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("position");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(DockingIndicatorPosition_$type, igniteuiReactCore.EnumUtil.getEnumValue(DockingIndicatorPosition_$type, this.c.f(DockingIndicatorPosition_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(DockingIndicatorPosition_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(DockingIndicatorPosition_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("position", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockingIndicator.prototype, "d", {
            get: function () {
                var ret_ = this.c.n("isRoot");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("isRoot", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockingIndicator.prototype, "g", {
            get: function () {
                var ret_ = this.c.n("direction");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("direction", value_);
            },
            enumerable: false,
            configurable: true
        });
        DockingIndicator.$t = igniteuiReactCore.markType(DockingIndicator, 'DockingIndicator');
        return DockingIndicator;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DockPaneAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(DockPaneAction, _super);
        function DockPaneAction() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(DockPaneAction.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockPaneAction.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.d.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        DockPaneAction.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(DockPaneAction.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, this.e.f(PaneDragActionType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockPaneAction.prototype, "a", {
            get: function () {
                var ret_ = this.e.m("dockingIndicator", function (a) { return new DockingIndicator(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("dockingIndicator", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DockPaneAction.prototype, "b", {
            get: function () {
                var ret_ = this.e.m("targetPane", function (a) { return DockManagerPane.createFromNative(a); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("targetPane", value_);
            },
            enumerable: false,
            configurable: true
        });
        DockPaneAction.$t = igniteuiReactCore.markType(DockPaneAction, 'DockPaneAction', PaneDragAction.$);
        return DockPaneAction;
    }(PaneDragAction));

    var IgrDockingIndicator = /** @class */ /*@__PURE__*/ (function () {
        function IgrDockingIndicator() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrDockingIndicator.prototype.createImplementation = function () {
            return new DockingIndicator();
        };
        Object.defineProperty(IgrDockingIndicator.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockingIndicator.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockingIndicator.prototype.onImplementationCreated = function () {
        };
        IgrDockingIndicator.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrDockingIndicator.prototype, "position", {
            /**
             * Gets the position of the docking indicator.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(DockingIndicatorPosition_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockingIndicator.prototype, "isRoot", {
            /**
             * Gets a value indicating whether the docking indicator is a root one.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockingIndicator.prototype, "direction", {
            /**
             * Gets a value indicating the direction of the docking indicator.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockingIndicator.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        IgrDockingIndicator.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDockingIndicator;
    }());

    var IgrDockPaneAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrDockPaneAction, _super);
        function IgrDockPaneAction(props) {
            return _super.call(this, props) || this;
        }
        IgrDockPaneAction.prototype.createImplementation = function () {
            return new DockPaneAction();
        };
        Object.defineProperty(IgrDockPaneAction.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockPaneAction.prototype, "type", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(PaneDragActionType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockPaneAction.prototype, "dockingIndicator", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockingIndicator();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrDockPaneAction.prototype, "targetPane", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = IgrDockManagerPane._createFromInternal(r);
                    if (e) {
                        e._implementation = r;
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrDockPaneAction.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.dockingIndicator && this.dockingIndicator.name && this.dockingIndicator.name == name) {
                return this.dockingIndicator;
            }
            if (this.targetPane && this.targetPane.name && this.targetPane.name == name) {
                return this.targetPane;
            }
            return null;
        };
        IgrDockPaneAction.prototype._styling = function (container, component, parent) {
            _super.prototype._styling.call(this, container, component, parent);
            this._inStyling = true;
            if (this.targetPane && this.targetPane._styling) {
                this.targetPane._styling(container, component, this);
            }
            this._inStyling = false;
        };
        IgrDockPaneAction.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrDockPaneAction;
    }(IgrPaneDragAction));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FloatPaneAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FloatPaneAction, _super);
        function FloatPaneAction() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = new WCNativeHelper();
            _this.g = null;
            return _this;
        }
        Object.defineProperty(FloatPaneAction.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatPaneAction.prototype, "nativeElement", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                this.g = a;
                this.c.o = this.g;
            },
            enumerable: false,
            configurable: true
        });
        FloatPaneAction.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(FloatPaneAction.prototype, "b", {
            get: function () {
                var ret_ = this.d.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, this.d.f(PaneDragActionType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.d.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatPaneAction.prototype, "a", {
            get: function () {
                var ret_ = this.d.m("location", function (a) { return new DockManagerPoint(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("location", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatPaneAction.prototype, "f", {
            get: function () {
                var ret_ = this.d.n("width");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("width", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FloatPaneAction.prototype, "e", {
            get: function () {
                var ret_ = this.d.n("height");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.d.w("height", value_);
            },
            enumerable: false,
            configurable: true
        });
        FloatPaneAction.$t = igniteuiReactCore.markType(FloatPaneAction, 'FloatPaneAction', PaneDragAction.$);
        return FloatPaneAction;
    }(PaneDragAction));

    var IgrFloatPaneAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrFloatPaneAction, _super);
        function IgrFloatPaneAction(props) {
            return _super.call(this, props) || this;
        }
        IgrFloatPaneAction.prototype.createImplementation = function () {
            return new FloatPaneAction();
        };
        Object.defineProperty(IgrFloatPaneAction.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatPaneAction.prototype, "type", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(PaneDragActionType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatPaneAction.prototype, "location", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerPoint();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatPaneAction.prototype, "width", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatPaneAction.prototype, "height", {
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrFloatPaneAction.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.location && this.location.name && this.location.name == name) {
                return this.location;
            }
            return null;
        };
        IgrFloatPaneAction.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrFloatPaneAction;
    }(IgrPaneDragAction));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MoveFloatingPaneAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(MoveFloatingPaneAction, _super);
        function MoveFloatingPaneAction() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(MoveFloatingPaneAction.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MoveFloatingPaneAction.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.d.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        MoveFloatingPaneAction.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(MoveFloatingPaneAction.prototype, "c", {
            get: function () {
                var ret_ = this.e.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, this.e.f(PaneDragActionType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.e.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MoveFloatingPaneAction.prototype, "b", {
            get: function () {
                var ret_ = this.e.m("oldLocation", function (a) { return new DockManagerPoint(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("oldLocation", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MoveFloatingPaneAction.prototype, "a", {
            get: function () {
                var ret_ = this.e.m("newLocation", function (a) { return new DockManagerPoint(); });
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.e.w("newLocation", value_);
            },
            enumerable: false,
            configurable: true
        });
        MoveFloatingPaneAction.$t = igniteuiReactCore.markType(MoveFloatingPaneAction, 'MoveFloatingPaneAction', PaneDragAction.$);
        return MoveFloatingPaneAction;
    }(PaneDragAction));

    var IgrMoveFloatingPaneAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrMoveFloatingPaneAction, _super);
        function IgrMoveFloatingPaneAction(props) {
            return _super.call(this, props) || this;
        }
        IgrMoveFloatingPaneAction.prototype.createImplementation = function () {
            return new MoveFloatingPaneAction();
        };
        Object.defineProperty(IgrMoveFloatingPaneAction.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMoveFloatingPaneAction.prototype, "type", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(PaneDragActionType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMoveFloatingPaneAction.prototype, "oldLocation", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerPoint();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMoveFloatingPaneAction.prototype, "newLocation", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrDockManagerPoint();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        IgrMoveFloatingPaneAction.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.oldLocation && this.oldLocation.name && this.oldLocation.name == name) {
                return this.oldLocation;
            }
            if (this.newLocation && this.newLocation.name && this.newLocation.name == name) {
                return this.newLocation;
            }
            return null;
        };
        IgrMoveFloatingPaneAction.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrMoveFloatingPaneAction;
    }(IgrPaneDragAction));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MoveTabAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(MoveTabAction, _super);
        function MoveTabAction() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = new WCNativeHelper();
            _this.f = null;
            return _this;
        }
        Object.defineProperty(MoveTabAction.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MoveTabAction.prototype, "nativeElement", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
                this.b.o = this.f;
            },
            enumerable: false,
            configurable: true
        });
        MoveTabAction.prototype.setNativeElement = function (a) {
            this.nativeElement = a;
        };
        Object.defineProperty(MoveTabAction.prototype, "a", {
            get: function () {
                var ret_ = this.c.n("type");
                if ((ret_ === undefined && this.___rawMode)) {
                    return undefined;
                }
                ret_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, this.c.f(PaneDragActionType_$type, ret_)));
                return igniteuiReactCore.EnumUtil.getEnumValue(PaneDragActionType_$type, ret_);
            },
            set: function (a) {
                var value_ = igniteuiReactCore.enumGetBox(PaneDragActionType_$type, a);
                value_ = WCNativeHelper.camel(value_.toString());
                this.c.w("type", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MoveTabAction.prototype, "e", {
            get: function () {
                var ret_ = this.c.n("oldIndex");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("oldIndex", value_);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MoveTabAction.prototype, "d", {
            get: function () {
                var ret_ = this.c.n("newIndex");
                return ret_;
            },
            set: function (a) {
                var value_ = a;
                this.c.w("newIndex", value_);
            },
            enumerable: false,
            configurable: true
        });
        MoveTabAction.$t = igniteuiReactCore.markType(MoveTabAction, 'MoveTabAction', PaneDragAction.$);
        return MoveTabAction;
    }(PaneDragAction));

    var IgrMoveTabAction = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(IgrMoveTabAction, _super);
        function IgrMoveTabAction(props) {
            return _super.call(this, props) || this;
        }
        IgrMoveTabAction.prototype.createImplementation = function () {
            return new MoveTabAction();
        };
        Object.defineProperty(IgrMoveTabAction.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMoveTabAction.prototype, "type", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(PaneDragActionType_$type, v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMoveTabAction.prototype, "oldIndex", {
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = +v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrMoveTabAction.prototype, "newIndex", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = +v;
            },
            enumerable: false,
            configurable: true
        });
        IgrMoveTabAction.prototype.setNativeElement = function (element) {
            this.i.setNativeElement(element);
        };
        return IgrMoveTabAction;
    }(IgrPaneDragAction));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDockManagerPointModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDockManagerPointModule() {
        }
        IgrDockManagerPointModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrDockManagerPoint", IgrDockManagerPoint);
            igniteuiReactCore.TypeRegistrar.register("DockManagerPoint", DockManagerPoint.$type);
        };
        return IgrDockManagerPointModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrPaneHeaderElementModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneHeaderElementModule() {
        }
        IgrPaneHeaderElementModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrPaneHeaderElement", IgrPaneHeaderElement);
            igniteuiReactCore.TypeRegistrar.register("PaneHeaderElement", PaneHeaderElement.$type);
        };
        return IgrPaneHeaderElementModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDragServiceModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDragServiceModule() {
        }
        IgrDragServiceModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrDragService", IgrDragService);
            igniteuiReactCore.TypeRegistrar.register("DragService", DragService.$type);
        };
        return IgrDragServiceModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ActivePaneEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(ActivePaneEventArgs, _super);
        function ActivePaneEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        ActivePaneEventArgs.a = function (a) {
            return ((function () {
                var $ret = new ActivePaneEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        ActivePaneEventArgs.$t = igniteuiReactCore.markType(ActivePaneEventArgs, 'ActivePaneEventArgs');
        return ActivePaneEventArgs;
    }(igniteuiReactCore.Base));

    var IgrActivePaneEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrActivePaneEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrActivePaneEventArgs.prototype.createImplementation = function () {
            return new ActivePaneEventArgs();
        };
        Object.defineProperty(IgrActivePaneEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrActivePaneEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrActivePaneEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrActivePaneEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrActivePaneEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrActivePaneEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrActivePaneEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FloatingPaneResizeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FloatingPaneResizeEventArgs, _super);
        function FloatingPaneResizeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        FloatingPaneResizeEventArgs.a = function (a) {
            return ((function () {
                var $ret = new FloatingPaneResizeEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        FloatingPaneResizeEventArgs.$t = igniteuiReactCore.markType(FloatingPaneResizeEventArgs, 'FloatingPaneResizeEventArgs');
        return FloatingPaneResizeEventArgs;
    }(igniteuiReactCore.Base));

    var IgrFloatingPaneResizeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrFloatingPaneResizeEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrFloatingPaneResizeEventArgs.prototype.createImplementation = function () {
            return new FloatingPaneResizeEventArgs();
        };
        Object.defineProperty(IgrFloatingPaneResizeEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrFloatingPaneResizeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrFloatingPaneResizeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrFloatingPaneResizeEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrFloatingPaneResizeEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrFloatingPaneResizeEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FloatingPaneResizeMoveEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FloatingPaneResizeMoveEventArgs, _super);
        function FloatingPaneResizeMoveEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        FloatingPaneResizeMoveEventArgs.a = function (a) {
            return ((function () {
                var $ret = new FloatingPaneResizeMoveEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        FloatingPaneResizeMoveEventArgs.$t = igniteuiReactCore.markType(FloatingPaneResizeMoveEventArgs, 'FloatingPaneResizeMoveEventArgs');
        return FloatingPaneResizeMoveEventArgs;
    }(igniteuiReactCore.Base));

    var IgrFloatingPaneResizeMoveEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrFloatingPaneResizeMoveEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrFloatingPaneResizeMoveEventArgs.prototype.createImplementation = function () {
            return new FloatingPaneResizeMoveEventArgs();
        };
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrFloatingPaneResizeMoveEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrFloatingPaneResizeMoveEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrFloatingPaneResizeMoveEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrFloatingPaneResizeMoveEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrFloatingPaneResizeMoveEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneCloseEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneCloseEventArgs, _super);
        function PaneCloseEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        PaneCloseEventArgs.a = function (a) {
            return ((function () {
                var $ret = new PaneCloseEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        PaneCloseEventArgs.$t = igniteuiReactCore.markType(PaneCloseEventArgs, 'PaneCloseEventArgs');
        return PaneCloseEventArgs;
    }(igniteuiReactCore.Base));

    var IgrPaneCloseEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneCloseEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneCloseEventArgs.prototype.createImplementation = function () {
            return new PaneCloseEventArgs();
        };
        Object.defineProperty(IgrPaneCloseEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneCloseEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneCloseEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrPaneCloseEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneCloseEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneCloseEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrPaneCloseEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneDragEndEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneDragEndEventArgs, _super);
        function PaneDragEndEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        PaneDragEndEventArgs.a = function (a) {
            return ((function () {
                var $ret = new PaneDragEndEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        PaneDragEndEventArgs.$t = igniteuiReactCore.markType(PaneDragEndEventArgs, 'PaneDragEndEventArgs');
        return PaneDragEndEventArgs;
    }(igniteuiReactCore.Base));

    var IgrPaneDragEndEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneDragEndEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneDragEndEventArgs.prototype.createImplementation = function () {
            return new PaneDragEndEventArgs();
        };
        Object.defineProperty(IgrPaneDragEndEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragEndEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragEndEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrPaneDragEndEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneDragEndEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneDragEndEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrPaneDragEndEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneDragOverEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneDragOverEventArgs, _super);
        function PaneDragOverEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        PaneDragOverEventArgs.a = function (a) {
            return ((function () {
                var $ret = new PaneDragOverEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        PaneDragOverEventArgs.$t = igniteuiReactCore.markType(PaneDragOverEventArgs, 'PaneDragOverEventArgs');
        return PaneDragOverEventArgs;
    }(igniteuiReactCore.Base));

    var IgrPaneDragOverEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneDragOverEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneDragOverEventArgs.prototype.createImplementation = function () {
            return new PaneDragOverEventArgs();
        };
        Object.defineProperty(IgrPaneDragOverEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragOverEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragOverEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrPaneDragOverEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneDragOverEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneDragOverEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrPaneDragOverEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneDragStartEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneDragStartEventArgs, _super);
        function PaneDragStartEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        PaneDragStartEventArgs.a = function (a) {
            return ((function () {
                var $ret = new PaneDragStartEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        PaneDragStartEventArgs.$t = igniteuiReactCore.markType(PaneDragStartEventArgs, 'PaneDragStartEventArgs');
        return PaneDragStartEventArgs;
    }(igniteuiReactCore.Base));

    var IgrPaneDragStartEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneDragStartEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneDragStartEventArgs.prototype.createImplementation = function () {
            return new PaneDragStartEventArgs();
        };
        Object.defineProperty(IgrPaneDragStartEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneDragStartEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneDragStartEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrPaneDragStartEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneDragStartEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneDragStartEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrPaneDragStartEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PaneHeaderConnectionEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PaneHeaderConnectionEventArgs, _super);
        function PaneHeaderConnectionEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        PaneHeaderConnectionEventArgs.a = function (a) {
            return ((function () {
                var $ret = new PaneHeaderConnectionEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        PaneHeaderConnectionEventArgs.$t = igniteuiReactCore.markType(PaneHeaderConnectionEventArgs, 'PaneHeaderConnectionEventArgs');
        return PaneHeaderConnectionEventArgs;
    }(igniteuiReactCore.Base));

    var IgrPaneHeaderConnectionEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrPaneHeaderConnectionEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPaneHeaderConnectionEventArgs.prototype.createImplementation = function () {
            return new PaneHeaderConnectionEventArgs();
        };
        Object.defineProperty(IgrPaneHeaderConnectionEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPaneHeaderConnectionEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPaneHeaderConnectionEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrPaneHeaderConnectionEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPaneHeaderConnectionEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPaneHeaderConnectionEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrPaneHeaderConnectionEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PanePinnedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(PanePinnedEventArgs, _super);
        function PanePinnedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        PanePinnedEventArgs.a = function (a) {
            return ((function () {
                var $ret = new PanePinnedEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        PanePinnedEventArgs.$t = igniteuiReactCore.markType(PanePinnedEventArgs, 'PanePinnedEventArgs');
        return PanePinnedEventArgs;
    }(igniteuiReactCore.Base));

    var IgrPanePinnedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrPanePinnedEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrPanePinnedEventArgs.prototype.createImplementation = function () {
            return new PanePinnedEventArgs();
        };
        Object.defineProperty(IgrPanePinnedEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrPanePinnedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrPanePinnedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrPanePinnedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrPanePinnedEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrPanePinnedEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrPanePinnedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TabHeaderConnectionEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(TabHeaderConnectionEventArgs, _super);
        function TabHeaderConnectionEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            return _this;
        }
        TabHeaderConnectionEventArgs.a = function (a) {
            return ((function () {
                var $ret = new TabHeaderConnectionEventArgs();
                $ret.b = a;
                return $ret;
            })());
        };
        TabHeaderConnectionEventArgs.$t = igniteuiReactCore.markType(TabHeaderConnectionEventArgs, 'TabHeaderConnectionEventArgs');
        return TabHeaderConnectionEventArgs;
    }(igniteuiReactCore.Base));

    var IgrTabHeaderConnectionEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTabHeaderConnectionEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrTabHeaderConnectionEventArgs.prototype.createImplementation = function () {
            return new TabHeaderConnectionEventArgs();
        };
        Object.defineProperty(IgrTabHeaderConnectionEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrTabHeaderConnectionEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrTabHeaderConnectionEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTabHeaderConnectionEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrTabHeaderConnectionEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.b;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrTabHeaderConnectionEventArgsDetail();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrTabHeaderConnectionEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NumberFormatOptions_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'NumberFormatOptions', null, []);

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FormData = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FormData, _super);
        function FormData() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = null;
            return _this;
        }
        FormData.$t = igniteuiReactCore.markType(FormData, 'FormData');
        return FormData;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var DateRangeType = /*@__PURE__*/ (function (DateRangeType) {
        DateRangeType[DateRangeType["After"] = 0] = "After";
        DateRangeType[DateRangeType["Before"] = 1] = "Before";
        DateRangeType[DateRangeType["Between"] = 2] = "Between";
        DateRangeType[DateRangeType["Specific"] = 3] = "Specific";
        DateRangeType[DateRangeType["Weekdays"] = 4] = "Weekdays";
        DateRangeType[DateRangeType["Weekends"] = 5] = "Weekends";
        return DateRangeType;
    })({});
    /**
     * @hidden
     */
    var DateRangeType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DateRangeType', 'After,0|Before,1|Between,2|Specific,3|Weekdays,4|Weekends,5');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalendarDate = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CalendarDate, _super);
        function CalendarDate() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = new Date();
            _this.a = false;
            _this.c = false;
            _this.b = false;
            return _this;
        }
        CalendarDate.$t = igniteuiReactCore.markType(CalendarDate, 'CalendarDate');
        return CalendarDate;
    }(igniteuiReactCore.Base));

    var IgrCalendarDate = /** @class */ /*@__PURE__*/ (function () {
        function IgrCalendarDate() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrCalendarDate.prototype.createImplementation = function () {
            return new CalendarDate();
        };
        Object.defineProperty(IgrCalendarDate.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarDate.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarDate.prototype.onImplementationCreated = function () {
        };
        IgrCalendarDate.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrCalendarDate.prototype, "date", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarDate.prototype, "isCurrentMonth", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarDate.prototype, "isPrevMonth", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarDate.prototype, "isNextMonth", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarDate.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrCalendarDate;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalendarDateEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(CalendarDateEventArgs, _super);
        function CalendarDateEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        CalendarDateEventArgs.b = function (a) {
            return ((function () {
                var $ret = new CalendarDateEventArgs();
                $ret.a = a;
                return $ret;
            })());
        };
        CalendarDateEventArgs.$t = igniteuiReactCore.markType(CalendarDateEventArgs, 'CalendarDateEventArgs');
        return CalendarDateEventArgs;
    }(igniteuiReactCore.Base));

    var IgrCalendarDateEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrCalendarDateEventArgs() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrCalendarDateEventArgs.prototype.createImplementation = function () {
            return new CalendarDateEventArgs();
        };
        Object.defineProperty(IgrCalendarDateEventArgs.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrCalendarDateEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrCalendarDateEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrCalendarDateEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrCalendarDateEventArgs.prototype, "detail", {
            get: function () {
                var r = this.i.a;
                if (r == null) {
                    return null;
                }
                if (!r.externalObject) {
                    var e = new IgrCalendarDate();
                    if (r.$type) {
                        e._implementation = r;
                    }
                    else {
                        if (e.i.setNativeElement) {
                            e.i.setNativeElement(r);
                        }
                    }
                    r.externalObject = e;
                }
                return r.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: false,
            configurable: true
        });
        return IgrCalendarDateEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var SizableComponentSize = /*@__PURE__*/ (function (SizableComponentSize) {
        SizableComponentSize[SizableComponentSize["Large"] = 0] = "Large";
        SizableComponentSize[SizableComponentSize["Small"] = 1] = "Small";
        SizableComponentSize[SizableComponentSize["Medium"] = 2] = "Medium";
        return SizableComponentSize;
    })({});
    /**
     * @hidden
     */
    var SizableComponentSize_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SizableComponentSize', 'Large,0|Small,1|Medium,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FocusOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib.__extends(FocusOptions, _super);
        function FocusOptions() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = false;
            return _this;
        }
        FocusOptions.$t = igniteuiReactCore.markType(FocusOptions, 'FocusOptions');
        return FocusOptions;
    }(igniteuiReactCore.Base));

    var IgrFocusOptions = /** @class */ /*@__PURE__*/ (function () {
        function IgrFocusOptions() {
            this.mounted = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        }
        IgrFocusOptions.prototype.createImplementation = function () {
            return new FocusOptions();
        };
        Object.defineProperty(IgrFocusOptions.prototype, "nativeElement", {
            get: function () {
                return this._implementation.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IgrFocusOptions.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: false,
            configurable: true
        });
        IgrFocusOptions.prototype.onImplementationCreated = function () {
        };
        IgrFocusOptions.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
            if (this._initializeAdapters) {
                this._initializeAdapters();
            }
        };
        Object.defineProperty(IgrFocusOptions.prototype, "preventScroll", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureBool(v);
            },
            enumerable: false,
            configurable: true
        });
        IgrFocusOptions.prototype.findByName = function (name) {
            if (this.findEphemera) {
                if (name && name.indexOf("@@e:") == 0) {
                    return this.findEphemera(name);
                }
            }
            return null;
        };
        return IgrFocusOptions;
    }());

    Object.defineProperty(exports, 'registerIcon', {
        enumerable: true,
        get: function () {
            return igniteuiWebcomponents.registerIcon;
        }
    });
    Object.defineProperty(exports, 'registerIconFromText', {
        enumerable: true,
        get: function () {
            return igniteuiWebcomponents.registerIconFromText;
        }
    });
    Object.defineProperty(exports, 'setIconRef', {
        enumerable: true,
        get: function () {
            return igniteuiWebcomponents.setIconRef;
        }
    });
    exports.Accordion = Accordion;
    exports.ActivePaneEventArgs = ActivePaneEventArgs;
    exports.ActivePaneEventArgsDetail = ActivePaneEventArgsDetail;
    exports.ActiveStepChangedArgsDetail = ActiveStepChangedArgsDetail;
    exports.ActiveStepChangedArgsEventArgs = ActiveStepChangedArgsEventArgs;
    exports.ActiveStepChangingArgsDetail = ActiveStepChangingArgsDetail;
    exports.ActiveStepChangingArgsEventArgs = ActiveStepChangingArgsEventArgs;
    exports.Avatar = Avatar;
    exports.AvatarShape = AvatarShape;
    exports.AvatarShape_$type = AvatarShape_$type;
    exports.Badge = Badge;
    exports.BadgeShape = BadgeShape;
    exports.BadgeShape_$type = BadgeShape_$type;
    exports.Banner = Banner;
    exports.BaseAlertLike = BaseAlertLike;
    exports.BaseAlertLikePosition = BaseAlertLikePosition;
    exports.BaseAlertLikePosition_$type = BaseAlertLikePosition_$type;
    exports.BaseComboBoxLike = BaseComboBoxLike;
    exports.BaseElement = BaseElement;
    exports.BaseOptionLike = BaseOptionLike;
    exports.Button = Button;
    exports.ButtonBase = ButtonBase;
    exports.ButtonBaseTarget = ButtonBaseTarget;
    exports.ButtonBaseTarget_$type = ButtonBaseTarget_$type;
    exports.ButtonBaseType = ButtonBaseType;
    exports.ButtonBaseType_$type = ButtonBaseType_$type;
    exports.ButtonGroup = ButtonGroup;
    exports.ButtonGroupAlignment = ButtonGroupAlignment;
    exports.ButtonGroupAlignment_$type = ButtonGroupAlignment_$type;
    exports.ButtonGroupSelection = ButtonGroupSelection;
    exports.ButtonGroupSelection_$type = ButtonGroupSelection_$type;
    exports.ButtonVariant = ButtonVariant;
    exports.ButtonVariant_$type = ButtonVariant_$type;
    exports.Calendar = Calendar;
    exports.CalendarActiveView = CalendarActiveView;
    exports.CalendarActiveView_$type = CalendarActiveView_$type;
    exports.CalendarBase = CalendarBase;
    exports.CalendarBaseSelection = CalendarBaseSelection;
    exports.CalendarBaseSelection_$type = CalendarBaseSelection_$type;
    exports.CalendarDate = CalendarDate;
    exports.CalendarDateEventArgs = CalendarDateEventArgs;
    exports.CalendarFormatOptions = CalendarFormatOptions;
    exports.CalendarHeaderOrientation = CalendarHeaderOrientation;
    exports.CalendarHeaderOrientation_$type = CalendarHeaderOrientation_$type;
    exports.CalendarOrientation = CalendarOrientation;
    exports.CalendarOrientation_$type = CalendarOrientation_$type;
    exports.CalendarResourceStrings = CalendarResourceStrings;
    exports.Card = Card;
    exports.CardActions = CardActions;
    exports.CardActionsOrientation = CardActionsOrientation;
    exports.CardActionsOrientation_$type = CardActionsOrientation_$type;
    exports.CardContent = CardContent;
    exports.CardHeader = CardHeader;
    exports.CardMedia = CardMedia;
    exports.Checkbox = Checkbox;
    exports.CheckboxBase = CheckboxBase;
    exports.CheckboxBaseLabelPosition = CheckboxBaseLabelPosition;
    exports.CheckboxBaseLabelPosition_$type = CheckboxBaseLabelPosition_$type;
    exports.CheckboxChangeEventArgs = CheckboxChangeEventArgs;
    exports.CheckboxChangeEventArgsDetail = CheckboxChangeEventArgsDetail;
    exports.Chip = Chip;
    exports.CircularGradient = CircularGradient;
    exports.CircularProgress = CircularProgress;
    exports.Combo = Combo;
    exports.ComboChangeEventArgs = ComboChangeEventArgs;
    exports.ComboChangeEventArgsDetail = ComboChangeEventArgsDetail;
    exports.ComboChangeType = ComboChangeType;
    exports.ComboChangeType_$type = ComboChangeType_$type;
    exports.ComponentBoolValueChangedEventArgs = ComponentBoolValueChangedEventArgs;
    exports.ComponentDataValueChangedEventArgs = ComponentDataValueChangedEventArgs;
    exports.ComponentDateValueChangedEventArgs = ComponentDateValueChangedEventArgs;
    exports.ComponentValueChangedEventArgs = ComponentValueChangedEventArgs;
    exports.ContentPane = ContentPane;
    exports.ContentPaneCollection = ContentPaneCollection;
    exports.DatePart = DatePart;
    exports.DatePartDeltas = DatePartDeltas;
    exports.DatePart_$type = DatePart_$type;
    exports.DatePicker = DatePicker;
    exports.DatePickerHeaderOrientation = DatePickerHeaderOrientation;
    exports.DatePickerHeaderOrientation_$type = DatePickerHeaderOrientation_$type;
    exports.DatePickerMode = DatePickerMode;
    exports.DatePickerMode_$type = DatePickerMode_$type;
    exports.DatePickerOrientation = DatePickerOrientation;
    exports.DatePickerOrientation_$type = DatePickerOrientation_$type;
    exports.DateRangeDescriptor = DateRangeDescriptor;
    exports.DateRangeType = DateRangeType;
    exports.DateRangeType_$type = DateRangeType_$type;
    exports.DateTimeInput = DateTimeInput;
    exports.Dialog = Dialog;
    exports.Divider = Divider;
    exports.DividerType = DividerType;
    exports.DividerType_$type = DividerType_$type;
    exports.DockManager = DockManager;
    exports.DockManagerLayout = DockManagerLayout;
    exports.DockManagerPane = DockManagerPane;
    exports.DockManagerPaneCollection = DockManagerPaneCollection;
    exports.DockManagerPaneType = DockManagerPaneType;
    exports.DockManagerPaneType_$type = DockManagerPaneType_$type;
    exports.DockManagerPoint = DockManagerPoint;
    exports.DockManagerResourceStrings = DockManagerResourceStrings;
    exports.DockManagerShowHeaderIconOnHover = DockManagerShowHeaderIconOnHover;
    exports.DockManagerShowHeaderIconOnHover_$type = DockManagerShowHeaderIconOnHover_$type;
    exports.DockManagerShowPaneHeaders = DockManagerShowPaneHeaders;
    exports.DockManagerShowPaneHeaders_$type = DockManagerShowPaneHeaders_$type;
    exports.DockPaneAction = DockPaneAction;
    exports.DockingIndicator = DockingIndicator;
    exports.DockingIndicatorPosition = DockingIndicatorPosition;
    exports.DockingIndicatorPosition_$type = DockingIndicatorPosition_$type;
    exports.DocumentHost = DocumentHost;
    exports.DragService = DragService;
    exports.Dropdown = Dropdown;
    exports.DropdownGroup = DropdownGroup;
    exports.DropdownHeader = DropdownHeader;
    exports.DropdownItem = DropdownItem;
    exports.DropdownItemCollection = DropdownItemCollection;
    exports.DropdownItemComponentEventArgs = DropdownItemComponentEventArgs;
    exports.DropdownPlacement = DropdownPlacement;
    exports.DropdownPlacement_$type = DropdownPlacement_$type;
    exports.DropdownScrollStrategy = DropdownScrollStrategy;
    exports.DropdownScrollStrategy_$type = DropdownScrollStrategy_$type;
    exports.ExpansionPanel = ExpansionPanel;
    exports.ExpansionPanelComponentEventArgs = ExpansionPanelComponentEventArgs;
    exports.ExpansionPanelIndicatorPosition = ExpansionPanelIndicatorPosition;
    exports.ExpansionPanelIndicatorPosition_$type = ExpansionPanelIndicatorPosition_$type;
    exports.FilteringOptions = FilteringOptions;
    exports.FloatPaneAction = FloatPaneAction;
    exports.FloatingPaneResizeEventArgs = FloatingPaneResizeEventArgs;
    exports.FloatingPaneResizeEventArgsDetail = FloatingPaneResizeEventArgsDetail;
    exports.FloatingPaneResizeMoveEventArgs = FloatingPaneResizeMoveEventArgs;
    exports.FloatingPaneResizeMoveEventArgsDetail = FloatingPaneResizeMoveEventArgsDetail;
    exports.FocusOptions = FocusOptions;
    exports.FormData = FormData;
    exports.GroupingDirection = GroupingDirection;
    exports.GroupingDirection_$type = GroupingDirection_$type;
    exports.HtmlMarkupHelperCollection = HtmlMarkupHelperCollection;
    exports.IDateRangeDescriptor_$type = IDateRangeDescriptor_$type;
    exports.Icon = Icon;
    exports.IconButton = IconButton;
    exports.IconButtonVariant = IconButtonVariant;
    exports.IconButtonVariant_$type = IconButtonVariant_$type;
    exports.IconMeta = IconMeta;
    exports.IgrAccordion = IgrAccordion;
    exports.IgrAccordionModule = IgrAccordionModule;
    exports.IgrActivePaneEventArgs = IgrActivePaneEventArgs;
    exports.IgrActivePaneEventArgsDetail = IgrActivePaneEventArgsDetail;
    exports.IgrActiveStepChangedArgsDetail = IgrActiveStepChangedArgsDetail;
    exports.IgrActiveStepChangedArgsEventArgs = IgrActiveStepChangedArgsEventArgs;
    exports.IgrActiveStepChangingArgsDetail = IgrActiveStepChangingArgsDetail;
    exports.IgrActiveStepChangingArgsEventArgs = IgrActiveStepChangingArgsEventArgs;
    exports.IgrAvatar = IgrAvatar;
    exports.IgrAvatarModule = IgrAvatarModule;
    exports.IgrBadge = IgrBadge;
    exports.IgrBadgeModule = IgrBadgeModule;
    exports.IgrBanner = IgrBanner;
    exports.IgrBannerModule = IgrBannerModule;
    exports.IgrBaseAlertLike = IgrBaseAlertLike;
    exports.IgrBaseAlertLikeModule = IgrBaseAlertLikeModule;
    exports.IgrBaseComboBoxLike = IgrBaseComboBoxLike;
    exports.IgrBaseComboBoxLikeModule = IgrBaseComboBoxLikeModule;
    exports.IgrBaseOptionLike = IgrBaseOptionLike;
    exports.IgrBaseOptionLikeModule = IgrBaseOptionLikeModule;
    exports.IgrButton = IgrButton;
    exports.IgrButtonBase = IgrButtonBase;
    exports.IgrButtonBaseModule = IgrButtonBaseModule;
    exports.IgrButtonGroup = IgrButtonGroup;
    exports.IgrButtonGroupModule = IgrButtonGroupModule;
    exports.IgrButtonModule = IgrButtonModule;
    exports.IgrCalendar = IgrCalendar;
    exports.IgrCalendarBase = IgrCalendarBase;
    exports.IgrCalendarBaseModule = IgrCalendarBaseModule;
    exports.IgrCalendarDate = IgrCalendarDate;
    exports.IgrCalendarDateEventArgs = IgrCalendarDateEventArgs;
    exports.IgrCalendarFormatOptions = IgrCalendarFormatOptions;
    exports.IgrCalendarModule = IgrCalendarModule;
    exports.IgrCalendarResourceStrings = IgrCalendarResourceStrings;
    exports.IgrCard = IgrCard;
    exports.IgrCardActions = IgrCardActions;
    exports.IgrCardActionsModule = IgrCardActionsModule;
    exports.IgrCardContent = IgrCardContent;
    exports.IgrCardContentModule = IgrCardContentModule;
    exports.IgrCardHeader = IgrCardHeader;
    exports.IgrCardHeaderModule = IgrCardHeaderModule;
    exports.IgrCardMedia = IgrCardMedia;
    exports.IgrCardMediaModule = IgrCardMediaModule;
    exports.IgrCardModule = IgrCardModule;
    exports.IgrCheckbox = IgrCheckbox;
    exports.IgrCheckboxBase = IgrCheckboxBase;
    exports.IgrCheckboxBaseModule = IgrCheckboxBaseModule;
    exports.IgrCheckboxChangeEventArgs = IgrCheckboxChangeEventArgs;
    exports.IgrCheckboxChangeEventArgsDetail = IgrCheckboxChangeEventArgsDetail;
    exports.IgrCheckboxModule = IgrCheckboxModule;
    exports.IgrChip = IgrChip;
    exports.IgrChipModule = IgrChipModule;
    exports.IgrCircularGradient = IgrCircularGradient;
    exports.IgrCircularGradientModule = IgrCircularGradientModule;
    exports.IgrCircularProgress = IgrCircularProgress;
    exports.IgrCircularProgressModule = IgrCircularProgressModule;
    exports.IgrCombo = IgrCombo;
    exports.IgrComboChangeEventArgs = IgrComboChangeEventArgs;
    exports.IgrComboChangeEventArgsDetail = IgrComboChangeEventArgsDetail;
    exports.IgrComboModule = IgrComboModule;
    exports.IgrComponentBoolValueChangedEventArgs = IgrComponentBoolValueChangedEventArgs;
    exports.IgrComponentDataValueChangedEventArgs = IgrComponentDataValueChangedEventArgs;
    exports.IgrComponentDateValueChangedEventArgs = IgrComponentDateValueChangedEventArgs;
    exports.IgrComponentValueChangedEventArgs = IgrComponentValueChangedEventArgs;
    exports.IgrContentPane = IgrContentPane;
    exports.IgrContentPaneCollection = IgrContentPaneCollection;
    exports.IgrContentPaneModule = IgrContentPaneModule;
    exports.IgrDatePartDeltas = IgrDatePartDeltas;
    exports.IgrDatePicker = IgrDatePicker;
    exports.IgrDatePickerModule = IgrDatePickerModule;
    exports.IgrDateTimeInput = IgrDateTimeInput;
    exports.IgrDateTimeInputModule = IgrDateTimeInputModule;
    exports.IgrDialog = IgrDialog;
    exports.IgrDialogModule = IgrDialogModule;
    exports.IgrDivider = IgrDivider;
    exports.IgrDividerModule = IgrDividerModule;
    exports.IgrDockManager = IgrDockManager;
    exports.IgrDockManagerLayout = IgrDockManagerLayout;
    exports.IgrDockManagerLayoutModule = IgrDockManagerLayoutModule;
    exports.IgrDockManagerModule = IgrDockManagerModule;
    exports.IgrDockManagerPane = IgrDockManagerPane;
    exports.IgrDockManagerPaneCollection = IgrDockManagerPaneCollection;
    exports.IgrDockManagerPoint = IgrDockManagerPoint;
    exports.IgrDockManagerPointModule = IgrDockManagerPointModule;
    exports.IgrDockManagerResourceStrings = IgrDockManagerResourceStrings;
    exports.IgrDockPaneAction = IgrDockPaneAction;
    exports.IgrDockingIndicator = IgrDockingIndicator;
    exports.IgrDocumentHost = IgrDocumentHost;
    exports.IgrDocumentHostModule = IgrDocumentHostModule;
    exports.IgrDragService = IgrDragService;
    exports.IgrDragServiceModule = IgrDragServiceModule;
    exports.IgrDropdown = IgrDropdown;
    exports.IgrDropdownGroup = IgrDropdownGroup;
    exports.IgrDropdownGroupModule = IgrDropdownGroupModule;
    exports.IgrDropdownHeader = IgrDropdownHeader;
    exports.IgrDropdownHeaderModule = IgrDropdownHeaderModule;
    exports.IgrDropdownItem = IgrDropdownItem;
    exports.IgrDropdownItemCollection = IgrDropdownItemCollection;
    exports.IgrDropdownItemComponentEventArgs = IgrDropdownItemComponentEventArgs;
    exports.IgrDropdownItemModule = IgrDropdownItemModule;
    exports.IgrDropdownModule = IgrDropdownModule;
    exports.IgrExpansionPanel = IgrExpansionPanel;
    exports.IgrExpansionPanelComponentEventArgs = IgrExpansionPanelComponentEventArgs;
    exports.IgrExpansionPanelModule = IgrExpansionPanelModule;
    exports.IgrFilteringOptions = IgrFilteringOptions;
    exports.IgrFloatPaneAction = IgrFloatPaneAction;
    exports.IgrFloatingPaneResizeEventArgs = IgrFloatingPaneResizeEventArgs;
    exports.IgrFloatingPaneResizeEventArgsDetail = IgrFloatingPaneResizeEventArgsDetail;
    exports.IgrFloatingPaneResizeMoveEventArgs = IgrFloatingPaneResizeMoveEventArgs;
    exports.IgrFloatingPaneResizeMoveEventArgsDetail = IgrFloatingPaneResizeMoveEventArgsDetail;
    exports.IgrFocusOptions = IgrFocusOptions;
    exports.IgrIcon = IgrIcon;
    exports.IgrIconButton = IgrIconButton;
    exports.IgrIconButtonModule = IgrIconButtonModule;
    exports.IgrIconModule = IgrIconModule;
    exports.IgrInput = IgrInput;
    exports.IgrInputBase = IgrInputBase;
    exports.IgrInputBaseModule = IgrInputBaseModule;
    exports.IgrInputModule = IgrInputModule;
    exports.IgrKeyBindingHandler = IgrKeyBindingHandler;
    exports.IgrKeyBindingOptions = IgrKeyBindingOptions;
    exports.IgrLayoutChangeEventArgs = IgrLayoutChangeEventArgs;
    exports.IgrLinearProgress = IgrLinearProgress;
    exports.IgrLinearProgressModule = IgrLinearProgressModule;
    exports.IgrList = IgrList;
    exports.IgrListHeader = IgrListHeader;
    exports.IgrListHeaderModule = IgrListHeaderModule;
    exports.IgrListItem = IgrListItem;
    exports.IgrListItemModule = IgrListItemModule;
    exports.IgrListModule = IgrListModule;
    exports.IgrMaskInput = IgrMaskInput;
    exports.IgrMaskInputBase = IgrMaskInputBase;
    exports.IgrMaskInputBaseModule = IgrMaskInputBaseModule;
    exports.IgrMaskInputModule = IgrMaskInputModule;
    exports.IgrMoveFloatingPaneAction = IgrMoveFloatingPaneAction;
    exports.IgrMoveTabAction = IgrMoveTabAction;
    exports.IgrNavDrawer = IgrNavDrawer;
    exports.IgrNavDrawerHeaderItem = IgrNavDrawerHeaderItem;
    exports.IgrNavDrawerHeaderItemModule = IgrNavDrawerHeaderItemModule;
    exports.IgrNavDrawerItem = IgrNavDrawerItem;
    exports.IgrNavDrawerItemModule = IgrNavDrawerItemModule;
    exports.IgrNavDrawerModule = IgrNavDrawerModule;
    exports.IgrNavbar = IgrNavbar;
    exports.IgrNavbarModule = IgrNavbarModule;
    exports.IgrNumberEventArgs = IgrNumberEventArgs;
    exports.IgrPaneCloseEventArgs = IgrPaneCloseEventArgs;
    exports.IgrPaneCloseEventArgsDetail = IgrPaneCloseEventArgsDetail;
    exports.IgrPaneDragAction = IgrPaneDragAction;
    exports.IgrPaneDragEndEventArgs = IgrPaneDragEndEventArgs;
    exports.IgrPaneDragEndEventArgsDetail = IgrPaneDragEndEventArgsDetail;
    exports.IgrPaneDragOverEventArgs = IgrPaneDragOverEventArgs;
    exports.IgrPaneDragOverEventArgsDetail = IgrPaneDragOverEventArgsDetail;
    exports.IgrPaneDragStartEventArgs = IgrPaneDragStartEventArgs;
    exports.IgrPaneDragStartEventArgsDetail = IgrPaneDragStartEventArgsDetail;
    exports.IgrPaneHeaderConnectionEventArgs = IgrPaneHeaderConnectionEventArgs;
    exports.IgrPaneHeaderConnectionEventArgsDetail = IgrPaneHeaderConnectionEventArgsDetail;
    exports.IgrPaneHeaderElement = IgrPaneHeaderElement;
    exports.IgrPaneHeaderElementModule = IgrPaneHeaderElementModule;
    exports.IgrPanePinnedEventArgs = IgrPanePinnedEventArgs;
    exports.IgrPanePinnedEventArgsDetail = IgrPanePinnedEventArgsDetail;
    exports.IgrPaneScrollEventArgs = IgrPaneScrollEventArgs;
    exports.IgrPaneScrollEventArgsDetail = IgrPaneScrollEventArgsDetail;
    exports.IgrProgressBase = IgrProgressBase;
    exports.IgrProgressBaseModule = IgrProgressBaseModule;
    exports.IgrRadio = IgrRadio;
    exports.IgrRadioChangeEventArgs = IgrRadioChangeEventArgs;
    exports.IgrRadioChangeEventArgsDetail = IgrRadioChangeEventArgsDetail;
    exports.IgrRadioGroup = IgrRadioGroup;
    exports.IgrRadioGroupModule = IgrRadioGroupModule;
    exports.IgrRadioModule = IgrRadioModule;
    exports.IgrRangeSlider = IgrRangeSlider;
    exports.IgrRangeSliderModule = IgrRangeSliderModule;
    exports.IgrRangeSliderValue = IgrRangeSliderValue;
    exports.IgrRangeSliderValueEventArgs = IgrRangeSliderValueEventArgs;
    exports.IgrRating = IgrRating;
    exports.IgrRatingModule = IgrRatingModule;
    exports.IgrRatingSymbol = IgrRatingSymbol;
    exports.IgrRatingSymbolModule = IgrRatingSymbolModule;
    exports.IgrRipple = IgrRipple;
    exports.IgrRippleModule = IgrRippleModule;
    exports.IgrSelect = IgrSelect;
    exports.IgrSelectGroup = IgrSelectGroup;
    exports.IgrSelectGroupModule = IgrSelectGroupModule;
    exports.IgrSelectHeader = IgrSelectHeader;
    exports.IgrSelectHeaderModule = IgrSelectHeaderModule;
    exports.IgrSelectItem = IgrSelectItem;
    exports.IgrSelectItemComponentEventArgs = IgrSelectItemComponentEventArgs;
    exports.IgrSelectItemModule = IgrSelectItemModule;
    exports.IgrSelectModule = IgrSelectModule;
    exports.IgrSlider = IgrSlider;
    exports.IgrSliderBase = IgrSliderBase;
    exports.IgrSliderBaseModule = IgrSliderBaseModule;
    exports.IgrSliderLabel = IgrSliderLabel;
    exports.IgrSliderLabelModule = IgrSliderLabelModule;
    exports.IgrSliderModule = IgrSliderModule;
    exports.IgrSnackbar = IgrSnackbar;
    exports.IgrSnackbarModule = IgrSnackbarModule;
    exports.IgrSplitPane = IgrSplitPane;
    exports.IgrSplitPaneCollection = IgrSplitPaneCollection;
    exports.IgrSplitPaneModule = IgrSplitPaneModule;
    exports.IgrSplitterResizeEventArgs = IgrSplitterResizeEventArgs;
    exports.IgrStep = IgrStep;
    exports.IgrStepModule = IgrStepModule;
    exports.IgrStepper = IgrStepper;
    exports.IgrStepperModule = IgrStepperModule;
    exports.IgrSwitch = IgrSwitch;
    exports.IgrSwitchModule = IgrSwitchModule;
    exports.IgrTab = IgrTab;
    exports.IgrTabComponentEventArgs = IgrTabComponentEventArgs;
    exports.IgrTabGroupPane = IgrTabGroupPane;
    exports.IgrTabGroupPaneModule = IgrTabGroupPaneModule;
    exports.IgrTabHeaderConnectionEventArgs = IgrTabHeaderConnectionEventArgs;
    exports.IgrTabHeaderConnectionEventArgsDetail = IgrTabHeaderConnectionEventArgsDetail;
    exports.IgrTabHeaderElement = IgrTabHeaderElement;
    exports.IgrTabHeaderElementModule = IgrTabHeaderElementModule;
    exports.IgrTabModule = IgrTabModule;
    exports.IgrTabPanel = IgrTabPanel;
    exports.IgrTabPanelModule = IgrTabPanelModule;
    exports.IgrTabs = IgrTabs;
    exports.IgrTabsModule = IgrTabsModule;
    exports.IgrTextarea = IgrTextarea;
    exports.IgrTextareaModule = IgrTextareaModule;
    exports.IgrToast = IgrToast;
    exports.IgrToastModule = IgrToastModule;
    exports.IgrToggleButton = IgrToggleButton;
    exports.IgrToggleButtonModule = IgrToggleButtonModule;
    exports.IgrTree = IgrTree;
    exports.IgrTreeItem = IgrTreeItem;
    exports.IgrTreeItemCollection = IgrTreeItemCollection;
    exports.IgrTreeItemComponentEventArgs = IgrTreeItemComponentEventArgs;
    exports.IgrTreeItemModule = IgrTreeItemModule;
    exports.IgrTreeModule = IgrTreeModule;
    exports.IgrTreeSelectionChange = IgrTreeSelectionChange;
    exports.IgrTreeSelectionChangeDetail = IgrTreeSelectionChangeDetail;
    exports.IgrTreeSelectionChangeEventArgs = IgrTreeSelectionChangeEventArgs;
    exports.IgrTreeSelectionOptionsEventArgs = IgrTreeSelectionOptionsEventArgs;
    exports.IgrTreeSelectionOptionsEventDetail = IgrTreeSelectionOptionsEventDetail;
    exports.IgrValidatorHandler = IgrValidatorHandler;
    exports.IgrVoidEventArgs = IgrVoidEventArgs;
    exports.Input = Input;
    exports.InputBase = InputBase;
    exports.InputType = InputType;
    exports.InputType_$type = InputType_$type;
    exports.KeyBindingHandler = KeyBindingHandler;
    exports.KeyBindingOptions = KeyBindingOptions;
    exports.KeyBindingTrigger = KeyBindingTrigger;
    exports.KeyBindingTrigger_$type = KeyBindingTrigger_$type;
    exports.LayoutChangeEventArgs = LayoutChangeEventArgs;
    exports.LinearProgress = LinearProgress;
    exports.LinearProgressLabelAlign = LinearProgressLabelAlign;
    exports.LinearProgressLabelAlign_$type = LinearProgressLabelAlign_$type;
    exports.List = List;
    exports.ListHeader = ListHeader;
    exports.ListItem = ListItem;
    exports.MaskInput = MaskInput;
    exports.MaskInputBase = MaskInputBase;
    exports.MaskInputValueMode = MaskInputValueMode;
    exports.MaskInputValueMode_$type = MaskInputValueMode_$type;
    exports.MoveFloatingPaneAction = MoveFloatingPaneAction;
    exports.MoveTabAction = MoveTabAction;
    exports.NavDrawer = NavDrawer;
    exports.NavDrawerHeaderItem = NavDrawerHeaderItem;
    exports.NavDrawerItem = NavDrawerItem;
    exports.NavDrawerPosition = NavDrawerPosition;
    exports.NavDrawerPosition_$type = NavDrawerPosition_$type;
    exports.Navbar = Navbar;
    exports.NumberEventArgs = NumberEventArgs;
    exports.NumberFormatOptions_$type = NumberFormatOptions_$type;
    exports.PaneCloseEventArgs = PaneCloseEventArgs;
    exports.PaneCloseEventArgsDetail = PaneCloseEventArgsDetail;
    exports.PaneDragAction = PaneDragAction;
    exports.PaneDragActionType = PaneDragActionType;
    exports.PaneDragActionType_$type = PaneDragActionType_$type;
    exports.PaneDragEndEventArgs = PaneDragEndEventArgs;
    exports.PaneDragEndEventArgsDetail = PaneDragEndEventArgsDetail;
    exports.PaneDragOverEventArgs = PaneDragOverEventArgs;
    exports.PaneDragOverEventArgsDetail = PaneDragOverEventArgsDetail;
    exports.PaneDragStartEventArgs = PaneDragStartEventArgs;
    exports.PaneDragStartEventArgsDetail = PaneDragStartEventArgsDetail;
    exports.PaneHeaderConnectionEventArgs = PaneHeaderConnectionEventArgs;
    exports.PaneHeaderConnectionEventArgsDetail = PaneHeaderConnectionEventArgsDetail;
    exports.PaneHeaderElement = PaneHeaderElement;
    exports.PanePinnedEventArgs = PanePinnedEventArgs;
    exports.PanePinnedEventArgsDetail = PanePinnedEventArgsDetail;
    exports.PaneScrollEventArgs = PaneScrollEventArgs;
    exports.PaneScrollEventArgsDetail = PaneScrollEventArgsDetail;
    exports.ProgressBase = ProgressBase;
    exports.Radio = Radio;
    exports.RadioChangeEventArgs = RadioChangeEventArgs;
    exports.RadioChangeEventArgsDetail = RadioChangeEventArgsDetail;
    exports.RadioGroup = RadioGroup;
    exports.RadioGroupAlignment = RadioGroupAlignment;
    exports.RadioGroupAlignment_$type = RadioGroupAlignment_$type;
    exports.RadioLabelPosition = RadioLabelPosition;
    exports.RadioLabelPosition_$type = RadioLabelPosition_$type;
    exports.RangeSlider = RangeSlider;
    exports.RangeSliderValue = RangeSliderValue;
    exports.RangeSliderValueEventArgs = RangeSliderValueEventArgs;
    exports.RangeTextSelectMode = RangeTextSelectMode;
    exports.RangeTextSelectMode_$type = RangeTextSelectMode_$type;
    exports.Rating = Rating;
    exports.RatingSymbol = RatingSymbol;
    exports.ResizerLocation = ResizerLocation;
    exports.ResizerLocation_$type = ResizerLocation_$type;
    exports.Ripple = Ripple;
    exports.Select = Select;
    exports.SelectGroup = SelectGroup;
    exports.SelectHeader = SelectHeader;
    exports.SelectItem = SelectItem;
    exports.SelectItemComponentEventArgs = SelectItemComponentEventArgs;
    exports.SelectScrollStrategy = SelectScrollStrategy;
    exports.SelectScrollStrategy_$type = SelectScrollStrategy_$type;
    exports.SelectionRangeDirection = SelectionRangeDirection;
    exports.SelectionRangeDirection_$type = SelectionRangeDirection_$type;
    exports.SizableComponentSize = SizableComponentSize;
    exports.SizableComponentSize_$type = SizableComponentSize_$type;
    exports.Slider = Slider;
    exports.SliderBase = SliderBase;
    exports.SliderBaseTickOrientation = SliderBaseTickOrientation;
    exports.SliderBaseTickOrientation_$type = SliderBaseTickOrientation_$type;
    exports.SliderLabel = SliderLabel;
    exports.Snackbar = Snackbar;
    exports.SplitPane = SplitPane;
    exports.SplitPaneCollection = SplitPaneCollection;
    exports.SplitPaneOrientation = SplitPaneOrientation;
    exports.SplitPaneOrientation_$type = SplitPaneOrientation_$type;
    exports.SplitterResizeEventArgs = SplitterResizeEventArgs;
    exports.Step = Step;
    exports.StepDirection = StepDirection;
    exports.StepDirection_$type = StepDirection_$type;
    exports.StepType = StepType;
    exports.StepType_$type = StepType_$type;
    exports.Stepper = Stepper;
    exports.StepperHorizontalAnimation = StepperHorizontalAnimation;
    exports.StepperHorizontalAnimation_$type = StepperHorizontalAnimation_$type;
    exports.StepperOrientation = StepperOrientation;
    exports.StepperOrientation_$type = StepperOrientation_$type;
    exports.StepperStepType = StepperStepType;
    exports.StepperStepType_$type = StepperStepType_$type;
    exports.StepperTitlePosition = StepperTitlePosition;
    exports.StepperTitlePosition_$type = StepperTitlePosition_$type;
    exports.StepperVerticalAnimation = StepperVerticalAnimation;
    exports.StepperVerticalAnimation_$type = StepperVerticalAnimation_$type;
    exports.StyleVariant = StyleVariant;
    exports.StyleVariant_$type = StyleVariant_$type;
    exports.Switch = Switch;
    exports.Tab = Tab;
    exports.TabComponentEventArgs = TabComponentEventArgs;
    exports.TabGroupPane = TabGroupPane;
    exports.TabHeaderConnectionEventArgs = TabHeaderConnectionEventArgs;
    exports.TabHeaderConnectionEventArgsDetail = TabHeaderConnectionEventArgsDetail;
    exports.TabHeaderElement = TabHeaderElement;
    exports.TabPanel = TabPanel;
    exports.Tabs = Tabs;
    exports.TabsActivation = TabsActivation;
    exports.TabsActivation_$type = TabsActivation_$type;
    exports.TabsAlignment = TabsAlignment;
    exports.TabsAlignment_$type = TabsAlignment_$type;
    exports.Textarea = Textarea;
    exports.TextareaAutocapitalize = TextareaAutocapitalize;
    exports.TextareaAutocapitalize_$type = TextareaAutocapitalize_$type;
    exports.TextareaInputMode = TextareaInputMode;
    exports.TextareaInputMode_$type = TextareaInputMode_$type;
    exports.TextareaResize = TextareaResize;
    exports.TextareaResize_$type = TextareaResize_$type;
    exports.TextareaWrap = TextareaWrap;
    exports.TextareaWrap_$type = TextareaWrap_$type;
    exports.TickLabelRotation = TickLabelRotation;
    exports.TickLabelRotation_$type = TickLabelRotation_$type;
    exports.Toast = Toast;
    exports.ToggleButton = ToggleButton;
    exports.Tree = Tree;
    exports.TreeItem = TreeItem;
    exports.TreeItemCollection = TreeItemCollection;
    exports.TreeItemComponentEventArgs = TreeItemComponentEventArgs;
    exports.TreeSelection = TreeSelection;
    exports.TreeSelectionChange = TreeSelectionChange;
    exports.TreeSelectionChangeDetail = TreeSelectionChangeDetail;
    exports.TreeSelectionChangeEventArgs = TreeSelectionChangeEventArgs;
    exports.TreeSelectionOptionsEventArgs = TreeSelectionOptionsEventArgs;
    exports.TreeSelectionOptionsEventDetail = TreeSelectionOptionsEventDetail;
    exports.TreeSelection_$type = TreeSelection_$type;
    exports.UnpinnedLocation = UnpinnedLocation;
    exports.UnpinnedLocation_$type = UnpinnedLocation_$type;
    exports.ValidatorHandler = ValidatorHandler;
    exports.VoidEventArgs = VoidEventArgs;
    exports.WCNativeHelper = WCNativeHelper;
    exports.WeekDays = WeekDays;
    exports.WeekDays_$type = WeekDays_$type;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
