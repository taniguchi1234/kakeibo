/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { BaseAlertLikePosition_$type } from "./BaseAlertLikePosition";
/**
 * @hidden
 */
export let BaseAlertLike = /*@__PURE__*/ (() => {
    class BaseAlertLike extends BaseElement {
        constructor() {
            super(...arguments);
            this.b = new WCNativeHelper();
            this.j = null;
        }
        get c() {
            return this.b;
        }
        get nativeElement() {
            return this.j;
        }
        set nativeElement(a) {
            this.j = a;
            this.b.o = this.j;
        }
        setNativeElement(a) {
            this.nativeElement = a;
        }
        get f() {
            let ret_ = this.c.n("open");
            return ret_;
        }
        set f(a) {
            let value_ = a;
            this.c.w("open", value_);
        }
        get i() {
            let ret_ = this.c.n("displayTime");
            return ret_;
        }
        set i(a) {
            let value_ = a;
            this.c.w("displayTime", value_);
        }
        get e() {
            let ret_ = this.c.n("keepOpen");
            return ret_;
        }
        set e(a) {
            let value_ = a;
            this.c.w("keepOpen", value_);
        }
        get a() {
            let ret_ = this.c.n("position");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(BaseAlertLikePosition_$type, EnumUtil.getEnumValue(BaseAlertLikePosition_$type, this.c.f(BaseAlertLikePosition_$type, ret_)));
            return EnumUtil.getEnumValue(BaseAlertLikePosition_$type, ret_);
        }
        set a(a) {
            let value_ = enumGetBox(BaseAlertLikePosition_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.c.w("position", value_);
        }
        g() {
            return (this.nativeElement.show());
        }
        d() {
            return (this.nativeElement.hide());
        }
        h() {
            return (this.nativeElement.toggle());
        }
    }
    BaseAlertLike.$t = /*@__PURE__*/ markType(BaseAlertLike, 'BaseAlertLike', BaseElement.$);
    return BaseAlertLike;
})();
