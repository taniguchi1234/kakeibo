/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { WCNativeHelper } from "./WCNativeHelper";
/**
 * @hidden
 */
export let DockManagerResourceStrings = /*@__PURE__*/ (() => {
    class DockManagerResourceStrings extends Base {
        constructor() {
            super(...arguments);
            this.a = new WCNativeHelper();
            this.c = null;
        }
        get b() {
            return this.a;
        }
        get nativeElement() {
            return this.c;
        }
        set nativeElement(a) {
            this.c = a;
            this.a.o = this.c;
        }
        setNativeElement(a) {
            this.nativeElement = a;
        }
        get e() {
            let ret_ = this.b.n("close");
            return ret_;
        }
        set e(a) {
            let value_ = a;
            this.b.w("close", value_);
        }
        get l() {
            let ret_ = this.b.n("pin");
            return ret_;
        }
        set l(a) {
            let value_ = a;
            this.b.w("pin", value_);
        }
        get m() {
            let ret_ = this.b.n("unpin");
            return ret_;
        }
        set m(a) {
            let value_ = a;
            this.b.w("unpin", value_);
        }
        get g() {
            let ret_ = this.b.n("maximize");
            return ret_;
        }
        set g(a) {
            let value_ = a;
            this.b.w("maximize", value_);
        }
        get h() {
            let ret_ = this.b.n("minimize");
            return ret_;
        }
        set h(a) {
            let value_ = a;
            this.b.w("minimize", value_);
        }
        get i() {
            let ret_ = this.b.n("moreOptions");
            return ret_;
        }
        set i(a) {
            let value_ = a;
            this.b.w("moreOptions", value_);
        }
        get j() {
            let ret_ = this.b.n("moreTabs");
            return ret_;
        }
        set j(a) {
            let value_ = a;
            this.b.w("moreTabs", value_);
        }
        get k() {
            let ret_ = this.b.n("panes");
            return ret_;
        }
        set k(a) {
            let value_ = a;
            this.b.w("panes", value_);
        }
        get f() {
            let ret_ = this.b.n("documents");
            return ret_;
        }
        set f(a) {
            let value_ = a;
            this.b.w("documents", value_);
        }
    }
    DockManagerResourceStrings.$t = /*@__PURE__*/ markType(DockManagerResourceStrings, 'DockManagerResourceStrings');
    return DockManagerResourceStrings;
})();
