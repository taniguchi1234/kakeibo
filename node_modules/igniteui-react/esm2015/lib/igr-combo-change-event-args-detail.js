import { ComboChangeType_$type } from "./ComboChangeType";
import { ComboChangeEventArgsDetail as ComboChangeEventArgsDetail_internal } from "./ComboChangeEventArgsDetail";
import { ensureEnum } from "igniteui-react-core";
export class IgrComboChangeEventArgsDetail {
    createImplementation() {
        return new ComboChangeEventArgsDetail_internal();
    }
    get nativeElement() {
        return this._implementation.nativeElement;
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    constructor() {
        this.mounted = false;
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    get newValue() {
        return this.i.b;
    }
    set newValue(v) {
        if (v && !Array.isArray(v) && typeof (v) == "string") {
            const re = /\s*(?:,|\s|$)\s*/gm;
            v = v.split(re);
        }
        this.i.b = v;
    }
    get items() {
        return this.i.a;
    }
    set items(v) {
        if (v && !Array.isArray(v) && typeof (v) == "string") {
            const re = /\s*(?:,|\s|$)\s*/gm;
            v = v.split(re);
        }
        this.i.a = v;
    }
    get type() {
        return this.i.c;
    }
    set type(v) {
        this.i.c = ensureEnum(ComboChangeType_$type, v);
    }
    findByName(name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        return null;
    }
    setNativeElement(element) {
        this.i.setNativeElement(element);
    }
}
