/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { CalendarBaseSelection_$type } from "./CalendarBaseSelection";
import { WeekDays_$type } from "./WeekDays";
import { DateRangeDescriptor } from "./DateRangeDescriptor";
/**
 * @hidden
 */
export let CalendarBase = /*@__PURE__*/ (() => {
    class CalendarBase extends BaseElement {
        constructor() {
            super(...arguments);
            this.d = new WCNativeHelper();
            this.h = null;
        }
        get e() {
            return this.d;
        }
        get nativeElement() {
            return this.h;
        }
        set nativeElement(a) {
            this.h = a;
            this.d.o = this.h;
        }
        setNativeElement(a) {
            this.nativeElement = a;
        }
        get c() {
            let ret_ = this.e.n("selection");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(CalendarBaseSelection_$type, EnumUtil.getEnumValue(CalendarBaseSelection_$type, this.e.f(CalendarBaseSelection_$type, ret_)));
            return EnumUtil.getEnumValue(CalendarBaseSelection_$type, ret_);
        }
        set c(a) {
            let value_ = enumGetBox(CalendarBaseSelection_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("selection", value_);
        }
        get g() {
            let ret_ = this.e.n("showWeekNumbers");
            return ret_;
        }
        set g(a) {
            let value_ = a;
            this.e.w("showWeekNumbers", value_);
        }
        get f() {
            let ret_ = this.e.n("weekStart");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(WeekDays_$type, EnumUtil.getEnumValue(WeekDays_$type, this.e.f(WeekDays_$type, ret_)));
            return EnumUtil.getEnumValue(WeekDays_$type, ret_);
        }
        set f(a) {
            let value_ = enumGetBox(WeekDays_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.e.w("weekStart", value_);
        }
        get j() {
            let ret_ = this.e.n("locale");
            return ret_;
        }
        set j(a) {
            let value_ = a;
            this.e.w("locale", value_);
        }
        get b() {
            let ret_ = this.e.m("specialDates", (a) => new DateRangeDescriptor());
            return ret_;
        }
        set b(a) {
            let value_ = a;
            this.e.w("specialDates", value_);
        }
        get a() {
            let ret_ = this.e.m("disabledDates", (a) => new DateRangeDescriptor());
            return ret_;
        }
        set a(a) {
            let value_ = a;
            this.e.w("disabledDates", value_);
        }
    }
    CalendarBase.$t = /*@__PURE__*/ markType(CalendarBase, 'CalendarBase', BaseElement.$);
    return CalendarBase;
})();
