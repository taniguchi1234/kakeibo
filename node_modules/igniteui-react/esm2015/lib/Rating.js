/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { BaseElement } from "./BaseElement";
import { WCNativeHelper } from "./WCNativeHelper";
import { markType } from "igniteui-react-core";
import { NumberEventArgs } from "./NumberEventArgs";
/**
 * @hidden
 */
export let Rating = /*@__PURE__*/ (() => {
    class Rating extends BaseElement {
        constructor() {
            super(...arguments);
            this.c = new WCNativeHelper();
            this.n = null;
            this.change = null;
            this.hover = null;
        }
        get d() {
            return this.c;
        }
        get nativeElement() {
            return this.n;
        }
        set nativeElement(a) {
            this.n = a;
            this.c.o = this.n;
        }
        setNativeElement(a) {
            this.nativeElement = a;
        }
        get k() {
            let ret_ = this.d.n("max");
            return ret_;
        }
        set k(a) {
            let value_ = a;
            this.d.w("max", value_);
        }
        get l() {
            let ret_ = this.d.n("step");
            return ret_;
        }
        set l(a) {
            let value_ = a;
            this.d.w("step", value_);
        }
        get p() {
            let ret_ = this.d.n("label");
            return ret_;
        }
        set p(a) {
            let value_ = a;
            this.d.w("label", value_);
        }
        get r() {
            let ret_ = this.d.n("valueFormat");
            return ret_;
        }
        set r(a) {
            let value_ = a;
            this.d.w("valueFormat", value_);
        }
        get m() {
            let ret_ = this.d.n("value");
            return ret_;
        }
        set m(a) {
            let value_ = a;
            this.d.w("value", value_);
        }
        get g() {
            let ret_ = this.d.n("hoverPreview");
            return ret_;
        }
        set g(a) {
            let value_ = a;
            this.d.w("hoverPreview", value_);
        }
        get i() {
            let ret_ = this.d.n("readOnly");
            return ret_;
        }
        set i(a) {
            let value_ = a;
            this.d.w("readOnly", value_);
        }
        get j() {
            let ret_ = this.d.n("single");
            return ret_;
        }
        set j(a) {
            let value_ = a;
            this.d.w("single", value_);
        }
        get e() {
            let ret_ = this.d.n("allowReset");
            return ret_;
        }
        set e(a) {
            let value_ = a;
            this.d.w("allowReset", value_);
        }
        get f() {
            let ret_ = this.d.n("disabled");
            return ret_;
        }
        set f(a) {
            let value_ = a;
            this.d.w("disabled", value_);
        }
        get q() {
            let ret_ = this.d.n("name");
            return ret_;
        }
        set q(a) {
            let value_ = a;
            this.d.w("name", value_);
        }
        get h() {
            let ret_ = this.d.n("invalid");
            return ret_;
        }
        set h(a) {
            let value_ = a;
            this.d.w("invalid", value_);
        }
        changeChanged() {
            if (this.change != null) {
                this.d.s("change", (a) => this.change(this, NumberEventArgs.a(a)));
            }
            else {
                this.d.v("change");
            }
        }
        hoverChanged() {
            if (this.hover != null) {
                this.d.s("hover", (a) => this.hover(this, NumberEventArgs.a(a)));
            }
            else {
                this.d.v("hover");
            }
        }
        z(a = -1) {
            this.nativeElement.stepUp(this.d.i(a));
        }
        y(a = -1) {
            this.nativeElement.stepDown(this.d.i(a));
        }
        v() {
            this.nativeElement.reportValidity();
        }
        t() {
            this.nativeElement.checkValidity();
        }
        w(a) {
            this.nativeElement.setCustomValidity(this.d.i(a));
        }
    }
    Rating.$t = /*@__PURE__*/ markType(Rating, 'Rating', BaseElement.$);
    return Rating;
})();
