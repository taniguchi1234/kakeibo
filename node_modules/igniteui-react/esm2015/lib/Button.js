/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ButtonBase } from "./ButtonBase";
import { ButtonVariant_$type } from "./ButtonVariant";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { WCNativeHelper } from "./WCNativeHelper";
/**
 * @hidden
 */
export let Button = /*@__PURE__*/ (() => {
    class Button extends ButtonBase {
        get v() {
            let ret_ = this.g.n("variant");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(ButtonVariant_$type, EnumUtil.getEnumValue(ButtonVariant_$type, this.g.f(ButtonVariant_$type, ret_)));
            return EnumUtil.getEnumValue(ButtonVariant_$type, ret_);
        }
        set v(a) {
            let value_ = enumGetBox(ButtonVariant_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.g.w("variant", value_);
        }
    }
    Button.$t = /*@__PURE__*/ markType(Button, 'Button', ButtonBase.$);
    return Button;
})();
