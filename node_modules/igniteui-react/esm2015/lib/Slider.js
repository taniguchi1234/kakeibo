/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { SliderBase } from "./SliderBase";
import { markType } from "igniteui-react-core";
import { NumberEventArgs } from "./NumberEventArgs";
/**
 * @hidden
 */
export let Slider = /*@__PURE__*/ (() => {
    class Slider extends SliderBase {
        constructor() {
            super(...arguments);
            this.input = null;
            this.change = null;
        }
        get aa() {
            let ret_ = this.e.n("value");
            return ret_;
        }
        set aa(a) {
            let value_ = a;
            this.e.w("value", value_);
        }
        get ab() {
            let ret_ = this.e.n("name");
            return ret_;
        }
        set ab(a) {
            let value_ = a;
            this.e.w("name", value_);
        }
        get z() {
            let ret_ = this.e.n("invalid");
            return ret_;
        }
        set z(a) {
            let value_ = a;
            this.e.w("invalid", value_);
        }
        inputChanged() {
            if (this.input != null) {
                this.e.s("input", (a) => this.input(this, NumberEventArgs.a(a)));
            }
            else {
                this.e.v("input");
            }
        }
        changeChanged() {
            if (this.change != null) {
                this.e.s("change", (a) => this.change(this, NumberEventArgs.a(a)));
            }
            else {
                this.e.v("change");
            }
        }
        ai(a = -1) {
            this.nativeElement.stepUp(this.e.i(a));
        }
        ah(a = -1) {
            this.nativeElement.stepDown(this.e.i(a));
        }
        af() {
            this.nativeElement.reportValidity();
        }
        ad() {
            this.nativeElement.checkValidity();
        }
        ag(a) {
            this.nativeElement.setCustomValidity(this.e.i(a));
        }
    }
    Slider.$t = /*@__PURE__*/ markType(Slider, 'Slider', SliderBase.$);
    return Slider;
})();
