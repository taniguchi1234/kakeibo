/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ProgressBase } from "./ProgressBase";
import { enumGetBox, EnumUtil, markType } from "igniteui-react-core";
import { WCNativeHelper } from "./WCNativeHelper";
import { LinearProgressLabelAlign_$type } from "./LinearProgressLabelAlign";
/**
 * @hidden
 */
export let LinearProgress = /*@__PURE__*/ (() => {
    class LinearProgress extends ProgressBase {
        get o() {
            let ret_ = this.c.n("striped");
            return ret_;
        }
        set o(a) {
            let value_ = a;
            this.c.w("striped", value_);
        }
        get n() {
            let ret_ = this.c.n("labelAlign");
            if ((ret_ === undefined && this.___rawMode)) {
                return undefined;
            }
            ret_ = enumGetBox(LinearProgressLabelAlign_$type, EnumUtil.getEnumValue(LinearProgressLabelAlign_$type, this.c.f(LinearProgressLabelAlign_$type, ret_)));
            return EnumUtil.getEnumValue(LinearProgressLabelAlign_$type, ret_);
        }
        set n(a) {
            let value_ = enumGetBox(LinearProgressLabelAlign_$type, a);
            value_ = WCNativeHelper.camel(value_.toString());
            this.c.w("labelAlign", value_);
        }
    }
    LinearProgress.$t = /*@__PURE__*/ markType(LinearProgress, 'LinearProgress', ProgressBase.$);
    return LinearProgress;
})();
