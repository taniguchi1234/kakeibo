import { LitElement } from 'lit';
import type { Constructor } from '../../common/mixins/constructor.js';
import { CalendarDay } from '../model.js';
import type { IgcCalendarBaseEventMap } from '../types.js';
declare const IgcMonthsViewComponent_base: Constructor<import("../../common/mixins/event-emitter.js").EventEmitterInterface<IgcCalendarBaseEventMap>> & Constructor<LitElement>;
/**
 * Instantiate a months view as a separate component in the calendar.
 *
 * @element igc-months-view
 *
 * @csspart months-row - The months row container.
 * @csspart month - The month container.
 * @csspart month-inner - The inner month container.
 */
export default class IgcMonthsViewComponent extends IgcMonthsViewComponent_base {
    static readonly tagName = "igc-months-view";
    static styles: import("lit").CSSResult;
    static register(): void;
    private _value;
    private activeMonth;
    /** Ð¢he current value of the calendar. */
    set value(value: Date);
    get value(): Date;
    /** Sets the locale used for formatting and displaying the dates. */
    locale: string;
    /** The format of the month. Defaults to long. */
    monthFormat: 'numeric' | '2-digit' | 'long' | 'short' | 'narrow';
    private _intl;
    protected localeChange(): void;
    protected formatChange(): void;
    constructor();
    connectedCallback(): void;
    /** Focuses the active date. */
    focusActiveDate(): void;
    protected handleInteraction(event: Event): void;
    protected renderMonth(entry: CalendarDay, now: CalendarDay): import("lit-html").TemplateResult<1>;
    protected render(): Generator<import("lit-html").TemplateResult<1>, void, unknown>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-months-view': IgcMonthsViewComponent;
    }
}
export {};
