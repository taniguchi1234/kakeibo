import { LitElement } from 'lit';
import type { Constructor } from '../../common/mixins/constructor.js';
import { CalendarDay } from '../model.js';
import type { IgcCalendarBaseEventMap } from '../types.js';
declare const IgcYearsViewComponent_base: Constructor<import("../../common/mixins/event-emitter.js").EventEmitterInterface<IgcCalendarBaseEventMap>> & Constructor<LitElement>;
/**
 * Instantiate a years view as a separate component in the calendar.
 *
 * @element igc-years-view
 *
 * @csspart years-row - The years row container.
 * @csspart year - The year container.
 * @csspart year-inner - The inner year container.
 */
export default class IgcYearsViewComponent extends IgcYearsViewComponent_base {
    static readonly tagName = "igc-years-view";
    static styles: import("lit").CSSResult;
    static register(): void;
    private _value;
    private activeYear;
    /** Ð¢he current value of the calendar. */
    set value(value: Date);
    get value(): Date;
    /**
     * Sets how many years are displayed on a single page.
     * @attr years-per-page
     */
    yearsPerPage: number;
    constructor();
    connectedCallback(): void;
    focusActiveDate(): void;
    protected handleInteraction(event: Event): void;
    protected renderYear(year: number, now: CalendarDay): import("lit-html").TemplateResult<1>;
    protected render(): Generator<import("lit-html").TemplateResult<1>, void, unknown>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-years-view': IgcYearsViewComponent;
    }
}
export {};
