{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/components/icon/registry/types.ts"],"names":[],"mappings":"AA0BA,MAAM,CAAN,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,qDAAa,CAAA;IACb,2DAAgB,CAAA;IAChB,yEAAuB,CAAA;AACzB,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB","sourcesContent":["import type { Theme } from '../../../theming/types.js';\nimport type { DefaultMap } from './default-map.js';\n\n// Exported internal types\n\nexport type IconsCollection<T> = DefaultMap<string, Map<string, T>>;\n\nexport type IconCallback = (name: string, collection: string) => void;\nexport type IconThemeKey = Theme | 'default';\n\nexport type SvgIcon = {\n  svg: string;\n  title?: string;\n};\n\nexport type IconReference = {\n  alias: IconMeta;\n  target: Map<IconThemeKey, IconMeta>;\n};\n\nexport type IconReferencePair = {\n  alias: IconMeta;\n  target: IconMeta;\n  overwrite: boolean;\n};\n\nexport enum ActionType {\n  SyncState = 0,\n  RegisterIcon = 1,\n  UpdateIconReference = 2,\n}\n\n/** @ignore */\nexport interface BroadcastIconsChangeMessage {\n  actionType: ActionType;\n  collections?: Map<string, Map<string, SvgIcon>>;\n  references?: Map<string, Map<string, IconMeta>>;\n}\n\n// Exported public types\n\nexport interface IconMeta {\n  name: string;\n  collection: string;\n  external?: boolean;\n}\n"]}