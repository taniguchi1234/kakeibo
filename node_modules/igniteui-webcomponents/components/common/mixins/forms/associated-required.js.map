{"version":3,"file":"associated-required.js","sourceRoot":"","sources":["../../../../../src/components/common/mixins/forms/associated-required.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EACL,2BAA2B,EAC3B,mBAAmB,GACpB,MAAM,iBAAiB,CAAC;AAWzB,MAAM,UAAU,2BAA2B,CACzC,IAAO;IAEP,MAAM,6BAA8B,SAAQ,mBAAmB,CAAC,IAAI,CAAC;QAArE;;YACY,cAAS,GAAG,KAAK,CAAC;QAgB9B,CAAC;QARC,IAAW,QAAQ,CAAC,KAAc;YAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;QAED,IAAW,QAAQ;YACjB,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;KACF;IARC;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;iEAI1C;IAOH,OAAO,6BAGJ,CAAC;AACN,CAAC;AAMD,MAAM,UAAU,mCAAmC,CAEjD,IAAO;IACP,MAAM,6BAA8B,SAAQ,2BAA2B,CACrE,IAAI,CACL;QAFD;;YAGY,cAAS,GAAG,KAAK,CAAC;QAgB9B,CAAC;QARC,IAAW,QAAQ,CAAC,KAAc;YAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;QAED,IAAW,QAAQ;YACjB,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;KACF;IARC;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;iEAI1C;IAOH,OAAO,6BAGJ,CAAC;AACN,CAAC","sourcesContent":["import type { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport type { Constructor } from '../constructor.js';\nimport {\n  FormAssociatedCheckboxMixin,\n  FormAssociatedMixin,\n} from './associated.js';\nimport type {\n  FormAssociatedCheckboxElementInterface,\n  FormAssociatedElementInterface,\n  FormRequiredInterface,\n} from './types.js';\n\n/**\n * Mixes the passed class into a form associated custom element with an\n * additional `required` attribute.\n */\nexport function FormAssociatedRequiredMixin<T extends Constructor<LitElement>>(\n  base: T\n) {\n  class FormAssociatedRequiredElement extends FormAssociatedMixin(base) {\n    protected _required = false;\n\n    /**\n     * When set, makes the component a required field for validation.\n     * @attr\n     * @default false\n     */\n    @property({ type: Boolean, reflect: true })\n    public set required(value: boolean) {\n      this._required = Boolean(value);\n      this._validate();\n    }\n\n    public get required(): boolean {\n      return this._required;\n    }\n  }\n\n  return FormAssociatedRequiredElement as unknown as Constructor<\n    FormRequiredInterface & FormAssociatedElementInterface\n  > &\n    T;\n}\n\n/**\n * Mixes the passed class into a form associated custom element with an\n * additional `required` attribute.\n */\nexport function FormAssociatedCheckboxRequiredMixin<\n  T extends Constructor<LitElement>,\n>(base: T) {\n  class FormAssociatedRequiredElement extends FormAssociatedCheckboxMixin(\n    base\n  ) {\n    protected _required = false;\n\n    /**\n     * When set, makes the component a required field for validation.\n     * @attr\n     * @default false\n     */\n    @property({ type: Boolean, reflect: true })\n    public set required(value: boolean) {\n      this._required = Boolean(value);\n      this._validate();\n    }\n\n    public get required(): boolean {\n      return this._required;\n    }\n  }\n\n  return FormAssociatedRequiredElement as unknown as Constructor<\n    FormRequiredInterface & FormAssociatedCheckboxElementInterface\n  > &\n    T;\n}\n"]}