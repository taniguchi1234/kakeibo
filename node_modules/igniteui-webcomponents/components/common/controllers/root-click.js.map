{"version":3,"file":"root-click.js","sourceRoot":"","sources":["../../../../src/components/common/controllers/root-click.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,wBAAwB,EAAE,MAAM,YAAY,CAAC;AActD,MAAM,OAAO,mBAAmB;IAC9B,YACmB,IAA6B,EACtC,MAAkC;QADzB,SAAI,GAAJ,IAAI,CAAyB;QACtC,WAAM,GAAN,MAAM,CAA4B;QAE1C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACtC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAEO,oBAAoB;QAC1B,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACjE,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC1E,CAAC;IAEO,UAAU,CAAC,KAAmB;QACpC,MAAM,OAAO,GAAG,IAAI,GAAG,CAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE9C,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC;QAED,OAAO,CAAC,wBAAwB,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IAEM,WAAW,CAAC,KAAmB;QACpC,IAAI,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACrC,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC;IACH,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,MAAM,EAAE,YAAY;YACvB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,MAAM,CAAC,MAAkC;QAC9C,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QAC9C,CAAC;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;CACF;AAED,MAAM,UAAU,mBAAmB,CACjC,IAA6B,EAC7B,MAAkC;IAElC,OAAO,IAAI,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC/C,CAAC","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\nimport { findElementFromEventPath } from '../util.js';\n\ntype RootClickControllerConfig = {\n  hideCallback?: () => void;\n  target?: HTMLElement;\n};\n\ninterface RootClickControllerHost extends ReactiveControllerHost, HTMLElement {\n  open: boolean;\n  keepOpenOnOutsideClick?: boolean;\n  hide(): void;\n}\n\n/* blazorSuppress */\nexport class RootClickController implements ReactiveController {\n  constructor(\n    private readonly host: RootClickControllerHost,\n    private config?: RootClickControllerConfig\n  ) {\n    this.host.addController(this);\n  }\n\n  private addEventListeners() {\n    if (!this.host.keepOpenOnOutsideClick) {\n      document.addEventListener('click', this, { capture: true });\n    }\n  }\n\n  private removeEventListeners() {\n    document.removeEventListener('click', this, { capture: true });\n  }\n\n  private configureListeners() {\n    this.host.open ? this.addEventListeners() : this.removeEventListeners();\n  }\n\n  private shouldHide(event: PointerEvent) {\n    const targets = new Set<Element>([this.host]);\n\n    if (this.config?.target) {\n      targets.add(this.config.target);\n    }\n\n    return !findElementFromEventPath((node) => targets.has(node), event);\n  }\n\n  public handleEvent(event: PointerEvent) {\n    if (this.host.keepOpenOnOutsideClick) {\n      return;\n    }\n\n    if (this.shouldHide(event)) {\n      this.hide();\n    }\n  }\n\n  private hide() {\n    this.config?.hideCallback\n      ? this.config.hideCallback.call(this.host)\n      : this.host.hide();\n  }\n\n  public update(config?: RootClickControllerConfig) {\n    if (config) {\n      this.config = { ...this.config, ...config };\n    }\n    this.configureListeners();\n  }\n\n  public hostConnected() {\n    this.configureListeners();\n  }\n\n  public hostDisconnected() {\n    this.removeEventListeners();\n  }\n}\n\nexport function addRootClickHandler(\n  host: RootClickControllerHost,\n  config?: RootClickControllerConfig\n) {\n  return new RootClickController(host, config);\n}\n"]}