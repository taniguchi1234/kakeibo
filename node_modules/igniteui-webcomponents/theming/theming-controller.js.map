{"version":3,"file":"theming-controller.js","sourceRoot":"","sources":["../../src/theming/theming-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type LitElement,\n  type ReactiveController,\n  type ReactiveControllerHost,\n  type ReactiveElement,\n  adoptStyles,\n  css,\n} from 'lit';\n\nimport { getTheme } from './config.js';\nimport { CHANGE_THEME_EVENT } from './theming-event.js';\nimport type {\n  Theme,\n  ThemeChangedCallback,\n  ThemeController,\n  ThemeVariant,\n  Themes,\n} from './types.js';\n\ntype ThemeCallback = () => void;\n\nclass ThemeEventListeners {\n  private readonly listeners = new Set<ThemeCallback>();\n\n  public add(listener: ThemeCallback) {\n    globalThis.addEventListener(CHANGE_THEME_EVENT, this);\n    this.listeners.add(listener);\n  }\n\n  public remove(listener: ThemeCallback) {\n    this.listeners.delete(listener);\n    if (this.listeners.size < 1) {\n      globalThis.removeEventListener(CHANGE_THEME_EVENT, this);\n    }\n  }\n\n  public handleEvent() {\n    for (const listener of this.listeners) {\n      listener();\n    }\n  }\n}\n\nconst _themeListeners = new ThemeEventListeners();\n\nclass ThemingController implements ReactiveController, ThemeController {\n  private themes: Themes;\n  private host: ReactiveControllerHost & ReactiveElement;\n\n  public theme!: Theme;\n  public themeVariant!: ThemeVariant;\n  public onThemeChanged?: ThemeChangedCallback;\n\n  constructor(host: ReactiveControllerHost & ReactiveElement, themes: Themes) {\n    this.themes = themes;\n    this.host = host;\n    this.host.addController(this);\n  }\n\n  public hostConnected() {\n    this.themeChanged();\n    _themeListeners.add(this.themeChanged);\n  }\n\n  public hostDisconnected() {\n    _themeListeners.remove(this.themeChanged);\n  }\n\n  private getStyles() {\n    const styleSheets = Object.entries(this.themes[this.themeVariant]);\n    const styles = { shared: css``, theme: css`` };\n\n    for (const [name, sheet] of styleSheets) {\n      if (name === 'shared') {\n        styles.shared = sheet;\n      }\n      if (name === this.theme) {\n        styles.theme = sheet;\n      }\n    }\n\n    return styles;\n  }\n\n  protected adoptStyles() {\n    const { theme, themeVariant } = getTheme();\n    this.theme = theme;\n    this.themeVariant = themeVariant;\n\n    const ctor = this.host.constructor as typeof LitElement;\n    const { shared, theme: _theme } = this.getStyles();\n\n    adoptStyles(this.host.shadowRoot!, [...ctor.elementStyles, shared, _theme]);\n  }\n\n  private themeChanged: ThemeCallback = () => {\n    this.adoptStyles();\n    this.onThemeChanged?.call(this.host, this.theme);\n    this.host.requestUpdate();\n  };\n}\n\nexport function createThemeController(\n  host: ReactiveControllerHost & ReactiveElement,\n  themes: Themes\n) {\n  return new ThemingController(host, themes);\n}\n"]}