{"version":3,"file":"keyboard.service.js","sourceRoot":"","sources":["../../../../src/components/dockmanager/keyboard/keyboard.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Utils } from '../../../utils/utils';\r\n\r\nimport { IgcDockManagerPaneType, IgcDockingIndicatorPosition } from './../dockmanager.public-interfaces';\r\nimport { IgcDockManagerService } from './../dockmanager.service';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class IgcDockManagerKeyboardService {\r\n  constructor(private service: IgcDockManagerService) {\r\n  }\r\n\r\n  handleKeydown(event: KeyboardEvent) {\r\n    if (this.service.dockManager.disableKeyboardNavigation) {\r\n      return;\r\n    }\r\n\r\n    const activePane = this.service.dockManager.activePane;\r\n    const ctrlOrMetaKey = Utils.isControlOrMetaPressed(event);\r\n    const altKey = Utils.isAltPressed(event);\r\n    const shiftKey = event.shiftKey;\r\n\r\n    if (event.key === 'Control' || event.key === 'Meta' || event.key === 'OS') {\r\n      this.service.cacheDocumentsOrder();\r\n    } else if (event.key === 'Alt' || event.key === 'AltGraph') {\r\n      this.service.cacheContentPanesOrder();\r\n    } else if (event.key === 'F6' || (event.key.startsWith('Arrow') && !shiftKey && ctrlOrMetaKey)) {\r\n      this.handleFocusPane(event);\r\n      event.stopPropagation();\r\n    } else if (event.key === 'F3' && altKey && activePane) {\r\n      this.service.dockManager.focusElement();\r\n      this.service.closePane(activePane);\r\n      event.stopPropagation();\r\n    } else if (event.key.startsWith('Arrow') && shiftKey && activePane) {\r\n      this.service.dockManager.focusElement();\r\n      this.handleDockPane(event);\r\n      event.stopPropagation();\r\n    } else if ((event.key === 'F7' || event.key === 'F8') && (altKey || ctrlOrMetaKey)) {\r\n      this.setPaneNavigatorMeta(altKey, ctrlOrMetaKey, shiftKey);\r\n      event.stopPropagation();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  private handleFocusPane(event: KeyboardEvent) {\r\n    const altKey = Utils.isAltPressed(event);\r\n    const ctrlOrMetaKey = Utils.isControlOrMetaPressed(event);\r\n    const shiftKey = event.shiftKey;\r\n    const f6 = event.key === 'F6';\r\n    const arrowLeft = event.key === 'ArrowLeft';\r\n    const arrowRight = event.key === 'ArrowRight';\r\n\r\n    if (altKey && shiftKey && f6) {\r\n      this.service.focusPrevContentPane(false);\r\n    } else if (altKey && f6) {\r\n      this.service.focusNextContentPane(false);\r\n    } else if ((ctrlOrMetaKey && shiftKey && f6) || (ctrlOrMetaKey && arrowLeft)) {\r\n      this.service.focusPrevContentPane(true);\r\n    } else if ((ctrlOrMetaKey && f6) || (ctrlOrMetaKey && arrowRight)) {\r\n      this.service.focusNextContentPane(true);\r\n    }\r\n  }\r\n\r\n  private handleDockPane(event: KeyboardEvent) {\r\n    const key = event.key;\r\n    const ctrlOrMetaKey = Utils.isControlOrMetaPressed(event);\r\n    const shiftKey = event.shiftKey;\r\n\r\n    if (ctrlOrMetaKey && shiftKey) {\r\n      this.handleRootDockPane(key);\r\n    } else if (shiftKey) {\r\n      const activePane = this.service.dockManager.activePane;\r\n      const activePaneParent = this.service.getParent(activePane);\r\n      if (activePaneParent.type === IgcDockManagerPaneType.tabGroupPane && activePaneParent.panes.length > 1) {\r\n        this.handleInnerDockPane(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleRootDockPane(key: string) {\r\n    let position: IgcDockingIndicatorPosition;\r\n    switch (key) {\r\n      case 'ArrowUp':\r\n        position = IgcDockingIndicatorPosition.top;\r\n        break;\r\n      case 'ArrowDown':\r\n        position = IgcDockingIndicatorPosition.bottom;\r\n        break;\r\n      case 'ArrowLeft':\r\n        position = IgcDockingIndicatorPosition.left;\r\n        break;\r\n      case 'ArrowRight':\r\n        position = IgcDockingIndicatorPosition.right;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (position) {\r\n      this.service.keyboardDockPane = this.service.dockManager.activePane;\r\n      this.service.rootDockPane(position);\r\n    }\r\n  }\r\n\r\n  private handleInnerDockPane(key: string) {\r\n    let position: IgcDockingIndicatorPosition;\r\n    switch (key) {\r\n      case 'ArrowUp':\r\n        position = IgcDockingIndicatorPosition.top;\r\n        break;\r\n      case 'ArrowDown':\r\n        position = IgcDockingIndicatorPosition.bottom;\r\n        break;\r\n      case 'ArrowLeft':\r\n        position = IgcDockingIndicatorPosition.left;\r\n        break;\r\n      case 'ArrowRight':\r\n        position = IgcDockingIndicatorPosition.right;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    if (position) {\r\n      this.service.keyboardDockPane = this.service.dockManager.activePane;\r\n      this.service.dockPane(position);\r\n    }\r\n  }\r\n\r\n  private setPaneNavigatorMeta(altKey: boolean, ctrlOrMetaKey: boolean, shiftKey: boolean) {\r\n    let initIndex = 0;\r\n    const allItems = this.service.visibleContentPanes.concat(this.service.visibleDocuments);\r\n    if (allItems.length > 0) {\r\n      if (ctrlOrMetaKey) {\r\n        if (this.service.visibleDocuments.length > 0) {\r\n          initIndex = shiftKey ?\r\n            this.service.visibleContentPanes.length + this.service.visibleDocuments.length - 1 :\r\n            this.service.visibleContentPanes.length;\r\n        } else {\r\n          initIndex = shiftKey ? this.service.visibleContentPanes.length - 1 : 0;\r\n        }\r\n      } else if (altKey) {\r\n        initIndex = shiftKey ?\r\n          this.service.visibleContentPanes.length > 0 ?\r\n            this.service.visibleContentPanes.length - 1 :\r\n            this.service.visibleDocuments.length - 1 :\r\n          0;\r\n      }\r\n\r\n      const metadata = {\r\n        activePanes: this.service.visibleContentPanes,\r\n        activeDocuments: this.service.visibleDocuments,\r\n        initialIndex: initIndex,\r\n        previousActivePaneIndex: allItems.indexOf(this.service.dockManager.activePane)\r\n      };\r\n\r\n      this.service.dockManager.activePane = null;\r\n      this.service.dockManager.navigationPaneMeta = metadata;\r\n    }\r\n  }\r\n}\r\n"]}