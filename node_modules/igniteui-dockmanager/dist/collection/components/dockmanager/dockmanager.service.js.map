{"version":3,"file":"dockmanager.service.js","sourceRoot":"","sources":["../../../src/components/dockmanager/dockmanager.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAG1C,OAAO,EACL,qBAAqB,EAAE,2BAA2B,EAAE,yBAAyB,EAC7E,cAAc,EACf,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAC+B,sBAAsB,EAA4C,2BAA2B,EACiB,qBAAqB,EAC/I,kBAAkB,EAAgB,uBAAuB,EAAmB,mBAAmB,EACxH,MAAM,iCAAiC,CAAC;AAEzC;;GAEG;AACH,MAAM,OAAO,qBAAqB;EA2BhC,YAAmB,WAAwC;IAAxC,gBAAW,GAAX,WAAW,CAA6B;IAJ3D,wBAAmB,GAAG,IAAI,GAAG,EAAuC,CAAC;IACrE,qBAAgB,GAAmB,IAAI,CAAC;EAKxC,CAAC;EAED,UAAU,CAAC,SAAiB;IAC1B,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;EACnD,CAAC;EAEO,YAAY;IAClB,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;MACjE,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;MACjC,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;MAC1C,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;EACL,CAAC;EAEO,mBAAmB,CAAC,SAAuB,EAAE,MAAe,EAAE,WAAoB;IACxF,IAAI,CAAC,SAAS,EAAE;MACd,OAAO;KACR;IAED,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;MACjB,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;KACpC;IAED,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;MAClC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;MAExC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;QACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;OAC/B;MAED,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QACpE,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,WAAW,EAAE;UACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;aAAM;UACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC;OACF;WAAM,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QACzD,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;OACrD;WAAM,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QAC5D,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;UAC3B,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACV,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;WAC7B;UACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;UAEjC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YACjD,IAAI,WAAW,EAAE;cACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAChC;iBAAM;cACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACnC;WACF;SACF;OACF;WAAM,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QAC5D,IAAI,MAAM,EAAE;UACV,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;OACvD;KACF;EACH,CAAC;EAEO,oBAAoB,CAAC,SAAuB;IAClD,IAAI,CAAC,SAAS,EAAE;MACd,OAAO;KACR;IAED,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;MAClC,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QAClD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;OACjC;WAAM,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QAC5D,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;UAC3B,IAAI,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;UACnC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;SAClC;OACF;WAAM,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;QAC3D,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;OACtC;KACF;EACH,CAAC;EAEO,wBAAwB,CAAC,IAAoB;IACnD,IAAI,gBAAqC,CAAC;IAE1C,IAAI,IAAI,CAAC,gBAAgB,EAAE;MACzB,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;KAC1C;SAAM;MACL,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;MACxD,+FAA+F;MAC/F,gBAAgB,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC;KAC7G;IAED,OAAO,gBAAgB,CAAC;EAC1B,CAAC;EAEO,yBAAyB,CAAC,IAAoB;IACpD,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;MAC3B,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;MAC7D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;KACtD;EACH,CAAC;EAEO,uBAAuB,CAAC,IAAoB;IAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAI,cAA+B,CAAC;IAEpC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE;MACxC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;MAC9C,IAAI,CAAS,CAAC;MAEd,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAErC,IAAI,UAAU,KAAK,aAAa,EAAE;UAChC,MAAM;SACP;OACF;MAED,IAAI,CAAC,GAAG,gBAAgB,EAAE;QACxB,gBAAgB,GAAG,CAAC,CAAC;QACrB,cAAc,GAAG,OAAO,CAAC;OAC1B;KACF;IAED,OAAO,cAAc,CAAC;EACxB,CAAC;EAEO,qBAAqB,CAAC,IAAoB,EAAE,OAAwB;IAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9C,IAAI,iBAAiB,GAAG,CAAC,CAAC,CAAC;IAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACxC,MAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/B,MAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;MAErC,IAAI,UAAU,KAAK,aAAa,EAAE;QAChC,iBAAiB,GAAG,CAAC,CAAC;OACvB;WAAM;QACL,MAAM;OACP;KACF;IAED,IAAI,iBAAiB,IAAI,CAAC,EAAE;MAC1B,MAAM,YAAY,GAAG,QAAQ,CAAC,iBAAiB,CAAiB,CAAC;MACjE,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9E,MAAM,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;MAEpF,OAAO,YAAY,CAAC,WAAW,KAAK,uBAAuB,CAAC,UAAU,CAAC,CAAC;QACtE,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACjF,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC;KACnF;IAED,OAAO,mBAAmB,CAAC,IAAI,CAAC;EAClC,CAAC;EAED,UAAU,CAAC,IAAwB;IACjC,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;MAC3C,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;KACvC;IAED,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE5C,IAAI,CAAC,MAAM,EAAE;MACX,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE;QACzC,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,IAAoB,CAAC,CAAC;QAC1F,IAAI,aAAa,GAAG,CAAC,CAAC,EAAE;UACtB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SAChE;OACF;MACD,OAAO;KACR;IAED,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS;MAClD,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;MACrD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAsB,CAAC,CAAC;MAC3D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;MAE9B,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QAC7B,IAAI,MAAM,CAAC,UAAU,EAAE;UACrB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;UAE5C,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;YACnC,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;WAC5C;SACF;aAAM;UACL,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACzB;OACF;WAAM,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;UACnC,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;SACxC;OACF;KACF;SAAM,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;MAC9D,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;MACvB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KACzB;EACH,CAAC;EAEO,yBAAyB,CAAC,IAAkB;IAClD,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAEnD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;MAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;EACH,CAAC;EAED,cAAc,CAAC,IAAkB;IAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE;MAC1C,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EAClE,CAAC;EAEO,eAAe,CAAC,OAA2B,EAAE,QAA6B,EAAE,KAAa,EAAE,MAAc;IAC/G,MAAM,YAAY,GAAiB;MACjC,IAAI,EAAE,sBAAsB,CAAC,SAAS;MACtC,WAAW,EAAE,uBAAuB,CAAC,QAAQ;MAC7C,KAAK,EAAE,CAAC,OAAO,CAAC;KACjB,CAAC;IAEF,YAAY,CAAC,gBAAgB,GAAG,QAAQ,CAAC;IACzC,YAAY,CAAC,aAAa,GAAG,KAAK,CAAC;IACnC,YAAY,CAAC,cAAc,GAAG,MAAM,CAAC;IAErC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE;MAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,GAAG,EAAE,CAAC;KAC5C;IACD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACzD,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,YAAY,CAAC;IAC5C,IAAI,CAAC,2BAA2B,GAAG,YAAY,CAAC,gBAAgB,CAAC;IACjE,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;EACpC,CAAC;EAED,oBAAoB,CAAC,IAAoC;IACvD,MAAM,KAAK,GAAqB,EAAE,CAAC;IACnC,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAEhD,OAAO,KAAK,CAAC;EACf,CAAC;EAEO,6BAA6B,CAAC,IAAoC,EAAE,QAA0B;IACpG,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;MAC9B,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;QACrD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OACtB;WAAM,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY;QAC3D,KAAK,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QACjD,IAAI,CAAC,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;OACrD;WAAM,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QAC7D,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;OAC9D;KACF;EACH,CAAC;EAED,wBAAwB,CAAC,IAAkB;IACzC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;MAC9B,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QACtD,OAAO,KAAK,CAAC;OACd;WAAM,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,MAAM,EAAE;UACV,OAAO,MAAM,CAAC;SACf;OACF;KACF;IAED,OAAO,IAAI,CAAC;EACd,CAAC;EAED,sBAAsB,CAAC,MAAuB;IAC5C,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;EAChE,CAAC;EAEO,aAAa,CAAC,WAA+B;IACnD,OAAO,WAAW,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;MAC5E,WAAW,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,IAAI,WAAW,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,CAAC,CAAC;QACjH,WAAW,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;UAC9B,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB,WAAW,CAAC,CAAC;QACf,WAAW,CAAC;EAClB,CAAC;EAEO,kBAAkB,CAAC,IAAkB;IAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACpD,IAAI,OAAO,EAAE;MACX,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAiB,CAAC;MACvD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;MAE5C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;QACzD,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,OAAO,CAAC,QAAQ,CAAC;KACpB;EACH,CAAC;EAEO,YAAY,CAAC,UAA8B,EAAE,WAA4D;IAC/G,IAAI,eAA+C,CAAC;IAEpD,IAAI,UAAU,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;MAC3D,eAAe,GAAG,UAAU,CAAC;KAC9B;SAAM,IAAI,UAAU,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;MACjE,eAAe,GAAG;QAChB,IAAI,EAAE,sBAAsB,CAAC,YAAY;QACzC,IAAI,EAAE,UAAU,CAAC,IAAI;QACrB,KAAK,EAAE,CAAC,UAAU,CAAC;OACpB,CAAC;MACF,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAiB,CAAC;MACxE,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;MACrD,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;KAC7C;SAAM,IAAI,UAAU,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;MAC/D,eAAe,GAAG,UAAU,CAAC;KAC9B;SAAM,IAAI,UAAU,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;MAClE,eAAe,GAAG,UAAU,CAAC,QAAQ,CAAC;KACvC;IAED,IAAI,eAAe,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;MAChE,MAAM,WAAW,GAAG,CAAC,WAAW,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;QAC7E,CAAC,WAAW,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;MACzC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;KAC5C;SAAM,IAAI,eAAe,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;MACpE,IAAI,UAAU,GAAG,WAAW,CAAC;MAE7B,IAAI,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,MAAK,sBAAsB,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE;QAC/F,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QACrC,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAC1D,UAAU,GAAG,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;OACnE;MAED,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACxC;EACH,CAAC;EAEO,UAAU,CAAC,UAA8B,EAAE,QAAqC;IACtF,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAiB,CAAC;IAChE,IAAI,CAAC,YAAY,EAAE;MACjB,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;KACpE;IAED,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACzD,MAAM,mBAAmB,GAAG,KAAK,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;IACvE,MAAM,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACpE,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa;MAC1C,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,KAAK,KAAK;MACtC,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,KAAK,CAAC;IACvE,IAAI,WAAW,GAAuB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;IAEnE,IAAI,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,MAAK,sBAAsB,CAAC,SAAS;MACxD,IAAI,CAAC,WAAW,CAAC,gBAAgB;MACjC,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,0BAA0B,EAAE;MACjE,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;KACtC;SAAM,IAAI,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,MAAK,sBAAsB,CAAC,WAAW;MACjE,IAAI,CAAC,WAAW,CAAC,gBAAgB;MACjC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,0BAA0B,EAAE;MAChE,WAAW,GAAG;QACZ,IAAI,EAAE,sBAAsB,CAAC,YAAY;QACzC,QAAQ,EAAE;UACR,IAAI,EAAE,sBAAsB,CAAC,SAAS;UACtC,WAAW,EAAE,uBAAuB,CAAC,UAAU;UAC/C,KAAK,EAAE,CAAC,WAAW,CAAC;SACrB;OACF,CAAC;KACH;IAED,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IAE/F,IAAI,CAAC,mBAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC,mBAAmB,IAAI,CAAC,mBAAmB,CAAC,EAAE;MAClG,MAAM,WAAW,GAAG,KAAK,CAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;QACpE,KAAK,CAAC,2BAA2B,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,CAAC;QACtD,SAAS,CAAC,CAAC;QACX,SAAS,GAAG,CAAC,CAAC;MAChB,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;KACvD;SAAM;MACL,MAAM,YAAY,GAAiB;QACjC,IAAI,EAAE,sBAAsB,CAAC,SAAS;QACtC,WAAW,EAAE,mBAAmB,CAAC,CAAC,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC,CAAC,uBAAuB,CAAC,QAAQ;QACxG,KAAK,EAAE,KAAK,CAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;UACvD,KAAK,CAAC,2BAA2B,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,CAAC;UACtD,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;UAC1B,CAAC,UAAU,EAAE,UAAU,CAAC;QAC1B,IAAI,EAAE,UAAU,CAAC,IAAI;OACtB,CAAC;MAEF,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;MAC5B,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;MAC5B,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC;KAC9C;EACH,CAAC;EAEO,YAAY;IAClB,IAAI,CAAC,WAAW,CAAC,MAAM,qBAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,CAAC;EAC3D,CAAC;EAEO,gBAAgB,CAAC,IAAwB;IAC/C,OAAO,aAAa,IAAI,IAAI,CAAC;EAC/B,CAAC;EAED,oBAAoB;IAClB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACtI,OAAO,aAAa,CAAC;EACvB,CAAC;EAED,aAAa;IACX,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAA0C,CAAC;IACvE,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAAuC,CAAC;IAC1E,IAAI,CAAC,qBAAqB,GAAG,IAAI,GAAG,EAA0B,CAAC;IAC/D,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IACxB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAC9B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAE3B,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;IAEvC,IAAI,MAAM,EAAE;MACV,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;MACvD,IAAI,MAAM,CAAC,aAAa,EAAE;QACxB,MAAM,eAAe,GAAG,IAAI,GAAG,CAAuB,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;QAEhG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UACpD,MAAM,IAAI,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;UACrC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;UAE7C,IAAI,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACtD,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;WAC9B;eAAM;YACL,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;WACvD;SACF;QAED,KAAK,MAAM,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,EAAE;UACxC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACtD;OACF;MACD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;MAE3C,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;QAC7F,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;OACpC;KACF;EACH,CAAC;EAED,SAAS,CAAC,IAAwB;IAChC,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EACtC,CAAC;EAED,aAAa,CAAC,IAAwB;IACpC,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAiB,CAAC;EACnD,CAAC;EAED,WAAW,CAAC,IAAwB;IAClC,MAAM,IAAI,GAAyB,EAAE,CAAC;IACtC,IAAI,WAAW,GAAG,IAAI,CAAC;IAEvB,OAAO,WAAW,EAAE;MAClB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;MAC/B,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;KACnD;IAED,OAAO,IAAI,CAAC;EACd,CAAC;EAED,gBAAgB,CAAC,IAAwB;IACvC,IAAI,MAAM,GAAG,IAAI,CAAC;IAElB,GAAG;MACD,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACzC,QAAQ,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;IAExE,OAAO,MAAyB,CAAC;EACnC,CAAC;EAED,gBAAgB,CAAC,KAAa;IAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,2BAA2B,CAAC;IAErF,MAAM,OAAO,GAAG,QAAQ,KAAK,mBAAmB,CAAC,IAAI,IAAI,QAAQ,KAAK,mBAAmB,CAAC,GAAG,CAAC,CAAC;MAC7F,QAAQ,GAAG,KAAK,CAAC,CAAC;MAClB,QAAQ,GAAG,KAAK,CAAC;IACnB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;IAE5B,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,UAAU,CAAC,IAAwB,EAAE,eAAuB;IAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAiB,CAAC;IACxD,MAAM,UAAU,GAAG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;IAChE,MAAM,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAE3C,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC;IAC/F,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,eAAe,GAAG,OAAO,CAAC;IAE5C,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IACtE,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;IAE9D,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,SAAS,CAAC,IAAoB,EAAE,WAAW,GAAG,cAAc,CAAC,QAAQ;IACnE,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC5C,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,CAAC;IACvE,MAAM,KAAK,GAAG,UAAU,IAAI,WAAW,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC;MACnE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC;MACpD,CAAC,IAAI,CAAC,CAAC;IAET,MAAM,iBAAiB,GAAG,UAAU,IAAI,WAAW,KAAK,cAAc,CAAC,YAAY,CAAC;IAEpF,IAAI,iBAAiB,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE;MAC5F,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC;KAC1B;IAED,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;IAErD,MAAM,IAAI,GAA2B;MACnC,UAAU,EAAE,IAAI;MAChB,KAAK;MACL,QAAQ;MACR,QAAQ;KACT,CAAC;IACF,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE3D,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;MAC3B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;QAC3B,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;OACxB;MAED,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QAClC,MAAM,WAAW,GAAyC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,KAAK,MAAM;UAClK,CAAC,CAAC,CAAC,MAAM,CAAC;UACV,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QAEf,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;QAEtC,KAAK,MAAM,EAAE,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;UAC1D,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;SACxB;QAED,QAAQ,CAAC,CAAC;UACR,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;UACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;OACzB;WAAM,IAAI,QAAQ,EAAE;QACnB,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;OACpC;MAED,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;EACH,CAAC;EAED,SAAS,CAAC,IAAoB;IAC5B,IAAI,YAAY,GAAuB,IAAI,CAAC;IAE5C,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;MAC5F,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MAE5C,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QACvD,YAAY,GAAG,MAAM,CAAC;OACvB;KACF;IAED,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,CAAC,CAAC;MAC7E,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;MAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAE3C,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;MACxE,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;KACpC;IAED,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,iBAAiB,CAAC,IAAkB;IAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAEO,aAAa,CAAC,UAA8B,EAAE,KAAuB;IAC3E,IAAI,WAAW,GAAG,KAAK,CAAC;IACxB,MAAM,IAAI,GAA0B,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;IAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEpD,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;MAC3B,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;QAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,WAAW,GAAG,IAAI,CAAC;OACpB;KACF;IAED,OAAO,WAAW,CAAC;EACrB,CAAC;EAEO,kBAAkB,CAAC,UAA8B,EAAE,IAAoC;IAC7F,IAAI,WAAW,GAAG,KAAK,CAAC;IAExB,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;OACxC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;OACxC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,IAAI,UAAU,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW;MACpH,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,KAAK;MACtB,CAAC,CAAC,IAAI,CAAC,CAAC;IAEhB,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAEpD,OAAO,WAAW,CAAC;EACrB,CAAC;EAED,UAAU,CAAC,IAAoB;IAC7B,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;EACnF,CAAC;EAED,YAAY,CAAC,IAAS;IACpB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACpC,MAAM,UAAU,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;IACzI,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;IAEnG,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;MAClC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;KAC/B;SAAM;MACL,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;KAChC;IAED,IAAI,UAAU,CAAC,IAAI,IAAI,sBAAsB,CAAC,WAAW;MAAE,OAAO;IAElE,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;MACpF,EAAE,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;KACzC;EACH,CAAC;EAED,gBAAgB,CAAC,IAAkB,EAAE,QAA6B;IAChE,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;IACjC,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,uBAAuB,CAAC,IAAkB,EAAE,eAAmC;;IAC7E,MAAM,UAAU,GAAmC;MACjD,UAAU,EAAE,IAAI;MAChB,eAAe;KAChB,CAAC;IAEF,MAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnF,IAAI,gBAAgB,CAAC,gBAAgB,EAAE;MACrC,OAAO,KAAK,CAAC;KACd;IAED,IAAI,CAAC,2BAA2B,GAAG,MAAA,IAAI,CAAC,gBAAgB,mCAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAC3E,IAAI,CAAC,wBAAwB,GAAG,MAAA,IAAI,CAAC,aAAa,mCAAI,qBAAqB,CAAC;IAC5E,IAAI,CAAC,yBAAyB,GAAG,MAAA,IAAI,CAAC,cAAc,mCAAI,qBAAqB,CAAC;IAE9E,OAAO,IAAI,CAAC;EACd,CAAC;EAED,kBAAkB,CAAC,IAAkB,EAAE,IAAiC;IACtE,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,qBAAqB,CAAC;IAC9E,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,qBAAqB,CAAC;IAChF,MAAM,IAAI,GAAG,qBAAqB,CAAC;IACnC,MAAM,IAAI,GAAG,qBAAqB,CAAC;IACnC,MAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC;IACnD,MAAM,aAAa,GAAG,IAAI,CAAC,yBAAyB,CAAC;IACrD,MAAM,eAAe,GAAG,IAAI,CAAC,2BAA2B,CAAC;IAEzD,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;IAClD,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;IAClD,IAAI,IAAI,GAAG,KAAK,CAAC;IACjB,IAAI,IAAI,GAAG,KAAK,CAAC;IACjB,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,SAAS,GAAG,KAAK,CAAC;IACtB,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC;IACxD,MAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC;IAEtD,QAAQ,IAAI,CAAC,eAAe,EAAE;MAC5B,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;MAC9B,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;MAClC,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAChC,SAAS,GAAG,aAAa,GAAG,YAAY,CAAC;QACzC,IAAI,SAAS,GAAG,IAAI,EAAE;UACpB,YAAY,GAAG,aAAa,GAAG,IAAI,CAAC;UACpC,SAAS,GAAG,IAAI,CAAC;SAClB;QACD,IAAI,GAAG,eAAe,CAAC,CAAC,GAAG,YAAY,CAAC;QACxC,IAAI,IAAI,GAAG,CAAC,EAAE;UACZ,SAAS,IAAI,IAAI,CAAC;UAClB,IAAI,GAAG,CAAC,CAAC;SACV;aAAM,IAAI,IAAI,IAAI,SAAS,GAAG,CAAC,EAAE;UAChC,IAAI,GAAG,SAAS,GAAG,CAAC,CAAC;SACtB;QACD,MAAM;MACR,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;MACjC,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;MACrC,KAAK,CAAC,kBAAkB,CAAC,WAAW,CAAC;QACnC,SAAS,GAAG,aAAa,GAAG,YAAY,CAAC;QACzC,IAAI,SAAS,GAAG,IAAI,EAAE;UACpB,SAAS,GAAG,IAAI,CAAC;SAClB;QACD,IAAI,IAAI,GAAG,SAAS,GAAG,SAAS,EAAE;UAChC,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC;SAC9B;QACD,MAAM;KACT;IAED,QAAQ,IAAI,CAAC,eAAe,EAAE;MAC5B,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;MAC/B,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;MAClC,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC;QAClC,QAAQ,GAAG,YAAY,GAAG,YAAY,CAAC;QACvC,IAAI,QAAQ,GAAG,IAAI,EAAE;UACnB,YAAY,GAAG,YAAY,GAAG,IAAI,CAAC;UACnC,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,GAAG,eAAe,CAAC,CAAC,GAAG,YAAY,CAAC;QACxC,IAAI,IAAI,GAAG,CAAC,EAAE;UACZ,QAAQ,IAAI,IAAI,CAAC;UACjB,IAAI,GAAG,CAAC,CAAC;SACV;aAAM,IAAI,IAAI,IAAI,QAAQ,EAAE;UAC3B,IAAI,GAAG,QAAQ,CAAC;SACjB;QACD,MAAM;MACR,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;MAChC,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;MACnC,KAAK,CAAC,kBAAkB,CAAC,WAAW,CAAC;QACnC,QAAQ,GAAG,YAAY,GAAG,YAAY,CAAC;QACvC,IAAI,QAAQ,GAAG,IAAI,EAAE;UACnB,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,IAAI,GAAG,QAAQ,GAAG,QAAQ,EAAE;UAC9B,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;SAC5B;QACD,MAAM;KACT;IAED,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,SAAS,EAAE;MACjF,OAAO;KACR;IAED,MAAM,YAAY,GAAuC;MACvD,UAAU,EAAE,IAAI;MAChB,QAAQ,EAAE,KAAK;MACf,QAAQ;MACR,SAAS,EAAE,KAAK;MAChB,SAAS;MACT,WAAW,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE;MACnC,WAAW,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE;MACjC,eAAe,EAAE,IAAI,CAAC,eAAe;KACtC,CAAC;IAEF,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjF,IAAI,aAAa,CAAC,gBAAgB,EAAE;MAClC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;MAChC,OAAO;KACR;SAAM;MACL,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,WAAW,CAAC;MACjD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,QAAQ,CAAC;MAC3C,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,SAAS,CAAC;MAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;EACH,CAAC;EAED,qBAAqB,CAAC,IAAkB,EAAE,eAAmC;IAC3E,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC;MAC1C,UAAU,EAAE,IAAI;MAChB,eAAe;KAAE,CAAC,CAAC;IAErB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;EACvC,CAAC;EAED,SAAS,CAAC,IAAoB,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc;IACjF,IAAI,aAAa,GAAyB,CAAC,IAAI,CAAC,CAAC;IACjD,IAAI,SAAS,GAAuB,IAAI,CAAC;IACzC,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE5C,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;MAC/F,IAAI,MAAM,CAAC,UAAU,EAAE;QACrB,MAAM,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,aAAa,GAAG,KAAK,CAAC;QACtB,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;UACrC,IAAI,CAAC,CAAC;UACN;YACE,IAAI,EAAE,sBAAsB,CAAC,YAAY;YACzC,KAAK;YACL,aAAa,EAAE,MAAM,CAAC,aAAa;WACpC,CAAC;OACL;WAAM;QACL,aAAa,GAAG,CAAC,MAAM,CAAC,CAAC;QACzB,SAAS,GAAG,MAAM,CAAC;OACpB;KACF;IAED,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAI,CAAC,eAAe,CAAC,SAAS,EAC5B,EAAE,CAAC,EAAE,CAAC,EAAE,EACR,KAAK,EACL,MAAM,CAAC,CAAC;IAEV,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;MACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;MACrB,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;KACpC;IAED,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,QAAQ,CAAC,IAAoB,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc;IAChF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAEtB,MAAM,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAClD,IAAI,OAA2B,CAAC;IAEhC,IAAI,WAAW,IAAI,IAAI,CAAC,YAAY,EAAE;MACpC,MAAM,OAAO,GAAoB;QAC/B,IAAI,EAAE,sBAAsB,CAAC,YAAY;QACzC,QAAQ,EAAE;UACR,IAAI,EAAE,sBAAsB,CAAC,SAAS;UACtC,WAAW,EAAE,uBAAuB,CAAC,QAAQ;UAC7C,KAAK,EAAE,CAAC,IAAI,CAAC;SACd;OACF,CAAC;MAEF,OAAO,GAAG,OAAO,CAAC;KACnB;SAAM;MACL,OAAO,GAAG,IAAI,CAAC;KAChB;IAED,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAEvD,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,qBAAqB,CAAC,IAAkB;IACtC,MAAM,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;IAErD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;MACzB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO,IAAI,CAAC;OACb;MAED,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MAE3B,IAAI,SAAS,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QACvD,OAAO,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;OAC9C;WAAM,IAAI,SAAS,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QACjE,OAAO,IAAI,CAAC;OACb;KACF;IAED,OAAO,KAAK,CAAC;EACf,CAAC;EAED,YAAY,CAAC,QAAqC;IAChD,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;IACvC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IACjC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IAEjI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAE5B,MAAM,mBAAmB,GAAG,QAAQ,KAAK,2BAA2B,CAAC,GAAG,IAAI,QAAQ,KAAK,2BAA2B,CAAC,MAAM,CAAC;IAC5H,MAAM,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IAChE,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,KAAK,CAAC;IAEjF,IAAI,CAAC,mBAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC,mBAAmB,IAAI,CAAC,mBAAmB,CAAC,EAAE;MAClG,MAAM,WAAW,GAAG,QAAQ,KAAK,2BAA2B,CAAC,IAAI,IAAI,CAAC,KAAK;QACzE,QAAQ,KAAK,2BAA2B,CAAC,KAAK,IAAI,KAAK;QACvD,QAAQ,KAAK,2BAA2B,CAAC,GAAG,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;MACxB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;KACnD;SAAM;MACL,MAAM,WAAW,GAAiB;QAChC,IAAI,EAAE,sBAAsB,CAAC,SAAS;QACtC,WAAW,EAAE,mBAAmB,CAAC,CAAC,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC,CAAC,uBAAuB,CAAC,QAAQ;QACxG,KAAK,EAAE,QAAQ,KAAK,2BAA2B,CAAC,IAAI,IAAI,CAAC,KAAK;UAC5D,QAAQ,KAAK,2BAA2B,CAAC,KAAK,IAAI,KAAK;UACvD,QAAQ,KAAK,2BAA2B,CAAC,GAAG,CAAC,CAAC;UAC9C,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;UACxB,CAAC,QAAQ,EAAE,UAAU,CAAC;OACzB,CAAC;MACF,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;MAC1B,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;MAE5B,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC;KAC/B;IAED,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,QAAQ,CAAC,QAAqC;;IAC5C,MAAM,mBAAmB,GAAG,MAAA,IAAI,CAAC,WAAW,CAAC,WAAW,mCAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACxF,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;IAE/D,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;IAErC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAExH,QAAQ,QAAQ,EAAE;MAChB,KAAK,2BAA2B,CAAC,MAAM;QACrC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;QACnD,MAAM;MACR,KAAK,2BAA2B,CAAC,IAAI,CAAC;MACtC,KAAK,2BAA2B,CAAC,GAAG,CAAC;MACrC,KAAK,2BAA2B,CAAC,KAAK,CAAC;MACvC,KAAK,2BAA2B,CAAC,MAAM;QACrC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM;MACR,KAAK,2BAA2B,CAAC,SAAS,CAAC;MAC3C,KAAK,2BAA2B,CAAC,QAAQ,CAAC;MAC1C,KAAK,2BAA2B,CAAC,UAAU,CAAC;MAC5C,KAAK,2BAA2B,CAAC,WAAW;QAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACnC,MAAM;KACT;IAED,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,iBAAiB,CAAC,IAAoB;IACpC,OAAO,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC;EACjC,CAAC;EAED,mBAAmB,CAAC,IAAoB;IACtC,OAAO,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC;EACnC,CAAC;EAED,oBAAoB,CAAC,IAAoB;IACvC,OAAO,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;EACzD,CAAC;EAED,2BAA2B,CAAC,IAAkB;IAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;MAC3B,IAAI,CAAC,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;QACjD,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;OACrC;WAAM,IAAI,CAAC,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QACtD,OAAO,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;OACnE;WAAM,IAAI,CAAC,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QACzD,OAAO,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;OAC1E;WAAM,IAAI,CAAC,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;QACzD,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;OACrF;IACH,CAAC,CAAC,CAAC;EACL,CAAC;EAED,YAAY,CAAC,IAAoB;IAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACjC,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,sBAAsB,CAAC,IAAkB;IACvC,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC;IAC5D,MAAM,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC;IACzE,MAAM,SAAS,GAAG,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAEpD,KAAK,MAAM,CAAC,IAAI,aAAa,EAAE;MAC7B,MAAM,MAAM,GAAG,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAE9C,IAAI,MAAM,GAAG,SAAS,EAAE;QACtB,SAAS;OACV;WAAM,IAAI,MAAM,GAAG,SAAS,EAAE;QAC7B,uBAAuB,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;OAC5C;WAAM;QACL,uBAAuB,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;OAC1D;KACF;IAED,IAAI,CAAC,WAAW,CAAC,uBAAuB,GAAG,IAAI,GAAG,CAAuB,uBAAuB,CAAC,CAAC;EACpG,CAAC;EAED,sBAAsB,CAAC,IAAoB;IACzC,MAAM,KAAK,GAAyB,EAAE,CAAC;IAEvC,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE;MAClC,KAAK,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACrI;IAED,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;MAC/B,KAAK,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;KAC/J;IAED,OAAO,KAAK,CAAC;EACf,CAAC;EAED,aAAa,CAAC,IAAmC,EAAE,IAAa,EAAE,OAAe,EAAE,OAAe;;IAChG,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;MAClC,OAAO,KAAK,CAAC;KACd;IAED,IAAI,KAAuB,CAAC;IAC5B,IAAI,MAA0B,CAAC;IAE/B,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;MACpD,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;MAC9B,KAAK,GAAG,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACnG,MAAM,CAAC,KAAK,CAAC,CAAC;QACd,CAAC,IAAI,CAAC,CAAC;KACV;SAAM;MACL,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,KAAK,IAAI,EAAE;QACzC,OAAO,IAAI,CAAC;OACb;MACD,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;KACzC;IAED,MAAM,yBAAyB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC;IAE1H,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,IAAI,yBAAyB,EAAE;MACjF,OAAO,KAAK,CAAC;KACd;IAED,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IAExF,IAAI,cAAc,CAAC,gBAAgB,EAAE;MACnC,OAAO,KAAK,CAAC;KACd;IAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC1B,IAAI,CAAC,sBAAsB,GAAG;MAC5B,CAAC,EAAE,OAAO;MACV,CAAC,EAAE,OAAO;KACX,CAAC;IAEF,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;MAClD,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;MACpC,IAAI,CAAC,2BAA2B,GAAG,MAAA,IAAI,CAAC,gBAAgB,mCAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;KAC5E;SAAM;MACL,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,KAAK,CAAC,EAAE;QAC1D,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAyB,CAAC,CAAC,CAAC,IAAI,CAAC;QACnF,OAAO,IAAI,CAAC;OACb;MAED,MAAM,MAAM,GAAuB;QACjC,IAAI,EAAE,qBAAqB,CAAC,SAAS;QACrC,QAAQ,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;QAClC,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,MAAM,EAAE,IAAI,CAAC,MAAM;OACpB,CAAC;MACF,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;QACvD,UAAU,EAAE,IAAI;QAChB,KAAK;QACL,MAAM;QACN,OAAO,EAAE,IAAI;OACd,CAAC,CAAC;MAEH,IAAI,aAAa,CAAC,gBAAgB,EAAE;QAClC,OAAO,KAAK,CAAC;OACd;MAED,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE;QACjC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAyB,CAAC,CAAC,CAAC,IAAI,CAAC;QACnF,OAAO,IAAI,CAAC;OACb;MAED,IAAI,CAAC,SAAS,CAAC,IAAI,EACjB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,MAAM,CAAC,KAAK,EACZ,MAAM,CAAC,MAAM,CAAC,CAAC;MAEjB,OAAO,KAAK,CAAC;KACd;IAED,OAAO,IAAI,CAAC;EACd,CAAC;EAEO,iBAAiB,CAAC,OAAe,EAAE,OAAe,EAAE,QAA6B,EAAE,IAAkB;IAC3G,MAAM,eAAe,GAAG;MACtB,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KAC1B,CAAC;IACF,MAAM,eAAe,GAAG;MACtB,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa;MAClD,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc;KACrD,CAAC;IAEF,IAAI,IAAI,CAAC,2BAA2B,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE;MAC1G,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;KAChC;SAAM,IAAI,IAAI,CAAC,2BAA2B,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;MAC1I,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;KAChC;IAED,IAAI,IAAI,CAAC,2BAA2B,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE;MAC1G,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;KAChC;SAAM,IAAI,IAAI,CAAC,2BAA2B,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;MAC5I,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;KAChC;IAED,OAAO,QAAQ,CAAC;EAClB,CAAC;EAED,YAAY,CAAC,OAAe,EAAE,OAAe;IAC3C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;IAEjD,IAAI,WAAW,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;MACzD,MAAM,WAAW,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAEjG,IAAI,WAAgC,CAAC;MAErC,WAAW,GAAG;QACZ,CAAC,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC/E,CAAC,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC;OAChF,CAAC;MAEF,IAAI,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE;QAC1C,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;OAClF;MAED,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;QACvD,UAAU,EAAE,WAAW;QACvB,KAAK,EAAE,IAAI,CAAC,YAAY;QACxB,MAAM,EAAE;UACN,IAAI,EAAE,qBAAqB,CAAC,gBAAgB;UAC5C,WAAW;UACX,WAAW;SACZ;QACD,OAAO,EAAE,IAAI;OACd,CAAC,CAAC;MAEH,IAAI,aAAa,CAAC,gBAAgB,EAAE;QAClC,OAAO,KAAK,CAAC;OACd;WAAM;QACL,IAAI,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE;UAChC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;SACjD;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC;OAC7D;KACF;IAED,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;EACzB,CAAC;EAED,WAAW;;IACT,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC/C,MAAM,WAAW,GAAG,MAAA,IAAI,CAAC,WAAW,CAAC,WAAW,mCAAI,IAAI,CAAC,UAAU,CAAC;IACpE,IAAI,MAAM,GAAG,KAAK,CAAC;IAEnB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC;MAChC,UAAU,EAAE,WAAW;MACvB,KAAK,EAAE,IAAI,CAAC,YAAY;KACzB,CAAC,CAAC;IAEH,IAAI,gBAAgB,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;MACpD,IAAI,WAAW,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;QAC3D,IAAI,WAAW,CAAC,QAAQ,KAAK,KAAK,EAAE;UAClC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;UAE5B,IAAI,WAAW,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;YAC/C,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;WACpC;SACF;OACF;MAED,IAAI,gBAAgB,CAAC,MAAM,EAAE;QAC3B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;OAC9C;WAAM;QACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;OAC1C;MAED,MAAM,GAAG,IAAI,CAAC;KACf;SAAM,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;MAC5E,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;MAC1C,MAAM,GAAG,IAAI,CAAC;KACf;IAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACvB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;IACpC,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,IAAI,CAAC;IAC3C,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC;IACvC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;IAEpC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAErC,OAAO,MAAM,CAAC;EAChB,CAAC;EAEO,iBAAiB,CAAC,gBAAqB;;IAC7C,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;MACxC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;MACxC,KAAK,EAAE,IAAI,CAAC,YAAY;MACxB,MAAM,EAAE;QACN,IAAI,EAAE,qBAAqB,CAAC,QAAQ;QACpC,gBAAgB,EAAE,gBAAgB;QAClC,UAAU,EAAE,MAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,0CAAE,IAAI;OACtD;MACD,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;EACL,CAAC;EAEO,QAAQ;IACd,IAAI,aAAa,CAAC;IAElB,IAAI,IAAI,CAAC,gBAAgB,EAAE;MACzB,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;MAE9D,IAAI,aAAa,CAAC,gBAAgB,EAAE;QAClC,OAAO,KAAK,CAAC;OACd;WAAM;QACL,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC;QAE5D,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;UAC9D,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;UACxF,IAAI,CAAC;OACR;KACF;SAAM,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;MACzC,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,KAAK,SAAS,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;MAEpG,MAAM,gBAAgB,GAAG;QACvB,QAAQ,EAAE,IAAI,CAAC,qBAAqB;QACpC,MAAM,EAAE,KAAK;QACb,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS;OACtC,CAAC;MAEF,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;MAEzD,IAAI,aAAa,CAAC,gBAAgB,EAAE;QAClC,OAAO,KAAK,CAAC;OACd;WAAM;QACL,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC;QAE5D,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,IAAI,CAAC,cAAc;UAC7G,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;UAChF,CAAC,CAAC,IAAI,CAAC;OACV;KACF;SAAM;MACL,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC;MAEvC,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,EAAE;QAC1E,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,KAAK,CAAC;OACtC;KACF;IAED,OAAO,IAAI,CAAC;EACd,CAAC;EAED,YAAY,CAAC,IAAoB;IAC/B,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,SAAS,CAAC;IAC3C,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAE7B,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,KAAK,IAAI,EAAE;MACzC,OAAO,IAAI,CAAC;KACb;IAED,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC;MACzD,UAAU,EAAE,IAAI;MAChB,KAAK,EAAE,CAAC,IAAI,CAAC;KACd,CAAC,CAAC;IAEH,IAAI,cAAc,CAAC,gBAAgB,EAAE;MACnC,OAAO,KAAK,CAAC;KACd;IAED,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;IACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACvB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC;IAE3B,OAAO,IAAI,CAAC;EACd,CAAC;EAED,WAAW,CAAC,IAAoB,EAAE,IAA+B,EAAE,KAAsB;IACvF,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvC,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAEvC,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IACpC,MAAM,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;IAC5C,MAAM,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;IAC5C,MAAM,qBAAqB,GAAG,KAAK,CAAC,qBAAqB,CAAC;IAC1D,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAEhC,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE;MACrC,MAAM,YAAY,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC;MAC9D,MAAM,YAAY,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC;MAC7D,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC;KACzE;IAED,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK;SAC3B,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,IAAI,OAAO,GAAG,UAAU,CAAC,GAAG,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE;MACrH,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;MACpC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;IAED,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;IACpC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;IAEpC,MAAM,SAAS,GAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAEhF,IAAI,cAAc;SACX,OAAO,GAAG,UAAU,CAAC,IAAI;SACzB,OAAO,GAAG,IAAI,CAAC,kBAAkB;SACjC,OAAO,GAAG,CAAC,EAAE;MAClB,IAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC,IAAI,CAAC;MAC9C,MAAM,MAAM,GAAqB;QAC/B,IAAI,EAAE,qBAAqB,CAAC,OAAO;QACnC,QAAQ,EAAE,SAAS;QACnB,QAAQ,EAAE,SAAS,GAAG,CAAC;OACxB,CAAC;MACF,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;QACvD,UAAU,EAAE,IAAI;QAChB,KAAK,EAAE,CAAC,IAAI,CAAC;QACb,MAAM;QACN,OAAO,EAAE,IAAI;OACd,CAAC,CAAC;MAEH,IAAI,aAAa,CAAC,gBAAgB,EAAE;QAClC,OAAO,KAAK,CAAC;OACd;WAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE;QACxC,OAAO,IAAI,CAAC;OACb;MACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACzB;SAAM,IAAI,cAAc;SACV,OAAO,GAAG,UAAU,CAAC,KAAK;SAC1B,OAAO,GAAG,IAAI,CAAC,mBAAmB;SAClC,OAAO,GAAG,CAAC,EAAE;MAC1B,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC,KAAK,CAAC;MAChD,IAAI,UAAU,CAAC,GAAG,KAAK,cAAc,CAAC,GAAG,EAAE;QACzC,MAAM,MAAM,GAAqB;UAC/B,IAAI,EAAE,qBAAqB,CAAC,OAAO;UACnC,QAAQ,EAAE,SAAS;UACnB,QAAQ,EAAE,SAAS,GAAG,CAAC;SACxB,CAAC;QACF,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;UACvD,UAAU,EAAE,IAAI;UAChB,KAAK,EAAE,CAAC,IAAI,CAAC;UACb,MAAM;UACN,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,IAAI,aAAa,CAAC,gBAAgB,EAAE;UAClC,OAAO,KAAK,CAAC;SACd;aAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE;UACxC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;OAC1B;KACF;IAED,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,yBAAyB;SAC/C,QAAQ,CAAC,IAAI,GAAG,OAAO,GAAG,yBAAyB;SACnD,OAAO,GAAG,qBAAqB,CAAC,KAAK,GAAG,yBAAyB,EAAE;MACxE,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QACnE,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAG,OAAO,EAAG,QAAQ,CAAC,CAAC;OAChE;KACF;IAED,OAAO,IAAI,CAAC;EACd,CAAC;EAEO,cAAc,CAAC,IAAoB,EAAE,OAAe,EAAE,OAAe,EAAE,QAAiB;IAC9F,MAAM,IAAI,GAAG,IAAI,OAAO,CACtB,OAAO,GAAG,IAAI,CAAC,2BAA2B,CAAC,CAAC,EAC5C,OAAO,GAAG,IAAI,CAAC,2BAA2B,CAAC,CAAC,EAC5C,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,MAAM,CAAC,CAAC;IAEnB,IAAI,KAAuB,CAAC;IAC5B,IAAI,MAA0B,CAAC;IAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;MACpD,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;MAC9B,KAAK,GAAG,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACnG,MAAM,CAAC,KAAK,CAAC,CAAC;QACd,CAAC,IAAI,CAAC,CAAC;KACV;IAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAEvB,MAAM,MAAM,GAAuB;MACjC,IAAI,EAAE,qBAAqB,CAAC,SAAS;MACrC,QAAQ,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;MAClC,KAAK,EAAE,IAAI,CAAC,KAAK;MACjB,MAAM,EAAE,IAAI,CAAC,MAAM;KACpB,CAAC;IACF,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;MACvD,UAAU,EAAE,IAAI;MAChB,KAAK;MACL,MAAM;MACN,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;IAEH,IAAI,aAAa,CAAC,gBAAgB,EAAE;MAClC,OAAO,KAAK,CAAC;KACd;SAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE;MACxC,OAAO,IAAI,CAAC;KACb;IAED,IAAI,CAAC,sBAAsB,GAAG;MAC5B,CAAC,EAAE,OAAO;MACV,CAAC,EAAE,OAAO;KACX,CAAC;IAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,EAChB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,MAAM,CAAC,KAAK,EACZ,MAAM,CAAC,MAAM,CAAC,CAAC;IAEjB,OAAO,KAAK,CAAC;EACf,CAAC;EAEO,8BAA8B,CAAC,IAAoC;IACzE,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC9C,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;IAErE,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAC,OAAA,MAAA,CAAC,CAAC,aAAa,mCAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAA,EAAA,CAAC,CAAC;EACpF,CAAC;EAED,sBAAsB,CAAC,IAAoB;IACzC,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;MAClC,MAAM,KAAK,GACT,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY;QACrJ,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAC3D,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;MAEvC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;OACnD;KACF;EACH,CAAC;EAED,oBAAoB,CAAC,IAAwB;;IAC3C,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;MACvG,OAAO,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC;KAClD;SAAM,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC,WAAW,EAAE;MAC3D,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;QACjC,OAAO,MAAA,IAAI,CAAC,aAAa,mCAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;OAC7D;MAED,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;MACpC,OAAO,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY;QACxD,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;QAC7C,CAAC,CAAC,MAAA,IAAI,CAAC,aAAa,mCAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;KAC1D;EACH,CAAC;EAED,iBAAiB,CAAC,eAA6C,EAAE,gBAAyB;;IACxF,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;IACjC,eAAe,GAAG,eAAe,aAAf,eAAe,cAAf,eAAe,GAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IACpE,gBAAgB,GAAG,gBAAgB,aAAhB,gBAAgB,cAAhB,gBAAgB,GAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;IAEvE,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC;IAC7C,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;IAC/D,IAAI,kBAAkB,IAAI,CAAC,UAAU,EAAE;MACrC,MAAM,UAAU,GAAG,kBAAkB,CAAC,UAAU,CAAC;MACjD,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;MAC5B,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;MAC5B,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;MACpC,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;MACtC,OAAO,UAAU,CAAC;KACnB;SAAM,IAAI,CAAC,kBAAkB,IAAI,CAAC,UAAU,EAAE;MAC7C,OAAO;KACR;IAED,MAAM,eAAe,GAAG,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,mCAAI,qBAAqB,CAAC;IACvG,MAAM,OAAO,GAAG,KAAK,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;IAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,kBAAkB,CAAC,UAAU,CAAC;IAEtE,IAAI,eAAe,KAAK,2BAA2B,CAAC,MAAM,EAAE;MAC1D,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;MAC1B,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;MAC1B,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;MAClC,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;MACpC,OAAO,UAAU,CAAC;KACnB;IAED,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC;IAClF,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAiB,CAAC;IAChE,MAAM,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC;IAC7D,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IAErE,IAAI,gBAAgB,GAAG,CAAC,CAAC,EAAE;MACzB,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;KACnC;IACD,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAElD,MAAM,mBAAmB,GAAG,KAAK,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;IAC9E,MAAM,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;IACpE,MAAM,eAAe,GAAG,CAAC,CAAC,mBAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC,mBAAmB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACzH,MAAM,KAAK,GAAG,gBAAgB,KAAK,KAAK,CAAC;IAEzC,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;IACxF,MAAM,oBAAoB,GAAG,CAAC,KAAK,IAAI,mBAAmB;MACxD,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,qBAAqB,CAAC,EAAE,CAAC,CAAC;MAC5F,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1G,MAAM,mBAAmB,GAAG,CAAC,KAAK,IAAI,mBAAmB;MACvD,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,qBAAqB,CAAC,EAAE,CAAC,CAAC;MAChG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9G,QAAQ,eAAe,EAAE;MACvB,KAAK,2BAA2B,CAAC,IAAI,CAAC;MACtC,KAAK,2BAA2B,CAAC,SAAS;QACxC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACpC,IAAI,eAAe,EAAE;UACnB,UAAU,CAAC,KAAK,GAAG,CAAC,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;UAC7F,CAAC,KAAK;YACJ,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,GAAG,oBAAoB,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,UAAU,CAAC,KAAK;YAC/G,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,GAAG,mBAAmB,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;SAClH;aAAM;UACL,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;SACzC;QACD,MAAM;MACR,KAAK,2BAA2B,CAAC,KAAK,CAAC;MACvC,KAAK,2BAA2B,CAAC,UAAU;QACzC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACpC,IAAI,eAAe,EAAE;UACnB,UAAU,CAAC,KAAK,GAAG,CAAC,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;UAC7F,CAAC,KAAK;YACJ,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,GAAG,mBAAmB,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,UAAU,CAAC,KAAK;YAC9G,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,GAAG,oBAAoB,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;SACnH;aAAM;UACL,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;UACxC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;SACpD;QACD,MAAM;MACR,KAAK,2BAA2B,CAAC,GAAG,CAAC;MACrC,KAAK,2BAA2B,CAAC,QAAQ;QACvC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClC,IAAI,eAAe,EAAE;UACnB,UAAU,CAAC,MAAM,GAAG,CAAC,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;UAC/F,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,GAAG,oBAAoB,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;SAC/G;aAAM;UACL,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;SAC3C;QACD,MAAM;MACR,KAAK,2BAA2B,CAAC,MAAM,CAAC;MACxC,KAAK,2BAA2B,CAAC,WAAW;QAC1C,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClC,IAAI,eAAe,EAAE;UACnB,UAAU,CAAC,MAAM,GAAG,CAAC,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;UAC/F,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,GAAG,mBAAmB,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;SAC9G;aAAM;UACL,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;UAC1C,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;SACtD;QACD,MAAM;KACT;IAED,OAAO,UAAU,CAAC;EACpB,CAAC;EAED,qBAAqB;;IACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC;IAC3C,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;IACjC,MAAM,eAAe,GAAG,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,mCAAI,qBAAqB,CAAC;IACvG,MAAM,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAEjF,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IAErE,IAAI,gBAAgB,GAAG,CAAC,CAAC,EAAE;MACzB,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;KACnC;IAED,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;IAExF,MAAM,mBAAmB,GAAG,KAAK,CAAC,0BAA0B,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC7F,MAAM,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxF,MAAM,eAAe,GAAG,CAAC,mBAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC,mBAAmB,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACvH,MAAM,kBAAkB,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;IAE9C,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;MACtC,KAAK,2BAA2B,CAAC,IAAI;QACnC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACpC,UAAU,CAAC,KAAK,GAAG,eAAe,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC1J,MAAM;MACR,KAAK,2BAA2B,CAAC,KAAK;QACpC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACpC,UAAU,CAAC,KAAK,GAAG,eAAe,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC7K,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;QACjD,MAAM;MACR,KAAK,2BAA2B,CAAC,GAAG;QAClC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClC,UAAU,CAAC,MAAM,GAAG,eAAe,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7J,MAAM;MACR,KAAK,2BAA2B,CAAC,MAAM;QACrC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC1B,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClC,UAAU,CAAC,MAAM,GAAG,eAAe,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7J,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QACnD,MAAM;KACT;IAED,OAAO,UAAU,CAAC;EACpB,CAAC;EAED,eAAe,CAAC,QAAyB,EAAE,IAAoB;IAC7D,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3C,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAClC,QAAQ,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;EACtB,CAAC;EAED,YAAY,CAAC,IAAoB;IAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAoB,CAAC;IACzD,MAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAElD,IAAI,YAAY,GAAG,CAAC,EAAE;MACpB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;MACvC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;MACjD,QAAQ,CAAC,aAAa,GAAG,YAAY,GAAG,CAAC,CAAC;MAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;EACjC,CAAC;EAED,aAAa,CAAC,IAAoB;IAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAoB,CAAC;IACzD,MAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAElD,IAAI,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;MAC5C,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;MACvC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;MACjD,QAAQ,CAAC,aAAa,GAAG,YAAY,GAAG,CAAC,CAAC;MAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;EACjC,CAAC;EAED,mBAAmB;IACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EACvE,CAAC;EAED,sBAAsB;IACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC7E,CAAC;EAED,oBAAoB,CAAC,WAAoB;IACvC,MAAM,iBAAiB,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;IACrF,MAAM,eAAe,GAAG,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC/E,MAAM,QAAQ,GAAG,eAAe,GAAG,CAAC,CAAC,CAAC;MACpC,iBAAiB,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;MACxC,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAElD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,QAAQ,CAAC;EACzC,CAAC;EAED,oBAAoB,CAAC,WAAoB;IACvC,MAAM,iBAAiB,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;IACrF,MAAM,eAAe,GAAG,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC/E,MAAM,QAAQ,GAAG,CAAC,eAAe,IAAI,CAAC,IAAI,eAAe,GAAG,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MACzF,iBAAiB,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;MACxC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAEvB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,QAAQ,CAAC;EACzC,CAAC;CACF","sourcesContent":["import { Utils } from '../../utils/utils';\r\nimport { IgcDragMoveEventArguments, IgcDragResizeEventArguments } from '../drag-drop/drag.service';\r\n\r\nimport {\r\n  IGC_DEFAULT_PANE_SIZE, IGC_DEFAULT_UNPIN_PANE_SIZE, IGC_DRAG_FLYOUT_THRESHOLD, IgcContextMenuItem, IgcDockManagerComponentBase,\r\n  IgcPinBehavior, IgcTabRectsInfo\r\n} from './dockmanager.interfaces';\r\nimport {\r\n  IgcContentPane, IgcDockManagerPane, IgcDockManagerPaneType, IgcDockManagerPoint, IgcDockingIndicator, IgcDockingIndicatorPosition,\r\n  IgcDocumentHost, IgcFloatPaneAction, IgcFloatingPaneResizeEventArgs, IgcFloatingPaneResizeMoveEventArgs, IgcMoveTabAction, IgcPaneCloseEventArgs, IgcPaneDragActionType,\r\n  IgcPanePinnedEventArgs, IgcResizerLocation, IgcSplitPane, IgcSplitPaneOrientation, IgcTabGroupPane, IgcUnpinnedLocation\r\n} from './dockmanager.public-interfaces';\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport class IgcDockManagerService {\r\n  private paneParentMap: Map<IgcDockManagerPane, IgcDockManagerPane>;\r\n  private initialFloatingPaneLocation: IgcDockManagerPoint;\r\n  private initialFloatingPaneWidth: number;\r\n  private initialFloatingPaneHeight: number;\r\n  private initialTabHeaderClickOffset: IgcDockManagerPoint;\r\n  private initialDragClientPoint: IgcDockManagerPoint;\r\n  private draggedPanes: IgcContentPane[];\r\n  private draggedTab: IgcContentPane;\r\n  private shiftLeftThreshold: number;\r\n  private shiftRightThreshold: number;\r\n  private documentsCache: IgcContentPane[];\r\n  private contentPanesCache: IgcContentPane[];\r\n\r\n  visibleDocuments: IgcContentPane[];\r\n  visibleContentPanes: IgcContentPane[];\r\n  documentHosts: IgcDocumentHost[];\r\n  clientContentPanesMap: Map<string, IgcContentPane>;\r\n  dropTargetParentRect: DOMRect;\r\n  dockManagerRect: DOMRect;\r\n  dockingIndicator: IgcDockingIndicator;\r\n  forceDragPane: IgcSplitPane;\r\n  forceDragTabHeader: IgcContentPane;\r\n  unpinnedLocationMap = new Map<IgcContentPane, IgcUnpinnedLocation>();\r\n  keyboardDockPane: IgcContentPane = null;\r\n  proximityDockPosition: IgcDockingIndicatorPosition;\r\n\r\n  constructor(public dockManager: IgcDockManagerComponentBase) {\r\n\r\n  }\r\n\r\n  getContent(contentId: string): IgcDockManagerPane {\r\n    return this.clientContentPanesMap.get(contentId);\r\n  }\r\n\r\n  private generateUuid(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n      const r = Math.random() * 16 | 0;\r\n      const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n  private populatePaneParents(splitPane: IgcSplitPane, isRoot: boolean, isInDocHost: boolean) {\r\n    if (!splitPane) {\r\n      return;\r\n    }\r\n\r\n    if (!splitPane.id) {\r\n      splitPane.id = this.generateUuid();\r\n    }\r\n\r\n    for (const pane of splitPane.panes) {\r\n      this.paneParentMap.set(pane, splitPane);\r\n\r\n      if (!pane.id) {\r\n        pane.id = this.generateUuid();\r\n      }\r\n\r\n      if (pane.type === IgcDockManagerPaneType.contentPane && !pane.hidden) {\r\n        this.clientContentPanesMap.set(pane.contentId, pane);\r\n        if (isInDocHost) {\r\n          this.visibleDocuments.push(pane);\r\n        } else {\r\n          this.visibleContentPanes.push(pane);\r\n        }\r\n      } else if (pane.type === IgcDockManagerPaneType.splitPane) {\r\n        this.populatePaneParents(pane, isRoot, isInDocHost);\r\n      } else if (pane.type === IgcDockManagerPaneType.tabGroupPane) {\r\n        for (const cp of pane.panes) {\r\n          if (!cp.id) {\r\n            cp.id = this.generateUuid();\r\n          }\r\n          this.paneParentMap.set(cp, pane);\r\n\r\n          if (!cp.hidden) {\r\n            this.clientContentPanesMap.set(cp.contentId, cp);\r\n            if (isInDocHost) {\r\n              this.visibleDocuments.push(cp);\r\n            } else {\r\n              this.visibleContentPanes.push(cp);\r\n            }\r\n          }\r\n        }\r\n      } else if (pane.type === IgcDockManagerPaneType.documentHost) {\r\n        if (isRoot) {\r\n          this.documentHosts.push(pane);\r\n        }\r\n        this.paneParentMap.set(pane.rootPane, pane);\r\n        this.populatePaneParents(pane.rootPane, isRoot, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  private populatePinLocations(splitPane: IgcSplitPane) {\r\n    if (!splitPane) {\r\n      return;\r\n    }\r\n\r\n    for (const pane of splitPane.panes) {\r\n      if (pane.type === IgcDockManagerPaneType.splitPane) {\r\n        this.populatePinLocations(pane);\r\n      } else if (pane.type === IgcDockManagerPaneType.tabGroupPane) {\r\n        for (const cp of pane.panes) {\r\n          this.addContentPanePinLocation(cp);\r\n          this.paneParentMap.set(cp, pane);\r\n        }\r\n      } else if (pane.type === IgcDockManagerPaneType.contentPane) {\r\n        this.addContentPanePinLocation(pane);\r\n      }\r\n    }\r\n  }\r\n\r\n  private resolvePaneUnpinLocation(pane: IgcContentPane): IgcUnpinnedLocation {\r\n    let unpinnedLocation: IgcUnpinnedLocation;\r\n\r\n    if (pane.unpinnedLocation) {\r\n      unpinnedLocation = pane.unpinnedLocation;\r\n    } else {\r\n      const documentHost = this.findClosestDocumentHost(pane);\r\n      // TODO Implement an auto-detect algorithm for unpinned location when there is no document host\r\n      unpinnedLocation = documentHost ? this.findPaneUnpinLocation(pane, documentHost) : IgcUnpinnedLocation.left;\r\n    }\r\n\r\n    return unpinnedLocation;\r\n  }\r\n\r\n  private addContentPanePinLocation(pane: IgcContentPane) {\r\n    if (pane.isPinned === false) {\r\n      const unpinnedLocation = this.resolvePaneUnpinLocation(pane);\r\n      this.unpinnedLocationMap.set(pane, unpinnedLocation);\r\n    }\r\n  }\r\n\r\n  private findClosestDocumentHost(pane: IgcContentPane): IgcDocumentHost {\r\n    const panePath = this.getPanePath(pane);\r\n    let maxCommonParents = -1;\r\n    let closestDocHost: IgcDocumentHost;\r\n\r\n    for (const docHost of this.documentHosts) {\r\n      const docHostPath = this.getPanePath(docHost);\r\n      let i: number;\r\n\r\n      for (i = 0; i < panePath.length; i++) {\r\n        const paneParent = panePath[i];\r\n        const docHostParent = docHostPath[i];\r\n\r\n        if (paneParent !== docHostParent) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (i > maxCommonParents) {\r\n        maxCommonParents = i;\r\n        closestDocHost = docHost;\r\n      }\r\n    }\r\n\r\n    return closestDocHost;\r\n  }\r\n\r\n  private findPaneUnpinLocation(pane: IgcContentPane, docHost: IgcDocumentHost): IgcUnpinnedLocation {\r\n    const panePath = this.getPanePath(pane);\r\n    const docHostPath = this.getPanePath(docHost);\r\n    let commonParentIndex = -1;\r\n\r\n    for (let i = 0; i < panePath.length; i++) {\r\n      const paneParent = panePath[i];\r\n      const docHostParent = docHostPath[i];\r\n\r\n      if (paneParent === docHostParent) {\r\n        commonParentIndex = i;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (commonParentIndex >= 0) {\r\n      const commonParent = panePath[commonParentIndex] as IgcSplitPane;\r\n      const paneIndex = commonParent.panes.indexOf(panePath[commonParentIndex + 1]);\r\n      const docHostIndex = commonParent.panes.indexOf(docHostPath[commonParentIndex + 1]);\r\n\r\n      return commonParent.orientation === IgcSplitPaneOrientation.horizontal ?\r\n        paneIndex < docHostIndex ? IgcUnpinnedLocation.left : IgcUnpinnedLocation.right :\r\n        paneIndex < docHostIndex ? IgcUnpinnedLocation.top : IgcUnpinnedLocation.bottom;\r\n    }\r\n\r\n    return IgcUnpinnedLocation.left;\r\n  }\r\n\r\n  removePane(pane: IgcDockManagerPane) {\r\n    if (pane === this.dockManager.maximizedPane) {\r\n      this.dockManager.maximizedPane = null;\r\n    }\r\n\r\n    const parent = this.paneParentMap.get(pane);\r\n\r\n    if (!parent) {\r\n      if (this.dockManager.layout.floatingPanes) {\r\n        const floatingIndex = this.dockManager.layout.floatingPanes.indexOf(pane as IgcSplitPane);\r\n        if (floatingIndex > -1) {\r\n          this.dockManager.layout.floatingPanes.splice(floatingIndex, 1);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (parent.type === IgcDockManagerPaneType.splitPane ||\r\n      parent.type === IgcDockManagerPaneType.tabGroupPane) {\r\n      const index = parent.panes.indexOf(pane as IgcContentPane);\r\n      parent.panes.splice(index, 1);\r\n\r\n      if (parent.panes.length === 0) {\r\n        if (parent.allowEmpty) {\r\n          const rootParent = this.getRootParent(pane);\r\n\r\n          if (this.isFloatingPane(rootParent)) {\r\n            this.removeFloatingPaneIfEmpty(rootParent);\r\n          }\r\n        } else {\r\n          this.removePane(parent);\r\n        }\r\n      } else if (parent.type === IgcDockManagerPaneType.splitPane) {\r\n        const rootParent = this.getRootParent(parent);\r\n        if (this.isFloatingPane(rootParent)) {\r\n          this.removeFloatingPaneIfEmpty(parent);\r\n        }\r\n      }\r\n    } else if (parent.type === IgcDockManagerPaneType.documentHost) {\r\n      parent.rootPane = null;\r\n      this.removePane(parent);\r\n    }\r\n  }\r\n\r\n  private removeFloatingPaneIfEmpty(pane: IgcSplitPane) {\r\n    const childPanes = this.getChildContentPanes(pane);\r\n\r\n    if (childPanes.length === 0) {\r\n      this.removePane(pane);\r\n    }\r\n  }\r\n\r\n  isFloatingPane(pane: IgcSplitPane) {\r\n    if (!this.dockManager.layout.floatingPanes) {\r\n      return false;\r\n    }\r\n    return this.dockManager.layout.floatingPanes.indexOf(pane) > -1;\r\n  }\r\n\r\n  private addFloatingPane(content: IgcDockManagerPane, location: IgcDockManagerPoint, width: number, height: number) {\r\n    const floatingPane: IgcSplitPane = {\r\n      type: IgcDockManagerPaneType.splitPane,\r\n      orientation: IgcSplitPaneOrientation.vertical,\r\n      panes: [content]\r\n    };\r\n\r\n    floatingPane.floatingLocation = location;\r\n    floatingPane.floatingWidth = width;\r\n    floatingPane.floatingHeight = height;\r\n\r\n    if (!this.dockManager.layout.floatingPanes) {\r\n      this.dockManager.layout.floatingPanes = [];\r\n    }\r\n    this.dockManager.layout.floatingPanes.push(floatingPane);\r\n    this.dockManager.draggedPane = floatingPane;\r\n    this.initialFloatingPaneLocation = floatingPane.floatingLocation;\r\n    this.forceDragPane = floatingPane;\r\n  }\r\n\r\n  getChildContentPanes(pane: IgcSplitPane | IgcTabGroupPane): IgcContentPane[] {\r\n    const panes: IgcContentPane[] = [];\r\n    this.getChildContentPanesRecursive(pane, panes);\r\n\r\n    return panes;\r\n  }\r\n\r\n  private getChildContentPanesRecursive(pane: IgcSplitPane | IgcTabGroupPane, children: IgcContentPane[]) {\r\n    for (const child of pane.panes) {\r\n      if (child.type === IgcDockManagerPaneType.contentPane) {\r\n        children.push(child);\r\n      } else if (child.type === IgcDockManagerPaneType.tabGroupPane ||\r\n        child.type === IgcDockManagerPaneType.splitPane) {\r\n        this.getChildContentPanesRecursive(child, children);\r\n      } else if (child.type === IgcDockManagerPaneType.documentHost) {\r\n        this.getChildContentPanesRecursive(child.rootPane, children);\r\n      }\r\n    }\r\n  }\r\n\r\n  getChildDocHostRecursive(pane: IgcSplitPane): IgcDocumentHost {\r\n    for (const child of pane.panes) {\r\n      if (child.type === IgcDockManagerPaneType.documentHost) {\r\n        return child;\r\n      } else if (child.type === IgcDockManagerPaneType.splitPane) {\r\n        const result = this.getChildDocHostRecursive(child);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getVisibleContentPanes(parent: IgcTabGroupPane) {\r\n    return parent.panes.filter(t => this.isContentPaneVisible(t));\r\n  }\r\n\r\n  private getPaneToDock(draggedPane: IgcDockManagerPane) {\r\n    return draggedPane.type === IgcDockManagerPaneType.contentPane ? draggedPane :\r\n      draggedPane.type === IgcDockManagerPaneType.tabGroupPane || draggedPane.type === IgcDockManagerPaneType.splitPane ?\r\n        draggedPane.panes.length === 1 ?\r\n          draggedPane.panes[0] :\r\n          draggedPane :\r\n        draggedPane;\r\n  }\r\n\r\n  private removeDocumentHost(pane: IgcSplitPane) {\r\n    const docHost = this.getChildDocHostRecursive(pane);\r\n    if (docHost) {\r\n      const parent = this.getParent(docHost) as IgcSplitPane;\r\n      const index = parent.panes.indexOf(docHost);\r\n\r\n      parent.panes[index] = docHost.rootPane.panes.length === 1 ?\r\n        docHost.rootPane.panes[0] :\r\n        docHost.rootPane;\r\n    }\r\n  }\r\n\r\n  private dockToCenter(targetPane: IgcDockManagerPane, draggedPane: IgcSplitPane | IgcTabGroupPane | IgcContentPane) {\r\n    let targetContainer: IgcTabGroupPane | IgcSplitPane;\r\n\r\n    if (targetPane.type === IgcDockManagerPaneType.tabGroupPane) {\r\n      targetContainer = targetPane;\r\n    } else if (targetPane.type === IgcDockManagerPaneType.contentPane) {\r\n      targetContainer = {\r\n        type: IgcDockManagerPaneType.tabGroupPane,\r\n        size: targetPane.size,\r\n        panes: [targetPane]\r\n      };\r\n      const targetParent = this.paneParentMap.get(targetPane) as IgcSplitPane;\r\n      const index = targetParent.panes.indexOf(targetPane);\r\n      targetParent.panes[index] = targetContainer;\r\n    } else if (targetPane.type === IgcDockManagerPaneType.splitPane) {\r\n      targetContainer = targetPane;\r\n    } else if (targetPane.type === IgcDockManagerPaneType.documentHost) {\r\n      targetContainer = targetPane.rootPane;\r\n    }\r\n\r\n    if (targetContainer.type === IgcDockManagerPaneType.tabGroupPane) {\r\n      const panesToDock = (draggedPane.type === IgcDockManagerPaneType.contentPane) ?\r\n        [draggedPane] :\r\n        this.getChildContentPanes(draggedPane);\r\n      targetContainer.panes.push(...panesToDock);\r\n    } else if (targetContainer.type === IgcDockManagerPaneType.splitPane) {\r\n      let paneToDock = draggedPane;\r\n\r\n      if (draggedPane?.type === IgcDockManagerPaneType.splitPane && this.dockManager.documentOnlyDrag) {\r\n        this.removeDocumentHost(draggedPane);\r\n        const childPanes = this.getChildContentPanes(draggedPane);\r\n        paneToDock = childPanes.length === 1 ? childPanes[0] : paneToDock;\r\n      }\r\n\r\n      targetContainer.panes.push(paneToDock);\r\n    }\r\n  }\r\n\r\n  private dockToEdge(targetPane: IgcDockManagerPane, position: IgcDockingIndicatorPosition) {\r\n    const targetParent = this.getParent(targetPane) as IgcSplitPane;\r\n    if (!targetParent) {\r\n      return this.dockToCenter(targetPane, this.dockManager.draggedPane);\r\n    }\r\n\r\n    const paneIndex = targetParent.panes.indexOf(targetPane);\r\n    const isIndicatorVertical = Utils.isDockingIndicatorVertical(position);\r\n    const isSplitPaneVertical = Utils.isSplitPaneVertical(targetParent);\r\n    const isRTL = this.dockManager.proximityDock\r\n      ? this.dockManager.direction === 'rtl'\r\n      : this.dockingIndicator && this.dockingIndicator.direction === 'rtl';\r\n    let draggedPane: IgcDockManagerPane = this.dockManager.draggedPane;\r\n\r\n    if (draggedPane?.type === IgcDockManagerPaneType.splitPane &&\r\n      this.dockManager.documentOnlyDrag &&\r\n      !this.dockManager.dropTargetPaneInfo.floatingPaneWithoutDocHost) {\r\n      this.removeDocumentHost(draggedPane);\r\n    } else if (draggedPane?.type === IgcDockManagerPaneType.contentPane &&\r\n      this.dockManager.documentOnlyDrag &&\r\n      this.dockManager.dropTargetPaneInfo.floatingPaneWithoutDocHost) {\r\n      draggedPane = {\r\n        type: IgcDockManagerPaneType.documentHost,\r\n        rootPane: {\r\n          type: IgcDockManagerPaneType.splitPane,\r\n          orientation: IgcSplitPaneOrientation.horizontal,\r\n          panes: [draggedPane]\r\n        }\r\n      };\r\n    }\r\n\r\n    const paneToDock = draggedPane ? this.getPaneToDock(draggedPane) : this.dockManager.activePane;\r\n\r\n    if ((isIndicatorVertical && isSplitPaneVertical) || (!isIndicatorVertical && !isSplitPaneVertical)) {\r\n      const insertIndex = Utils.isDockingIndicatorBefore(position) && !isRTL ||\r\n        Utils.isDockingIndicatorBeforeRTL(position) && isRTL ?\r\n        paneIndex :\r\n        paneIndex + 1;\r\n      targetParent.panes.splice(insertIndex, 0, paneToDock);\r\n    } else {\r\n      const newSplitPane: IgcSplitPane = {\r\n        type: IgcDockManagerPaneType.splitPane,\r\n        orientation: isSplitPaneVertical ? IgcSplitPaneOrientation.horizontal : IgcSplitPaneOrientation.vertical,\r\n        panes: Utils.isDockingIndicatorBefore(position) && !isRTL ||\r\n          Utils.isDockingIndicatorBeforeRTL(position) && isRTL ?\r\n          [paneToDock, targetPane] :\r\n          [targetPane, paneToDock],\r\n        size: targetPane.size\r\n      };\r\n\r\n      targetPane.size = undefined;\r\n      paneToDock.size = undefined;\r\n      targetParent.panes[paneIndex] = newSplitPane;\r\n    }\r\n  }\r\n\r\n  private updateLayout() {\r\n    this.dockManager.layout = { ...this.dockManager.layout };\r\n  }\r\n\r\n  private hasMaximizedProp(pane: IgcDockManagerPane): pane is IgcContentPane | IgcSplitPane | IgcTabGroupPane {\r\n    return 'isMaximized' in pane;\r\n  }\r\n\r\n  getLastMaximizedPane(): IgcContentPane | IgcSplitPane | IgcTabGroupPane {\r\n    const keys = Array.from(this.paneParentMap.keys());\r\n    const maximizedPane = keys.filter(this.hasMaximizedProp).filter(i => i.isMaximized && i.type !== IgcDockManagerPaneType.splitPane)[0];\r\n    return maximizedPane;\r\n  }\r\n\r\n  processLayout() {\r\n    this.paneParentMap = new Map<IgcDockManagerPane, IgcDockManagerPane>();\r\n    this.unpinnedLocationMap = new Map<IgcContentPane, IgcUnpinnedLocation>();\r\n    this.clientContentPanesMap = new Map<string, IgcContentPane>();\r\n    this.documentHosts = [];\r\n    this.visibleContentPanes = [];\r\n    this.visibleDocuments = [];\r\n\r\n    const layout = this.dockManager.layout;\r\n\r\n    if (layout) {\r\n      this.populatePaneParents(layout.rootPane, true, false);\r\n      if (layout.floatingPanes) {\r\n        const indicesToDelete = new Map<IgcSplitPane, number>(this.dockManager.floatingPaneZIndicesMap);\r\n\r\n        for (let i = 0; i < layout.floatingPanes.length; i++) {\r\n          const pane = layout.floatingPanes[i];\r\n          this.populatePaneParents(pane, false, false);\r\n\r\n          if (this.dockManager.floatingPaneZIndicesMap.has(pane)) {\r\n            indicesToDelete.delete(pane);\r\n          } else {\r\n            this.dockManager.floatingPaneZIndicesMap.set(pane, i);\r\n          }\r\n        }\r\n\r\n        for (const key of indicesToDelete.keys()) {\r\n          this.dockManager.floatingPaneZIndicesMap.delete(key);\r\n        }\r\n      }\r\n      this.populatePinLocations(layout.rootPane);\r\n\r\n      if (this.dockManager.flyoutPane && !this.unpinnedLocationMap.has(this.dockManager.flyoutPane)) {\r\n        this.dockManager.flyoutPane = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  getParent(pane: IgcDockManagerPane): IgcDockManagerPane {\r\n    return this.paneParentMap.get(pane);\r\n  }\r\n\r\n  getRootParent(pane: IgcDockManagerPane): IgcSplitPane {\r\n    return this.getPanePath(pane)[0] as IgcSplitPane;\r\n  }\r\n\r\n  getPanePath(pane: IgcDockManagerPane): IgcDockManagerPane[] {\r\n    const path: IgcDockManagerPane[] = [];\r\n    let currentPane = pane;\r\n\r\n    while (currentPane) {\r\n      path.splice(0, 0, currentPane);\r\n      currentPane = this.paneParentMap.get(currentPane);\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  getDocHostParent(pane: IgcDockManagerPane): IgcDocumentHost {\r\n    let parent = pane;\r\n\r\n    do {\r\n      parent = this.paneParentMap.get(parent);\r\n    } while (parent && parent.type !== IgcDockManagerPaneType.documentHost);\r\n\r\n    return parent as IgcDocumentHost;\r\n  }\r\n\r\n  resizeFlyoutPane(delta: number) {\r\n    const pane = this.dockManager.flyoutPane;\r\n    const location = this.unpinnedLocationMap.get(pane);\r\n    const paneSize = pane.unpinnedSize ? pane.unpinnedSize : IGC_DEFAULT_UNPIN_PANE_SIZE;\r\n\r\n    const newSize = location === IgcUnpinnedLocation.left || location === IgcUnpinnedLocation.top ?\r\n      paneSize + delta :\r\n      paneSize - delta;\r\n    pane.unpinnedSize = newSize;\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  resizePane(pane: IgcDockManagerPane, deltaPercentage: number) {\r\n    const parentPane = this.getParent(pane) as IgcSplitPane;\r\n    const childPanes = this.getSplitPaneVisibleChildren(parentPane);\r\n    const paneIndex = childPanes.indexOf(pane);\r\n\r\n    const paneSizes = childPanes.map(p => p.size || p.size === 0 ? p.size : IGC_DEFAULT_PANE_SIZE);\r\n    const sizeSum = paneSizes.reduce((p, c) => c + p, 0);\r\n    const calcDelta = deltaPercentage * sizeSum;\r\n\r\n    childPanes[paneIndex - 1].size = paneSizes[paneIndex - 1] + calcDelta;\r\n    childPanes[paneIndex].size = paneSizes[paneIndex] - calcDelta;\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  togglePin(pane: IgcContentPane, pinBehavior = IgcPinBehavior.allPanes) {\r\n    const newValue = !this.getActualIsPinned(pane);\r\n    const parent = this.paneParentMap.get(pane);\r\n    const isTabGroup = parent.type === IgcDockManagerPaneType.tabGroupPane;\r\n    const panes = isTabGroup && pinBehavior === IgcPinBehavior.allPanes ?\r\n      parent.panes.filter(p => p.allowPinning !== false) :\r\n      [pane];\r\n\r\n    const isTabGroupPinning = isTabGroup && pinBehavior === IgcPinBehavior.selectedPane;\r\n\r\n    if (isTabGroupPinning && parent.selectedIndex >= parent.panes.filter(p => p.isPinned).length) {\r\n      parent.selectedIndex = 0;\r\n    }\r\n\r\n    const location = this.resolvePaneUnpinLocation(pane);\r\n\r\n    const args: IgcPanePinnedEventArgs = {\r\n      sourcePane: pane,\r\n      panes,\r\n      newValue,\r\n      location\r\n    };\r\n    const event = this.dockManager.panePinnedToggle.emit(args);\r\n\r\n    if (!event.defaultPrevented) {\r\n      for (const cp of args.panes) {\r\n        cp.isPinned = newValue;\r\n      }\r\n\r\n      if (this.dockManager.maximizedPane) {\r\n        const targetPanes: (IgcContentPane | IgcTabGroupPane)[] = parent && parent.type === IgcDockManagerPaneType.tabGroupPane && this.dockManager.maximizedPane === parent\r\n          ? [parent]\r\n          : args.panes;\r\n\r\n        this.dockManager.maximizedPane = null;\r\n\r\n        for (const cp of targetPanes.filter(this.hasMaximizedProp)) {\r\n          cp.isMaximized = false;\r\n        }\r\n\r\n        newValue ?\r\n          this.dockManager.flyoutPane = null :\r\n          this.flyoutPane(pane);\r\n      } else if (newValue) {\r\n        this.dockManager.flyoutPane = null;\r\n      }\r\n\r\n      this.updateLayout();\r\n    }\r\n  }\r\n\r\n  closePane(pane: IgcContentPane) {\r\n    let paneToRemove: IgcDockManagerPane = pane;\r\n\r\n    if (pane.type === IgcDockManagerPaneType.contentPane && pane !== this.dockManager.flyoutPane) {\r\n      const parent = this.paneParentMap.get(pane);\r\n\r\n      if (parent.type === IgcDockManagerPaneType.tabGroupPane) {\r\n        paneToRemove = parent;\r\n      }\r\n    }\r\n\r\n    const paneRemoved = paneToRemove.type === IgcDockManagerPaneType.tabGroupPane ?\r\n      this.removeAllowedPanes(pane, paneToRemove) :\r\n      this.emitPaneClose(pane, [paneToRemove]);\r\n\r\n    if ((paneRemoved || pane.hidden) && pane === this.dockManager.flyoutPane) {\r\n      this.dockManager.flyoutPane = null;\r\n    }\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  closeFloatingPane(pane: IgcSplitPane) {\r\n    this.removeAllowedPanes(pane, pane);\r\n    this.updateLayout();\r\n  }\r\n\r\n  private emitPaneClose(sourcePane: IgcDockManagerPane, panes: IgcContentPane[]): boolean {\r\n    let paneRemoved = false;\r\n    const args: IgcPaneCloseEventArgs = { sourcePane, panes };\r\n    const event = this.dockManager.paneClose.emit(args);\r\n\r\n    if (!event.defaultPrevented) {\r\n      for (const pane of args.panes) {\r\n        this.removePane(pane);\r\n        paneRemoved = true;\r\n      }\r\n    }\r\n\r\n    return paneRemoved;\r\n  }\r\n\r\n  private removeAllowedPanes(sourcePane: IgcDockManagerPane, pane: IgcSplitPane | IgcTabGroupPane): boolean {\r\n    let paneRemoved = false;\r\n\r\n    const panes = this.getChildContentPanes(pane)\r\n        .filter(p => this.getActualAllowClose(p))\r\n        .filter(p => pane.type === IgcDockManagerPaneType.tabGroupPane && sourcePane.type === IgcDockManagerPaneType.contentPane\r\n            ? p.isPinned !== false\r\n            : true);\r\n\r\n    paneRemoved = this.emitPaneClose(sourcePane, panes);\r\n\r\n    return paneRemoved;\r\n  }\r\n\r\n  flyoutPane(pane: IgcContentPane) {\r\n    this.dockManager.flyoutPane = this.dockManager.flyoutPane === pane ? null : pane;\r\n  }\r\n\r\n  maximizePane(pane: any) {\r\n    const parent = this.getParent(pane);\r\n    const targetPane = parent && parent.type === IgcDockManagerPaneType.tabGroupPane && pane !== this.dockManager.flyoutPane ? parent : pane;\r\n    this.dockManager.maximizedPane = this.dockManager.maximizedPane === targetPane ? null : targetPane;\r\n\r\n    if (this.dockManager.maximizedPane) {\r\n      targetPane.isMaximized = true;\r\n    } else {\r\n      targetPane.isMaximized = false;\r\n    }\r\n\r\n    if (targetPane.type == IgcDockManagerPaneType.contentPane) return;\r\n\r\n    for (const cp of this.getChildContentPanes(targetPane).filter(this.hasMaximizedProp)) {\r\n      cp.isMaximized = targetPane.isMaximized;\r\n    }\r\n  }\r\n\r\n  moveFloatingPane(pane: IgcSplitPane, location: IgcDockManagerPoint) {\r\n    pane.floatingLocation = location;\r\n    this.updateLayout();\r\n  }\r\n\r\n  resizeFloatingPaneStart(pane: IgcSplitPane, resizerLocation: IgcResizerLocation): boolean {\r\n    const resizeArgs: IgcFloatingPaneResizeEventArgs = {\r\n      sourcePane: pane,\r\n      resizerLocation\r\n    };\r\n\r\n    const resizeStartEvent = this.dockManager.floatingPaneResizeStart.emit(resizeArgs);\r\n    if (resizeStartEvent.defaultPrevented) {\r\n      return false;\r\n    }\r\n\r\n    this.initialFloatingPaneLocation = pane.floatingLocation ?? { x: 0, y: 0 };\r\n    this.initialFloatingPaneWidth = pane.floatingWidth ?? IGC_DEFAULT_PANE_SIZE;\r\n    this.initialFloatingPaneHeight = pane.floatingHeight ?? IGC_DEFAULT_PANE_SIZE;\r\n\r\n    return true;\r\n  }\r\n\r\n  resizeFloatingPane(pane: IgcSplitPane, args: IgcDragResizeEventArguments) {\r\n    const currX = pane.floatingLocation ? pane.floatingLocation.x : 0;\r\n    const currY = pane.floatingLocation ? pane.floatingLocation.y : 0;\r\n    const currW = pane.floatingWidth ? pane.floatingWidth : IGC_DEFAULT_PANE_SIZE;\r\n    const currH = pane.floatingHeight ? pane.floatingHeight : IGC_DEFAULT_PANE_SIZE;\r\n    const minW = IGC_DEFAULT_PANE_SIZE;\r\n    const minH = IGC_DEFAULT_PANE_SIZE;\r\n    const initialWidth = this.initialFloatingPaneWidth;\r\n    const initialHeight = this.initialFloatingPaneHeight;\r\n    const initialLocation = this.initialFloatingPaneLocation;\r\n\r\n    let totalOffsetY = args.dragMoveArgs.totalOffsetY;\r\n    let totalOffsetX = args.dragMoveArgs.totalOffsetX;\r\n    let newX = currX;\r\n    let newY = currY;\r\n    let newWidth = currW;\r\n    let newHeight = currH;\r\n    const maxHeight = document.documentElement.clientHeight;\r\n    const maxWidth = document.documentElement.clientWidth;\r\n\r\n    switch (args.resizerLocation) {\r\n      case (IgcResizerLocation.top):\r\n      case (IgcResizerLocation.topLeft):\r\n      case (IgcResizerLocation.topRight):\r\n        newHeight = initialHeight - totalOffsetY;\r\n        if (newHeight < minH) {\r\n          totalOffsetY = initialHeight - minH;\r\n          newHeight = minH;\r\n        }\r\n        newY = initialLocation.y + totalOffsetY;\r\n        if (newY < 0) {\r\n          newHeight += newY;\r\n          newY = 0;\r\n        } else if (newY >= maxHeight - 1) {\r\n          newY = maxHeight - 1;\r\n        }\r\n        break;\r\n      case (IgcResizerLocation.bottom):\r\n      case (IgcResizerLocation.bottomLeft):\r\n      case (IgcResizerLocation.bottomRight):\r\n        newHeight = initialHeight + totalOffsetY;\r\n        if (newHeight < minH) {\r\n          newHeight = minH;\r\n        }\r\n        if (newY + newHeight > maxHeight) {\r\n          newHeight = maxHeight - newY;\r\n        }\r\n        break;\r\n    }\r\n\r\n    switch (args.resizerLocation) {\r\n      case (IgcResizerLocation.left):\r\n      case (IgcResizerLocation.topLeft):\r\n      case (IgcResizerLocation.bottomLeft):\r\n        newWidth = initialWidth - totalOffsetX;\r\n        if (newWidth < minW) {\r\n          totalOffsetX = initialWidth - minW;\r\n          newWidth = minW;\r\n        }\r\n        newX = initialLocation.x + totalOffsetX;\r\n        if (newX < 0) {\r\n          newWidth += newX;\r\n          newX = 0;\r\n        } else if (newX >= maxWidth) {\r\n          newX = maxWidth;\r\n        }\r\n        break;\r\n      case (IgcResizerLocation.right):\r\n      case (IgcResizerLocation.topRight):\r\n      case (IgcResizerLocation.bottomRight):\r\n        newWidth = initialWidth + totalOffsetX;\r\n        if (newWidth < minW) {\r\n          newWidth = minW;\r\n        }\r\n        if (newX + newWidth > maxWidth) {\r\n          newWidth = maxWidth - newX;\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (currX === newX && currY === newY && currW === newWidth && currH === newHeight) {\r\n      return;\r\n    }\r\n\r\n    const resizingArgs: IgcFloatingPaneResizeMoveEventArgs = {\r\n      sourcePane: pane,\r\n      oldWidth: currW,\r\n      newWidth,\r\n      oldHeight: currH,\r\n      newHeight,\r\n      oldLocation: { x: currX, y: currY },\r\n      newLocation: { x: newX, y: newY },\r\n      resizerLocation: args.resizerLocation\r\n    };\r\n\r\n    const resizingEvent = this.dockManager.floatingPaneResizeMove.emit(resizingArgs);\r\n    if (resizingEvent.defaultPrevented) {\r\n      args.dragMoveArgs.cancel = true;\r\n      return;\r\n    } else {\r\n      pane.floatingLocation = resizingArgs.newLocation;\r\n      pane.floatingWidth = resizingArgs.newWidth;\r\n      pane.floatingHeight = resizingArgs.newHeight;\r\n      this.updateLayout();\r\n    }\r\n  }\r\n\r\n  resizeFloatingPaneEnd(pane: IgcSplitPane, resizerLocation: IgcResizerLocation) {\r\n    this.dockManager.floatingPaneResizeEnd.emit({\r\n      sourcePane: pane,\r\n      resizerLocation });\r\n\r\n    this.dockManager.layoutChange.emit();\r\n  }\r\n\r\n  floatPane(pane: IgcContentPane, x: number, y: number, width: number, height: number) {\r\n    let panesToRemove: IgcDockManagerPane[] = [pane];\r\n    let paneToAdd: IgcDockManagerPane = pane;\r\n    const parent = this.paneParentMap.get(pane);\r\n\r\n    if (pane !== this.dockManager.flyoutPane && parent.type === IgcDockManagerPaneType.tabGroupPane) {\r\n      if (parent.allowEmpty) {\r\n        const panes = [...parent.panes];\r\n        panesToRemove = panes;\r\n        paneToAdd = parent.panes.length === 1 ?\r\n          pane :\r\n          {\r\n            type: IgcDockManagerPaneType.tabGroupPane,\r\n            panes,\r\n            selectedIndex: parent.selectedIndex\r\n          };\r\n      } else {\r\n        panesToRemove = [parent];\r\n        paneToAdd = parent;\r\n      }\r\n    }\r\n\r\n    panesToRemove.forEach(p => this.removePane(p));\r\n    this.addFloatingPane(paneToAdd,\r\n      { x, y },\r\n      width,\r\n      height);\r\n\r\n    if (pane === this.dockManager.flyoutPane) {\r\n      pane.isPinned = true;\r\n      this.dockManager.flyoutPane = null;\r\n    }\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  floatTab(pane: IgcContentPane, x: number, y: number, width: number, height: number) {\r\n    this.removePane(pane);\r\n\r\n    const isInDocHost = !!this.getDocHostParent(pane);\r\n    let content: IgcDockManagerPane;\r\n\r\n    if (isInDocHost && pane.documentOnly) {\r\n      const docHost: IgcDocumentHost = {\r\n        type: IgcDockManagerPaneType.documentHost,\r\n        rootPane: {\r\n          type: IgcDockManagerPaneType.splitPane,\r\n          orientation: IgcSplitPaneOrientation.vertical,\r\n          panes: [pane]\r\n        }\r\n      };\r\n\r\n      content = docHost;\r\n    } else {\r\n      content = pane;\r\n    }\r\n\r\n    this.addFloatingPane(content, { x, y }, width, height);\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  hasFloatingPaneHeader(pane: IgcSplitPane): boolean {\r\n    const panes = this.getSplitPaneVisibleChildren(pane);\r\n\r\n    if (panes && panes.length) {\r\n      if (panes.length > 1) {\r\n        return true;\r\n      }\r\n\r\n      const childPane = panes[0];\r\n\r\n      if (childPane.type === IgcDockManagerPaneType.splitPane) {\r\n        return this.hasFloatingPaneHeader(childPane);\r\n      } else if (childPane.type === IgcDockManagerPaneType.documentHost) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  rootDockPane(position: IgcDockingIndicatorPosition) {\r\n    const layout = this.dockManager.layout;\r\n    const rootPane = layout.rootPane;\r\n    const paneToDock = this.dockManager.draggedPane ? this.getPaneToDock(this.dockManager.draggedPane) : this.dockManager.activePane;\r\n\r\n    this.removePane(paneToDock);\r\n\r\n    const isIndicatorVertical = position === IgcDockingIndicatorPosition.top || position === IgcDockingIndicatorPosition.bottom;\r\n    const isSplitPaneVertical = Utils.isSplitPaneVertical(rootPane);\r\n    const isRTL = this.dockingIndicator && this.dockingIndicator.direction === 'rtl';\r\n\r\n    if ((isIndicatorVertical && isSplitPaneVertical) || (!isIndicatorVertical && !isSplitPaneVertical)) {\r\n      const insertIndex = position === IgcDockingIndicatorPosition.left && !isRTL ||\r\n        position === IgcDockingIndicatorPosition.right && isRTL ||\r\n        position === IgcDockingIndicatorPosition.top ?\r\n        0 :\r\n        rootPane.panes.length;\r\n      rootPane.panes.splice(insertIndex, 0, paneToDock);\r\n    } else {\r\n      const newRootPane: IgcSplitPane = {\r\n        type: IgcDockManagerPaneType.splitPane,\r\n        orientation: isSplitPaneVertical ? IgcSplitPaneOrientation.horizontal : IgcSplitPaneOrientation.vertical,\r\n        panes: position === IgcDockingIndicatorPosition.left && !isRTL ||\r\n          position === IgcDockingIndicatorPosition.right && isRTL ||\r\n          position === IgcDockingIndicatorPosition.top ?\r\n          [paneToDock, rootPane] :\r\n          [rootPane, paneToDock],\r\n      };\r\n      rootPane.size = undefined;\r\n      paneToDock.size = undefined;\r\n\r\n      layout.rootPane = newRootPane;\r\n    }\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  dockPane(position: IgcDockingIndicatorPosition) {\r\n    const draggedFloatingPane = this.dockManager.draggedPane ?? this.dockManager.activePane;\r\n    const dropTargetPaneInfo = this.dockManager.dropTargetPaneInfo;\r\n\r\n    this.removePane(draggedFloatingPane);\r\n\r\n    const targetPane = this.dockManager.draggedPane ? dropTargetPaneInfo.pane : this.getParent(this.dockManager.activePane);\r\n\r\n    switch (position) {\r\n      case IgcDockingIndicatorPosition.center:\r\n        this.dockToCenter(targetPane, draggedFloatingPane);\r\n        break;\r\n      case IgcDockingIndicatorPosition.left:\r\n      case IgcDockingIndicatorPosition.top:\r\n      case IgcDockingIndicatorPosition.right:\r\n      case IgcDockingIndicatorPosition.bottom:\r\n        this.dockToEdge(targetPane, position);\r\n        break;\r\n      case IgcDockingIndicatorPosition.outerLeft:\r\n      case IgcDockingIndicatorPosition.outerTop:\r\n      case IgcDockingIndicatorPosition.outerRight:\r\n      case IgcDockingIndicatorPosition.outerBottom:\r\n        const docHost = this.dockManager.dropTargetPaneInfo.docHost;\r\n        this.dockToEdge(docHost, position);\r\n        break;\r\n    }\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  getActualIsPinned(pane: IgcContentPane): boolean {\r\n    return pane.isPinned !== false;\r\n  }\r\n\r\n  getActualAllowClose(pane: IgcContentPane): boolean {\r\n    return pane.allowClose !== false;\r\n  }\r\n\r\n  isContentPaneVisible(pane: IgcContentPane) {\r\n    return pane.isPinned !== false && pane.hidden !== true;\r\n  }\r\n\r\n  getSplitPaneVisibleChildren(pane: IgcSplitPane): IgcDockManagerPane[] {\r\n    return pane.panes.filter(p => {\r\n      if (p.type === IgcDockManagerPaneType.contentPane) {\r\n        return this.isContentPaneVisible(p);\r\n      } else if (p.type === IgcDockManagerPaneType.splitPane) {\r\n        return p.allowEmpty || this.getSplitPaneVisibleChildren(p).length;\r\n      } else if (p.type === IgcDockManagerPaneType.tabGroupPane) {\r\n        return p.allowEmpty || p.panes.some(cp => this.isContentPaneVisible(cp));\r\n      } else if (p.type === IgcDockManagerPaneType.documentHost) {\r\n        return p.rootPane.allowEmpty || this.getSplitPaneVisibleChildren(p.rootPane).length;\r\n      }\r\n    });\r\n  }\r\n\r\n  closeTabPane(pane: IgcContentPane) {\r\n    this.emitPaneClose(pane, [pane]);\r\n    this.updateLayout();\r\n  }\r\n\r\n  bringFloatingPaneOnTop(pane: IgcSplitPane) {\r\n    const floatingPanes = this.dockManager.layout.floatingPanes;\r\n    const floatingPaneZIndicesMap = this.dockManager.floatingPaneZIndicesMap;\r\n    const oldZIndex = floatingPaneZIndicesMap.get(pane);\r\n\r\n    for (const p of floatingPanes) {\r\n      const zIndex = floatingPaneZIndicesMap.get(p);\r\n\r\n      if (zIndex < oldZIndex) {\r\n        continue;\r\n      } else if (zIndex > oldZIndex) {\r\n        floatingPaneZIndicesMap.set(p, zIndex - 1);\r\n      } else {\r\n        floatingPaneZIndicesMap.set(p, floatingPanes.length - 1);\r\n      }\r\n    }\r\n\r\n    this.dockManager.floatingPaneZIndicesMap = new Map<IgcSplitPane, number>(floatingPaneZIndicesMap);\r\n  }\r\n\r\n  createContextMenuItems(pane: IgcContentPane): IgcContextMenuItem[] {\r\n    const items: IgcContextMenuItem[] = [];\r\n\r\n    if (this.getActualAllowClose(pane)) {\r\n      items.push({ displayText: this.dockManager.resourceStrings.close, iconName: 'close', clickHandler: () => this.closeTabPane(pane) });\r\n    }\r\n\r\n    if (pane.allowPinning !== false) {\r\n      items.push({ displayText: this.dockManager.resourceStrings.unpin, iconName: 'unpin', clickHandler: () => this.togglePin(pane, IgcPinBehavior.selectedPane) });\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  dragPaneStart(pane: IgcSplitPane | IgcContentPane, rect: DOMRect, clientX: number, clientY: number): boolean {\r\n    if (this.dockManager.maximizedPane) {\r\n      return false;\r\n    }\r\n\r\n    let panes: IgcContentPane[];\r\n    let parent: IgcDockManagerPane;\r\n\r\n    if (pane.type === IgcDockManagerPaneType.contentPane) {\r\n      parent = this.getParent(pane);\r\n      panes = parent.type === IgcDockManagerPaneType.tabGroupPane && pane !== this.dockManager.flyoutPane ?\r\n        parent.panes :\r\n        [pane];\r\n    } else {\r\n      if (this.dockManager.draggedPane === pane) {\r\n        return true;\r\n      }\r\n      panes = this.getChildContentPanes(pane);\r\n    }\r\n\r\n    const disableDockingAndFloating = panes.some(p => p.allowDocking === false) && panes.some(p => p.allowFloating === false);\r\n\r\n    if (pane.type === IgcDockManagerPaneType.contentPane && disableDockingAndFloating) {\r\n      return false;\r\n    }\r\n\r\n    const dragStartEvent = this.dockManager.paneDragStart.emit({ sourcePane: pane, panes });\r\n\r\n    if (dragStartEvent.defaultPrevented) {\r\n      return false;\r\n    }\r\n\r\n    this.draggedPanes = panes;\r\n    this.initialDragClientPoint = {\r\n      x: clientX,\r\n      y: clientY\r\n    };\r\n\r\n    if (pane.type === IgcDockManagerPaneType.splitPane) {\r\n      this.dockManager.draggedPane = pane;\r\n      this.initialFloatingPaneLocation = pane.floatingLocation ?? { x: 0, y: 0 };\r\n    } else {\r\n      if (this.draggedPanes.some(p => p.allowFloating === false)) {\r\n        this.dockManager.draggedPane = panes.length > 1 ? parent as IgcTabGroupPane : pane;\r\n        return true;\r\n      }\r\n\r\n      const action: IgcFloatPaneAction = {\r\n        type: IgcPaneDragActionType.floatPane,\r\n        location: { x: rect.x, y: rect.y },\r\n        width: rect.width,\r\n        height: rect.height\r\n      };\r\n      const dragOverEvent = this.dockManager.paneDragOver.emit({\r\n        sourcePane: pane,\r\n        panes,\r\n        action,\r\n        isValid: true\r\n      });\r\n\r\n      if (dragOverEvent.defaultPrevented) {\r\n        return false;\r\n      }\r\n\r\n      if (!dragOverEvent.detail.isValid) {\r\n        this.dockManager.draggedPane = panes.length > 1 ? parent as IgcTabGroupPane : pane;\r\n        return true;\r\n      }\r\n\r\n      this.floatPane(pane,\r\n        rect.x,\r\n        rect.y,\r\n        action.width,\r\n        action.height);\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private pointInBoundaries(clientX: number, clientY: number, location: IgcDockManagerPoint, pane: IgcSplitPane): IgcDockManagerPoint {\r\n    const minDragPosition = {\r\n      x: this.dockManagerRect.x,\r\n      y: this.dockManagerRect.y\r\n    };\r\n    const maxDragPosition = {\r\n      x: this.dockManagerRect.right - pane.floatingWidth,\r\n      y: this.dockManagerRect.bottom - pane.floatingHeight\r\n    };\r\n\r\n    if (this.initialFloatingPaneLocation.x + clientX - this.initialDragClientPoint.x <= this.dockManagerRect.x) {\r\n      location.x = minDragPosition.x;\r\n    } else if (this.initialFloatingPaneLocation.x + clientX + pane.floatingWidth - this.initialDragClientPoint.x >= this.dockManagerRect.right) {\r\n      location.x = maxDragPosition.x;\r\n    }\r\n\r\n    if (this.initialFloatingPaneLocation.y + clientY - this.initialDragClientPoint.y <= this.dockManagerRect.y) {\r\n      location.y = minDragPosition.y;\r\n    } else if (this.initialFloatingPaneLocation.y + clientY + pane.floatingHeight - this.initialDragClientPoint.y >= this.dockManagerRect.bottom) {\r\n      location.y = maxDragPosition.y;\r\n    }\r\n\r\n    return location;\r\n  }\r\n\r\n  dragPaneMove(clientX: number, clientY: number): boolean {\r\n    const draggedPane = this.dockManager.draggedPane;\r\n\r\n    if (draggedPane.type === IgcDockManagerPaneType.splitPane) {\r\n      const oldLocation = draggedPane.floatingLocation ? draggedPane.floatingLocation : { x: 0, y: 0 };\r\n\r\n      let newLocation: IgcDockManagerPoint;\r\n\r\n      newLocation = {\r\n        x: this.initialFloatingPaneLocation.x + clientX - this.initialDragClientPoint.x,\r\n        y: this.initialFloatingPaneLocation.y + clientY - this.initialDragClientPoint.y,\r\n      };\r\n\r\n      if (this.dockManager.containedInBoundaries) {\r\n        newLocation = this.pointInBoundaries(clientX, clientY, newLocation, draggedPane);\r\n      }\r\n\r\n      const dragOverEvent = this.dockManager.paneDragOver.emit({\r\n        sourcePane: draggedPane,\r\n        panes: this.draggedPanes,\r\n        action: {\r\n          type: IgcPaneDragActionType.moveFloatingPane,\r\n          oldLocation,\r\n          newLocation\r\n        },\r\n        isValid: true\r\n      });\r\n\r\n      if (dragOverEvent.defaultPrevented) {\r\n        return false;\r\n      } else {\r\n        if (dragOverEvent.detail.isValid) {\r\n          this.moveFloatingPane(draggedPane, newLocation);\r\n        }\r\n        this.dockManager.isValidDrop = dragOverEvent.detail.isValid;\r\n      }\r\n    }\r\n\r\n    return this.dragOver();\r\n  }\r\n\r\n  dragPaneEnd(): boolean {\r\n    const dockingIndicator = this.dockingIndicator;\r\n    const draggedPane = this.dockManager.draggedPane ?? this.draggedTab;\r\n    let docked = false;\r\n\r\n    this.dockManager.paneDragEnd.emit({\r\n      sourcePane: draggedPane,\r\n      panes: this.draggedPanes\r\n    });\r\n\r\n    if (dockingIndicator && this.dockManager.isValidDrop) {\r\n      if (draggedPane.type === IgcDockManagerPaneType.contentPane) {\r\n        if (draggedPane.isPinned === false) {\r\n          draggedPane.isPinned = true;\r\n\r\n          if (draggedPane === this.dockManager.flyoutPane) {\r\n            this.dockManager.flyoutPane = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (dockingIndicator.isRoot) {\r\n        this.rootDockPane(dockingIndicator.position);\r\n      } else {\r\n        this.dockPane(dockingIndicator.position);\r\n      }\r\n\r\n      docked = true;\r\n    } else if (this.dockManager.proximityDock && this.dockManager.dropShadowRect) {\r\n      this.dockPane(this.proximityDockPosition);\r\n      docked = true;\r\n    }\r\n\r\n    this.draggedPanes = null;\r\n    this.draggedTab = null;\r\n    this.dockManager.draggedPane = null;\r\n    this.dockManager.dropTargetPaneInfo = null;\r\n    this.dockManager.dropShadowRect = null;\r\n    this.dockManager.isValidDrop = true;\r\n\r\n    this.dockManager.layoutChange.emit();\r\n\r\n    return docked;\r\n  }\r\n\r\n  private emitDragOverEvent(dockingIndicator: any) {\r\n    return this.dockManager.paneDragOver.emit({\r\n      sourcePane: this.dockManager.draggedPane,\r\n      panes: this.draggedPanes,\r\n      action: {\r\n        type: IgcPaneDragActionType.dockPane,\r\n        dockingIndicator: dockingIndicator,\r\n        targetPane: this.dockManager.dropTargetPaneInfo?.pane\r\n      },\r\n      isValid: true\r\n    });\r\n  }\r\n\r\n  private dragOver(): boolean {\r\n    let dragOverEvent;\r\n\r\n    if (this.dockingIndicator) {\r\n      dragOverEvent = this.emitDragOverEvent(this.dockingIndicator);\r\n\r\n      if (dragOverEvent.defaultPrevented) {\r\n        return false;\r\n      } else {\r\n        this.dockManager.isValidDrop = dragOverEvent.detail.isValid;\r\n\r\n        this.dockManager.dropShadowRect = this.dockManager.isValidDrop ?\r\n          this.dockingIndicator.isRoot ? this.getDropShadowRectRoot() : this.getDropShadowRect() :\r\n          null;\r\n      }\r\n    } else if (this.dockManager.proximityDock) {\r\n      const disableDocking = this.draggedPanes.some(p => p.allowDocking !== undefined && !p.allowDocking);\r\n\r\n      const dockingIndicator = {\r\n        position: this.proximityDockPosition,\r\n        isRoot: false,\r\n        direction: this.dockManager.direction\r\n      };\r\n\r\n      dragOverEvent = this.emitDragOverEvent(dockingIndicator);\r\n\r\n      if (dragOverEvent.defaultPrevented) {\r\n        return false;\r\n      } else {\r\n        this.dockManager.isValidDrop = dragOverEvent.detail.isValid;\r\n\r\n        this.dockManager.dropShadowRect = this.proximityDockPosition && this.dockManager.isValidDrop && !disableDocking\r\n          ? this.getDropShadowRect(this.proximityDockPosition, this.dockManager.direction)\r\n          : null;\r\n      }\r\n    } else {\r\n      this.dockManager.dropShadowRect = null;\r\n\r\n      if (this.dockManager.draggedPane.type !== IgcDockManagerPaneType.splitPane) {\r\n        this.dockManager.isValidDrop = false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  dragTabStart(pane: IgcContentPane): boolean {\r\n    this.shiftLeftThreshold = Number.MAX_VALUE;\r\n    this.shiftRightThreshold = 0;\r\n\r\n    if (this.dockManager.draggedPane === pane) {\r\n      return true;\r\n    }\r\n\r\n    const dragStartEvent = this.dockManager.paneDragStart.emit({\r\n      sourcePane: pane,\r\n      panes: [pane]\r\n    });\r\n\r\n    if (dragStartEvent.defaultPrevented) {\r\n      return false;\r\n    }\r\n\r\n    this.initialTabHeaderClickOffset = null;\r\n    this.draggedTab = pane;\r\n    this.draggedPanes = [pane];\r\n\r\n    return true;\r\n  }\r\n\r\n  dragTabMove(pane: IgcContentPane, args: IgcDragMoveEventArguments, rects: IgcTabRectsInfo): boolean {\r\n    const clientX = args.clientX;\r\n    const clientY = args.clientY;\r\n    const offsetX = args.offsetX;\r\n    const totalOffsetX = args.totalOffsetX;\r\n    const totalOffsetY = args.totalOffsetY;\r\n\r\n    const headerRect = rects.headerRect;\r\n    const prevHeaderRect = rects.prevHeaderRect;\r\n    const nextHeaderRect = rects.nextHeaderRect;\r\n    const lastVisibleHeaderRect = rects.lastVisibleHeaderRect;\r\n    const tabsRect = rects.tabsRect;\r\n\r\n    if (!this.initialTabHeaderClickOffset) {\r\n      const clickOffsetX = clientX - totalOffsetX - headerRect.left;\r\n      const clickOffsetY = clientY - totalOffsetY - headerRect.top;\r\n      this.initialTabHeaderClickOffset = { x: clickOffsetX, y: clickOffsetY };\r\n    }\r\n\r\n    if (pane.allowFloating === false\r\n      && (clientX < tabsRect.left || clientX > tabsRect.right || clientY < headerRect.top || clientY > headerRect.bottom)) {\r\n      this.dockManager.draggedPane = pane;\r\n      return this.dragOver();\r\n    }\r\n\r\n    this.dockManager.draggedPane = null;\r\n    this.dockManager.isValidDrop = true;\r\n\r\n    const paneIndex = (this.getParent(pane) as IgcTabGroupPane).panes.indexOf(pane);\r\n\r\n    if (prevHeaderRect\r\n        && clientX < headerRect.left\r\n        && clientX < this.shiftLeftThreshold\r\n        && offsetX < 0) {\r\n      this.shiftLeftThreshold = prevHeaderRect.left;\r\n      const action: IgcMoveTabAction = {\r\n        type: IgcPaneDragActionType.moveTab,\r\n        oldIndex: paneIndex,\r\n        newIndex: paneIndex - 1\r\n      };\r\n      const dragOverEvent = this.dockManager.paneDragOver.emit({\r\n        sourcePane: pane,\r\n        panes: [pane],\r\n        action,\r\n        isValid: true\r\n      });\r\n\r\n      if (dragOverEvent.defaultPrevented) {\r\n        return false;\r\n      } else if (!dragOverEvent.detail.isValid) {\r\n        return true;\r\n      }\r\n      this.shiftTabLeft(pane);\r\n    } else if (nextHeaderRect\r\n                && clientX > headerRect.right\r\n                && clientX > this.shiftRightThreshold\r\n                && offsetX > 0) {\r\n      this.shiftRightThreshold = nextHeaderRect.right;\r\n      if (headerRect.top === nextHeaderRect.top) {\r\n        const action: IgcMoveTabAction = {\r\n          type: IgcPaneDragActionType.moveTab,\r\n          oldIndex: paneIndex,\r\n          newIndex: paneIndex + 1\r\n        };\r\n        const dragOverEvent = this.dockManager.paneDragOver.emit({\r\n          sourcePane: pane,\r\n          panes: [pane],\r\n          action,\r\n          isValid: true\r\n        });\r\n\r\n        if (dragOverEvent.defaultPrevented) {\r\n          return false;\r\n        } else if (!dragOverEvent.detail.isValid) {\r\n          return true;\r\n        }\r\n        this.shiftTabRight(pane);\r\n      }\r\n    }\r\n\r\n    if (Math.abs(totalOffsetY) > IGC_DRAG_FLYOUT_THRESHOLD\r\n        || tabsRect.left - clientX > IGC_DRAG_FLYOUT_THRESHOLD\r\n        || clientX - lastVisibleHeaderRect.right > IGC_DRAG_FLYOUT_THRESHOLD) {\r\n      if (pane.allowFloating !== false && !this.dockManager.maximizedPane) {\r\n        return this.floatTabHeader(pane, clientX , clientY , tabsRect);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private floatTabHeader(pane: IgcContentPane, clientX: number, clientY: number, tabsRect: DOMRect): boolean {\r\n    const rect = new DOMRect(\r\n      clientX - this.initialTabHeaderClickOffset.x,\r\n      clientY - this.initialTabHeaderClickOffset.y,\r\n      tabsRect.width,\r\n      tabsRect.height);\r\n\r\n    let panes: IgcContentPane[];\r\n    let parent: IgcDockManagerPane;\r\n    if (pane.type === IgcDockManagerPaneType.contentPane) {\r\n      parent = this.getParent(pane);\r\n      panes = parent.type === IgcDockManagerPaneType.tabGroupPane && pane !== this.dockManager.flyoutPane ?\r\n        parent.panes :\r\n        [pane];\r\n    }\r\n\r\n    this.draggedTab = null;\r\n\r\n    const action: IgcFloatPaneAction = {\r\n      type: IgcPaneDragActionType.floatPane,\r\n      location: { x: rect.x, y: rect.y },\r\n      width: rect.width,\r\n      height: rect.height\r\n    };\r\n    const dragOverEvent = this.dockManager.paneDragOver.emit({\r\n      sourcePane: pane,\r\n      panes,\r\n      action,\r\n      isValid: true\r\n    });\r\n\r\n    if (dragOverEvent.defaultPrevented) {\r\n      return false;\r\n    } else if (!dragOverEvent.detail.isValid) {\r\n      return true;\r\n    }\r\n\r\n    this.initialDragClientPoint = {\r\n      x: clientX,\r\n      y: clientY\r\n    };\r\n\r\n    this.floatTab(pane,\r\n      rect.x,\r\n      rect.y,\r\n      action.width,\r\n      action.height);\r\n\r\n    return false;\r\n  }\r\n\r\n  private resolveChildPanesAllowMaximize(pane: IgcSplitPane | IgcTabGroupPane) {\r\n    const panes = this.getChildContentPanes(pane);\r\n    const visiblePanes = panes.filter(p => this.isContentPaneVisible(p));\r\n\r\n    return visiblePanes.every(p => p.allowMaximize ?? this.dockManager.allowMaximize);\r\n  }\r\n\r\n  normalizeMaximizedPane(pane: IgcContentPane) {\r\n    if (this.dockManager.maximizedPane) {\r\n      const panes =\r\n        this.dockManager.maximizedPane.type === IgcDockManagerPaneType.splitPane || this.dockManager.maximizedPane.type === IgcDockManagerPaneType.tabGroupPane\r\n          ? this.getChildContentPanes(this.dockManager.maximizedPane)\r\n          : [this.dockManager.maximizedPane];\r\n\r\n      if (panes.every(p => p !== pane)) {\r\n        this.maximizePane(this.dockManager.maximizedPane);\r\n      }\r\n    }\r\n  }\r\n\r\n  resolveAllowMaximize(pane: IgcDockManagerPane) {\r\n    if (pane.type === IgcDockManagerPaneType.splitPane || pane.type === IgcDockManagerPaneType.tabGroupPane) {\r\n      return this.resolveChildPanesAllowMaximize(pane);\r\n    } else if (pane.type === IgcDockManagerPaneType.contentPane) {\r\n      if (!this.getActualIsPinned(pane)) {\r\n        return pane.allowMaximize ?? this.dockManager.allowMaximize;\r\n      }\r\n\r\n      const parent = this.getParent(pane);\r\n      return parent.type === IgcDockManagerPaneType.tabGroupPane\r\n        ? this.resolveChildPanesAllowMaximize(parent)\r\n        : pane.allowMaximize ?? this.dockManager.allowMaximize;\r\n    }\r\n  }\r\n\r\n  getDropShadowRect(dockingPosition?: IgcDockingIndicatorPosition, dockingDirection?: string) {\r\n    const shadowRect = new DOMRect();\r\n    dockingPosition = dockingPosition ?? this.dockingIndicator.position;\r\n    dockingDirection = dockingDirection ?? this.dockingIndicator.direction;\r\n\r\n    const parentRect = this.dropTargetParentRect;\r\n    const dropTargetPaneInfo = this.dockManager.dropTargetPaneInfo;\r\n    if (dropTargetPaneInfo && !parentRect) {\r\n      const targetRect = dropTargetPaneInfo.targetRect;\r\n      shadowRect.x = targetRect.x;\r\n      shadowRect.y = targetRect.y;\r\n      shadowRect.width = targetRect.width;\r\n      shadowRect.height = targetRect.height;\r\n      return shadowRect;\r\n    } else if (!dropTargetPaneInfo || !parentRect) {\r\n      return;\r\n    }\r\n\r\n    const draggedPaneSize = this.getPaneToDock(this.dockManager.draggedPane).size ?? IGC_DEFAULT_PANE_SIZE;\r\n    const isOuter = Utils.isDockingIndicatorOuter(dockingPosition);\r\n    const baseRect = isOuter ? parentRect : dropTargetPaneInfo.targetRect;\r\n\r\n    if (dockingPosition === IgcDockingIndicatorPosition.center) {\r\n      shadowRect.x = baseRect.x;\r\n      shadowRect.y = baseRect.y;\r\n      shadowRect.width = baseRect.width;\r\n      shadowRect.height = baseRect.height;\r\n      return shadowRect;\r\n    }\r\n\r\n    const targetPane = isOuter ? dropTargetPaneInfo.docHost : dropTargetPaneInfo.pane;\r\n    const targetParent = this.getParent(targetPane) as IgcSplitPane;\r\n    const panes = this.getSplitPaneVisibleChildren(targetParent);\r\n    const draggedPaneIndex = panes.indexOf(this.dockManager.draggedPane);\r\n\r\n    if (draggedPaneIndex > -1) {\r\n      panes.splice(draggedPaneIndex, 1);\r\n    }\r\n    const dropTargetIndex = panes.indexOf(targetPane);\r\n\r\n    const isIndicatorVertical = Utils.isDockingIndicatorVertical(dockingPosition);\r\n    const isSplitPaneVertical = Utils.isSplitPaneVertical(targetParent);\r\n    const isSameSplitPane = ((isIndicatorVertical && isSplitPaneVertical) || (!isIndicatorVertical && !isSplitPaneVertical));\r\n    const isRTL = dockingDirection === 'rtl';\r\n\r\n    const panesTotalSize = panes.reduce((a, b) => a + (b.size || IGC_DEFAULT_PANE_SIZE), 0);\r\n    const beforePanesTotalSize = !isRTL || isIndicatorVertical\r\n      ? panes.slice(0, dropTargetIndex).reduce((a, b) => a + (b.size || IGC_DEFAULT_PANE_SIZE), 0)\r\n      : panes.slice(dropTargetIndex, panes.length).reduce((a, b) => a + (b.size || IGC_DEFAULT_PANE_SIZE), 0);\r\n    const afterPanesTotalSize = !isRTL || isIndicatorVertical\r\n      ? panes.slice(0, dropTargetIndex + 1).reduce((a, b) => a + (b.size || IGC_DEFAULT_PANE_SIZE), 0)\r\n      : panes.slice(dropTargetIndex + 1, panes.length).reduce((a, b) => a + (b.size || IGC_DEFAULT_PANE_SIZE), 0);\r\n\r\n    switch (dockingPosition) {\r\n      case IgcDockingIndicatorPosition.left:\r\n      case IgcDockingIndicatorPosition.outerLeft:\r\n        shadowRect.x = baseRect.x;\r\n        shadowRect.y = baseRect.y;\r\n        shadowRect.height = baseRect.height;\r\n        if (isSameSplitPane) {\r\n          shadowRect.width = (draggedPaneSize / (draggedPaneSize + panesTotalSize)) * parentRect.width;\r\n          !isRTL\r\n            ? shadowRect.x = parentRect.left + beforePanesTotalSize / (draggedPaneSize + panesTotalSize) * parentRect.width\r\n            : shadowRect.x = parentRect.left + afterPanesTotalSize / (draggedPaneSize + panesTotalSize) * parentRect.width;\r\n        } else {\r\n          shadowRect.width = parentRect.width / 2;\r\n        }\r\n        break;\r\n      case IgcDockingIndicatorPosition.right:\r\n      case IgcDockingIndicatorPosition.outerRight:\r\n        shadowRect.y = baseRect.y;\r\n        shadowRect.height = baseRect.height;\r\n        if (isSameSplitPane) {\r\n          shadowRect.width = (draggedPaneSize / (draggedPaneSize + panesTotalSize)) * parentRect.width;\r\n          !isRTL\r\n            ? shadowRect.x = parentRect.left + afterPanesTotalSize / (draggedPaneSize + panesTotalSize) * parentRect.width\r\n            : shadowRect.x = parentRect.left + beforePanesTotalSize / (draggedPaneSize + panesTotalSize) * parentRect.width;\r\n        } else {\r\n          shadowRect.width = parentRect.width / 2;\r\n          shadowRect.x = parentRect.right - shadowRect.width;\r\n        }\r\n        break;\r\n      case IgcDockingIndicatorPosition.top:\r\n      case IgcDockingIndicatorPosition.outerTop:\r\n        shadowRect.x = baseRect.x;\r\n        shadowRect.y = baseRect.y;\r\n        shadowRect.width = baseRect.width;\r\n        if (isSameSplitPane) {\r\n          shadowRect.height = (draggedPaneSize / (draggedPaneSize + panesTotalSize)) * parentRect.height;\r\n          shadowRect.y = parentRect.top + beforePanesTotalSize / (draggedPaneSize + panesTotalSize) * parentRect.height;\r\n        } else {\r\n          shadowRect.height = parentRect.height / 2;\r\n        }\r\n        break;\r\n      case IgcDockingIndicatorPosition.bottom:\r\n      case IgcDockingIndicatorPosition.outerBottom:\r\n        shadowRect.x = baseRect.x;\r\n        shadowRect.width = baseRect.width;\r\n        if (isSameSplitPane) {\r\n          shadowRect.height = (draggedPaneSize / (draggedPaneSize + panesTotalSize)) * parentRect.height;\r\n          shadowRect.y = parentRect.top + afterPanesTotalSize / (draggedPaneSize + panesTotalSize) * parentRect.height;\r\n        } else {\r\n          shadowRect.height = parentRect.height / 2;\r\n          shadowRect.y = parentRect.bottom - shadowRect.height;\r\n        }\r\n        break;\r\n    }\r\n\r\n    return shadowRect;\r\n  }\r\n\r\n  getDropShadowRectRoot() {\r\n    const rootRect = this.dropTargetParentRect;\r\n    const shadowRect = new DOMRect();\r\n    const draggedPaneSize = this.getPaneToDock(this.dockManager.draggedPane).size ?? IGC_DEFAULT_PANE_SIZE;\r\n    const panes = this.getSplitPaneVisibleChildren(this.dockManager.layout.rootPane);\r\n\r\n    const draggedPaneIndex = panes.indexOf(this.dockManager.draggedPane);\r\n\r\n    if (draggedPaneIndex > -1) {\r\n      panes.splice(draggedPaneIndex, 1);\r\n    }\r\n\r\n    const panesTotalSize = panes.reduce((a, b) => a + (b.size || IGC_DEFAULT_PANE_SIZE), 0);\r\n\r\n    const isIndicatorVertical = Utils.isDockingIndicatorVertical(this.dockingIndicator.position);\r\n    const isSplitPaneVertical = Utils.isSplitPaneVertical(this.dockManager.layout.rootPane);\r\n    const isSameSplitPane = (isIndicatorVertical && isSplitPaneVertical) || (!isIndicatorVertical && !isSplitPaneVertical);\r\n    const isEmptyDockManager = panes.length === 0;\r\n\r\n    switch (this.dockingIndicator.position) {\r\n      case IgcDockingIndicatorPosition.left:\r\n        shadowRect.x = rootRect.x;\r\n        shadowRect.y = rootRect.y;\r\n        shadowRect.height = rootRect.height;\r\n        shadowRect.width = isSameSplitPane || isEmptyDockManager ? (draggedPaneSize / (draggedPaneSize + panesTotalSize) * rootRect.width) : (rootRect.width / 2);\r\n        break;\r\n      case IgcDockingIndicatorPosition.right:\r\n        shadowRect.y = rootRect.y;\r\n        shadowRect.height = rootRect.height;\r\n        shadowRect.width = isSameSplitPane || isEmptyDockManager ? (shadowRect.width = draggedPaneSize / (draggedPaneSize + panesTotalSize) * rootRect.width) : (rootRect.width / 2);\r\n        shadowRect.x = rootRect.right - shadowRect.width;\r\n        break;\r\n      case IgcDockingIndicatorPosition.top:\r\n        shadowRect.x = rootRect.x;\r\n        shadowRect.y = rootRect.y;\r\n        shadowRect.width = rootRect.width;\r\n        shadowRect.height = isSameSplitPane || isEmptyDockManager ? (draggedPaneSize / (draggedPaneSize + panesTotalSize) * rootRect.height) : (rootRect.height / 2);\r\n        break;\r\n      case IgcDockingIndicatorPosition.bottom:\r\n        shadowRect.x = rootRect.x;\r\n        shadowRect.width = rootRect.width;\r\n        shadowRect.height = isSameSplitPane || isEmptyDockManager ? (draggedPaneSize / (draggedPaneSize + panesTotalSize) * rootRect.height) : (rootRect.height / 2);\r\n        shadowRect.y = rootRect.bottom - shadowRect.height;\r\n        break;\r\n    }\r\n\r\n    return shadowRect;\r\n  }\r\n\r\n  selectHiddenTab(tabGroup: IgcTabGroupPane, pane: IgcContentPane) {\r\n    const index = tabGroup.panes.indexOf(pane);\r\n    tabGroup.panes.splice(index, 1);\r\n    tabGroup.panes.splice(0, 0, pane);\r\n    tabGroup.selectedIndex = 0;\r\n    this.updateLayout();\r\n  }\r\n\r\n  shiftTabLeft(pane: IgcContentPane) {\r\n    const tabGroup = this.getParent(pane) as IgcTabGroupPane;\r\n    const draggedIndex = tabGroup.panes.indexOf(pane);\r\n\r\n    if (draggedIndex > 0) {\r\n      tabGroup.panes.splice(draggedIndex, 1);\r\n      tabGroup.panes.splice(draggedIndex - 1, 0, pane);\r\n      tabGroup.selectedIndex = draggedIndex - 1;\r\n      this.updateLayout();\r\n    }\r\n\r\n    this.forceDragTabHeader = pane;\r\n  }\r\n\r\n  shiftTabRight(pane: IgcContentPane) {\r\n    const tabGroup = this.getParent(pane) as IgcTabGroupPane;\r\n    const draggedIndex = tabGroup.panes.indexOf(pane);\r\n\r\n    if (draggedIndex < tabGroup.panes.length - 1) {\r\n      tabGroup.panes.splice(draggedIndex, 1);\r\n      tabGroup.panes.splice(draggedIndex + 1, 0, pane);\r\n      tabGroup.selectedIndex = draggedIndex + 1;\r\n      this.updateLayout();\r\n    }\r\n\r\n    this.forceDragTabHeader = pane;\r\n  }\r\n\r\n  cacheDocumentsOrder() {\r\n    this.documentsCache = this.visibleDocuments.filter(c => !c.disabled);\r\n  }\r\n\r\n  cacheContentPanesOrder() {\r\n    this.contentPanesCache = this.visibleContentPanes.filter(c => !c.disabled);\r\n  }\r\n\r\n  focusPrevContentPane(isInDocHost: boolean) {\r\n    const contentPanesCache = isInDocHost ? this.documentsCache : this.contentPanesCache;\r\n    const activePaneIndex = contentPanesCache.indexOf(this.dockManager.activePane);\r\n    const prevPane = activePaneIndex > 0 ?\r\n      contentPanesCache[activePaneIndex - 1] :\r\n      contentPanesCache[contentPanesCache.length - 1];\r\n\r\n    this.normalizeMaximizedPane(prevPane);\r\n    this.dockManager.activePane = prevPane;\r\n  }\r\n\r\n  focusNextContentPane(isInDocHost: boolean) {\r\n    const contentPanesCache = isInDocHost ? this.documentsCache : this.contentPanesCache;\r\n    const activePaneIndex = contentPanesCache.indexOf(this.dockManager.activePane);\r\n    const nextPane = (activePaneIndex >= 0 && activePaneIndex < contentPanesCache.length - 1) ?\r\n      contentPanesCache[activePaneIndex + 1] :\r\n      contentPanesCache[0];\r\n\r\n    this.normalizeMaximizedPane(nextPane);\r\n    this.dockManager.activePane = nextPane;\r\n  }\r\n}\r\n"]}