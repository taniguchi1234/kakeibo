{"version":3,"file":"pane-header-component.js","sourceRoot":"","sources":["../../../../src/components/dockmanager/panes/pane-header-component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Fragment, Host, Prop, Watch, h } from '@stencil/core';\r\n\r\nimport { Utils } from '../../../utils/utils';\r\nimport { IGNORE_DRAG, IgcDragEventArguments, IgcDragMoveEventArguments, IgcDragService, IgcDragStartEventArguments } from '../../drag-drop/drag.service';\r\nimport { IgcContentPane, IgcDockManagerResourceStrings } from '../dockmanager.public-interfaces';\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Component({\r\n  tag: 'igc-pane-header-component',\r\n  styleUrl: 'pane-header-component.scss',\r\n  shadow: true,\r\n  scoped: false\r\n})\r\nexport class IgcPaneHeaderComponent {\r\n  @Prop({ mutable: true }) dragService: IgcDragService;\r\n\r\n  @Element() element: HTMLIgcPaneHeaderComponentElement;\r\n\r\n  @Prop() pinned: boolean;\r\n  @Prop() maximized: boolean;\r\n  @Prop() isFloating: boolean;\r\n  @Prop() forcedDrag: boolean;\r\n  @Prop() isFloatingPaneHeader: boolean;\r\n  @Prop() allowClose = true;\r\n  @Prop() allowMaximize = true;\r\n  @Prop() allowPinning = true;\r\n  @Prop() pane: IgcContentPane;\r\n  @Prop() isActive: boolean;\r\n  @Prop() disabled = false;\r\n  @Prop() resourceStrings: IgcDockManagerResourceStrings;\r\n\r\n  @Event() pinToggle: EventEmitter;\r\n  @Event({ bubbles: false }) maximize: EventEmitter;\r\n  @Event() close: EventEmitter;\r\n  @Event() dragStarted: EventEmitter<IgcDragStartEventArguments>;\r\n  @Event() dragEnded: EventEmitter<IgcDragEventArguments>;\r\n  @Event() dragMoved: EventEmitter<IgcDragMoveEventArguments>;\r\n  @Event() elementConnected: EventEmitter<HTMLIgcPaneHeaderComponentElement>;\r\n  @Event() elementDisconnected: EventEmitter<HTMLIgcPaneHeaderComponentElement>;\r\n\r\n  connectedCallback() {\r\n    this.dragService = new IgcDragService(this.element);\r\n    this.dragService.dragEdgeTolerance = 3;\r\n    this.dragService.dragStart = args => {\r\n      this.dragStarted.emit(args);\r\n    };\r\n\r\n    this.dragService.dragEnd = args => {\r\n      this.dragEnded.emit(args);\r\n    };\r\n\r\n    this.dragService.dragMove = args => {\r\n      this.dragMoved.emit(args);\r\n    };\r\n\r\n    this.forceDragging();\r\n    this.elementConnected.emit(this.element);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.dragService) {\r\n      this.dragService.destroy();\r\n    }\r\n    this.elementDisconnected.emit(this.element);\r\n  }\r\n\r\n  @Watch('forcedDrag')\r\n  forcedDragChanged() {\r\n    this.forceDragging();\r\n  }\r\n\r\n  private forceDragging() {\r\n    if (this.forcedDrag) {\r\n      this.dragService.forceDragging();\r\n    }\r\n  }\r\n\r\n  private pinButtonClick = () => {\r\n    this.pinToggle.emit();\r\n  }\r\n\r\n  private maximizeButtonClick = () => {\r\n    this.maximize.emit();\r\n  }\r\n\r\n  private closeButtonClick = () => {\r\n    this.close.emit();\r\n  }\r\n\r\n  private renderCloseButton() {\r\n    return (\r\n      <slot name=\"paneHeaderCloseButton\">\r\n        <igc-button-component part=\"pane-header-close-button\">\r\n          <igc-icon-component name=\"close\" aria-label={this.resourceStrings.close} title={this.resourceStrings.close} />\r\n        </igc-button-component>\r\n      </slot>\r\n    );\r\n  }\r\n\r\n  private renderMaximizeButton() {\r\n    return (\r\n      <slot name=\"paneHeaderMaximizeButton\">\r\n        <igc-button-component part=\"pane-header-maximize-button\">\r\n          <igc-icon-component\r\n            name=\"maximize\"\r\n            aria-label={this.resourceStrings.maximize}\r\n            title={this.resourceStrings.maximize}\r\n          />\r\n        </igc-button-component>\r\n      </slot>\r\n    );\r\n  }\r\n\r\n  private renderMinimizeButton() {\r\n    return (\r\n      <div>\r\n        <slot name=\"paneHeaderMinimizeButton\">\r\n          <igc-button-component part=\"pane-header-minimize-button\">\r\n            <igc-icon-component\r\n              name=\"minimize\"\r\n              aria-label={this.resourceStrings.minimize}\r\n              title={this.resourceStrings.minimize}\r\n            />\r\n          </igc-button-component>\r\n        </slot>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderPinButton() {\r\n    return (\r\n      <Fragment>\r\n        {!this.isFloating && <slot name=\"paneHeaderPinButton\">\r\n          <igc-button-component part=\"pane-header-pin-button\" style={{ display: this.isFloating ? 'none' : 'flex' }}>\r\n            <igc-icon-component\r\n              name=\"pin\"\r\n              aria-label={this.resourceStrings.pin}\r\n              title={this.resourceStrings.pin}\r\n            />\r\n          </igc-button-component> </slot>}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderUnpinButton() {\r\n    return (\r\n      <Fragment>\r\n        {!this.isFloating && <slot name=\"paneHeaderUnpinButton\">\r\n          <igc-button-component part=\"pane-header-unpin-button\" style={{ display: this.isFloating ? 'none' : 'flex' }}>\r\n            <igc-icon-component\r\n              name=\"unpin\"\r\n              aria-label={this.resourceStrings.unpin}\r\n              title={this.resourceStrings.unpin}\r\n            />\r\n          </igc-button-component>\r\n        </slot>}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const commonParts = {\r\n      active: this.isActive,\r\n      disabled: this.disabled,\r\n      floating: this.isFloating,\r\n      window: this.isFloatingPaneHeader,\r\n    };\r\n\r\n    const paneHeaderParts = Utils.partNameMap({ 'pane-header': true, ...commonParts });\r\n    const paneHeaderContentParts = Utils.partNameMap({ 'pane-header-content': true, ...commonParts });\r\n    const paneHeaderActionsParts = Utils.partNameMap({ 'pane-header-actions': true, ...commonParts });\r\n\r\n    const exportParts = Utils.partNameMap({\r\n      'pane-header': true,\r\n      'pane-header-actions': true,\r\n      'pane-header-content': true,\r\n      'pane-header-close-button': true,\r\n      'pane-header-maximize-button': true,\r\n      'pane-header-minimize-button': true,\r\n      'pane-header-pin-button': true,\r\n      'pane-header-unpin-button': true,\r\n      ...commonParts\r\n    }, ',');\r\n\r\n    return (\r\n      <Host\r\n        part={paneHeaderParts}\r\n        exportparts={exportParts}\r\n      >\r\n        <div part={paneHeaderContentParts} class=\"header-text\">\r\n          <slot></slot>\r\n        </div>\r\n        <div part={paneHeaderActionsParts} class=\"header-actions\" {...{ [IGNORE_DRAG]: true }}>\r\n          {this.allowPinning &&\r\n            <div onClick={this.pinButtonClick}>\r\n              {this.pinned ? this.renderUnpinButton() : this.renderPinButton()}\r\n            </div>\r\n          }\r\n          {this.allowMaximize &&\r\n            <div onClick={this.maximizeButtonClick}>\r\n              {this.maximized ? this.renderMinimizeButton() : this.renderMaximizeButton()}\r\n            </div>\r\n          }\r\n          {this.allowClose &&\r\n            <div onClick={this.closeButtonClick}>\r\n              {this.renderCloseButton()}\r\n            </div>\r\n          }\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}