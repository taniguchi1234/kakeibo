{"version":3,"file":"floating-pane-component.js","sourceRoot":"","sources":["../../../../src/components/dockmanager/panes/floating-pane-component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\n\r\nimport { IgcDragEventArguments, IgcDragMoveEventArguments, IgcDragResizeEventArguments, IgcDragStartEventArguments } from '../../drag-drop/drag.service';\r\nimport { IGC_DEFAULT_PANE_SIZE } from '../dockmanager.interfaces';\r\nimport { IgcDockManagerPoint, IgcResizerLocation } from '../dockmanager.public-interfaces';\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Component({\r\n  tag: 'igc-floating-pane-component',\r\n  styleUrl: 'floating-pane-component.scss',\r\n  shadow: true\r\n})\r\nexport class IgcFloatingPaneComponent {\r\n  @Prop() allowResize = true;\r\n  @Prop() floatingLocation: IgcDockManagerPoint;\r\n  @Prop() floatingWidth: number;\r\n  @Prop() floatingHeight: number;\r\n  @Prop() hasHeader: boolean;\r\n  @Prop() maximized: boolean;\r\n  @Prop() floatingMinHeight = IGC_DEFAULT_PANE_SIZE;\r\n  @Prop() floatingMinWidth = IGC_DEFAULT_PANE_SIZE;\r\n  @Prop() floatingId: string;\r\n\r\n  @Event() wndResizeStart: EventEmitter<IgcDragResizeEventArguments>;\r\n  @Event() wndResizeMove: EventEmitter<IgcDragResizeEventArguments>;\r\n  @Event() wndResizeEnd: EventEmitter<IgcDragResizeEventArguments>;\r\n  @Element() elem: HTMLElement;\r\n\r\n  private handleResizerMove(event: CustomEvent<IgcDragMoveEventArguments>) {\r\n    const el = event.target as HTMLIgcResizerComponentElement;\r\n    this.wndResizeMove.emit({\r\n      dragMoveArgs: event.detail,\r\n      resizerLocation: el.orientation\r\n    });\r\n\r\n  }\r\n  private handleResizeStart(event: CustomEvent<IgcDragStartEventArguments>) {\r\n    const el = event.target as HTMLIgcResizerComponentElement;\r\n    const args = {\r\n      dragMoveArgs: { ...event.detail, offsetX: 0, offsetY: 0 },\r\n      resizerLocation: el.orientation\r\n    };\r\n    this.wndResizeStart.emit(args);\r\n\r\n    if (args.dragMoveArgs.cancel) {\r\n      event.detail.cancel = true;\r\n    }\r\n  }\r\n  private handleResizeEnd(event: CustomEvent<IgcDragEventArguments>) {\r\n    const el = event.target as HTMLIgcResizerComponentElement;\r\n    this.wndResizeEnd.emit({\r\n      dragMoveArgs: event.detail,\r\n      resizerLocation: el.orientation\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      position: 'absolute',\r\n      left: this.floatingLocation.x + 'px',\r\n      top: this.floatingLocation.y + 'px',\r\n      minWidth: this.floatingMinWidth + 'px',\r\n      minHeight: this.floatingMinHeight + 'px',\r\n      width: this.floatingWidth + 'px',\r\n      height: this.floatingHeight + 'px'\r\n    };\r\n\r\n    return (\r\n      <Host\r\n        style={this.maximized ? {} : styles}\r\n        role=\"dialog\"\r\n        aria-label=\"dialog\"\r\n        part=\"floating-window\"\r\n      >\r\n        {this.allowResize &&\r\n        <Fragment>\r\n          <igc-resizer-component orientation={IgcResizerLocation.left} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n          <igc-resizer-component orientation={IgcResizerLocation.top} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n          <igc-resizer-component orientation={IgcResizerLocation.right} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n          <igc-resizer-component orientation={IgcResizerLocation.bottom} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n        </Fragment>}\r\n        <slot name=\"header\">\r\n        </slot>\r\n          <slot></slot>\r\n        {this.allowResize &&\r\n        <Fragment>\r\n          <igc-resizer-component orientation={IgcResizerLocation.topRight} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n          <igc-resizer-component orientation={IgcResizerLocation.topLeft} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n          <igc-resizer-component orientation={IgcResizerLocation.bottomRight} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n          <igc-resizer-component orientation={IgcResizerLocation.bottomLeft} onResizerDragStart={this.handleResizeStart.bind(this)} onResizerMoved={this.handleResizerMove.bind(this)} onResizerDragEnd={this.handleResizeEnd.bind(this)}/>\r\n        </Fragment>}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}