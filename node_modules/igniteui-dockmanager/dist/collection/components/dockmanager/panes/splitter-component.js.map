{"version":3,"file":"splitter-component.js","sourceRoot":"","sources":["../../../../src/components/dockmanager/panes/splitter-component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\r\n\r\nimport { Utils } from '../../../utils/utils';\r\nimport { IgcDragMoveEventArguments, IgcDragService } from '../../drag-drop/drag.service';\r\nimport { IGC_DEFAULT_RESIZE, IGC_RESIZING_MIN_SIZE } from '../dockmanager.interfaces';\r\nimport { IgcSplitPaneOrientation, IgcUnpinnedLocation } from '../dockmanager.public-interfaces';\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Component({\r\n  tag: 'igc-splitter-component',\r\n  styleUrl: 'splitter-component.scss',\r\n  shadow: true,\r\n  scoped: false\r\n})\r\nexport class IgcSplitterComponent {\r\n  private dragService: IgcDragService;\r\n  private paneSizes: number[];\r\n  private ghostElement: HTMLElement;\r\n  private flyoutMaxSize: number;\r\n\r\n  @Element() element: HTMLElement;\r\n\r\n  @State() dragOffset: number;\r\n  @State() hasCustomSplitterHandle: boolean;\r\n\r\n  @Prop() showDragGhost: boolean;\r\n  @Prop() splitPaneOrientation: IgcSplitPaneOrientation;\r\n  @Prop() flyoutLocation: IgcUnpinnedLocation;\r\n\r\n  @Event() resizeStart: EventEmitter;\r\n  @Event() resizeEnd: EventEmitter<number>;\r\n\r\n  connectedCallback() {\r\n    this.dragService = new IgcDragService(this.element);\r\n    this.dragService.dragStart = this.dragStart;\r\n    this.dragService.dragEnd = this.dragEnd;\r\n    this.dragService.dragMove = this.dragMove;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.dragService.destroy();\r\n    document.documentElement.removeEventListener('mouseup', this.handleMouseUp, false);\r\n  }\r\n\r\n  calculateOffset(event: KeyboardEvent): number {\r\n    if (this.isArrowUp(event) || this.isArrowLeft(event)) {\r\n      return -IGC_DEFAULT_RESIZE;\r\n    } else if (this.isArrowDown(event) || this.isArrowRight(event)) {\r\n      return IGC_DEFAULT_RESIZE;\r\n    }\r\n  }\r\n\r\n  isArrowUp(event: KeyboardEvent): boolean {\r\n    return event.key === 'ArrowUp';\r\n  }\r\n\r\n  isArrowDown(event: KeyboardEvent): boolean {\r\n    return event.key === 'ArrowDown';\r\n  }\r\n\r\n  isArrowLeft(event: KeyboardEvent): boolean {\r\n    return event.key === 'ArrowLeft';\r\n  }\r\n\r\n  isArrowRight(event: KeyboardEvent): boolean {\r\n    return event.key === 'ArrowRight';\r\n  }\r\n\r\n  @Listen('keydown')\r\n  handleKeydownEvent(event: KeyboardEvent) {\r\n    if (this.splitPaneOrientation === IgcSplitPaneOrientation.horizontal &&\r\n      (!this.isArrowLeft(event) && !this.isArrowRight(event))) {\r\n      return;\r\n    }\r\n    if (this.splitPaneOrientation === IgcSplitPaneOrientation.vertical &&\r\n      (!this.isArrowUp(event) && !this.isArrowDown(event))) {\r\n      return;\r\n    }\r\n\r\n    this.showDragGhost = false;\r\n    this.dragStartHelper(this.calculateOffset(event));\r\n\r\n    if (this.flyoutLocation) {\r\n      this.constrainFlyoutResize();\r\n    } else {\r\n      this.constrainSplitPaneResize();\r\n    }\r\n\r\n    this.dragEndHelper();\r\n  }\r\n\r\n  @Listen('mousedown')\r\n  handleMouseDown() {\r\n    this.showDragGhost = true;\r\n    document.documentElement.addEventListener('mouseup', this.handleMouseUp, false);\r\n    this.resizeStart.emit();\r\n  }\r\n\r\n  private handleMouseUp = () => {\r\n    document.documentElement.removeEventListener('mouseup', this.handleMouseUp, false);\r\n    this.showDragGhost = false;\r\n  }\r\n\r\n  private dragStartHelper(dragOffset: number) {\r\n    this.dragOffset = dragOffset;\r\n\r\n    const parent = this.element.parentElement;\r\n    const children = Array.from(parent.children) as HTMLElement[];\r\n\r\n    if (this.flyoutLocation) {\r\n      const pane = children[0];\r\n      this.paneSizes = [this.splitPaneOrientation === IgcSplitPaneOrientation.horizontal ?\r\n        pane.offsetWidth : pane.offsetHeight];\r\n      this.flyoutMaxSize = this.splitPaneOrientation === IgcSplitPaneOrientation.horizontal ?\r\n        parent.offsetWidth - IGC_RESIZING_MIN_SIZE :\r\n        parent.offsetHeight - IGC_RESIZING_MIN_SIZE;\r\n    } else {\r\n      const index = children.indexOf(this.element);\r\n      const panes = [children[index - 1], children[index + 1]];\r\n      this.paneSizes = panes.map(p => this.splitPaneOrientation === IgcSplitPaneOrientation.horizontal ?\r\n        p.offsetWidth : p.offsetHeight);\r\n    }\r\n  }\r\n\r\n  private dragStart = () => {\r\n    this.dragStartHelper(0);\r\n  }\r\n\r\n  private dragEndHelper() {\r\n    const dragOffset = this.dragOffset;\r\n    this.showDragGhost = false;\r\n    this.dragOffset = 0;\r\n    this.paneSizes = null;\r\n    this.resizeEnd.emit(dragOffset);\r\n  }\r\n\r\n  private dragEnd = () => {\r\n    this.dragEndHelper();\r\n  }\r\n\r\n  private dragMove = (args: IgcDragMoveEventArguments) => {\r\n    if (!this.ghostElement) {\r\n      return;\r\n    }\r\n\r\n    const rect = this.ghostElement.getBoundingClientRect();\r\n    const isHorizontal = this.splitPaneOrientation === IgcSplitPaneOrientation.horizontal;\r\n    const clientCoordinate = isHorizontal ? args.clientX : args.clientY;\r\n    const offset = isHorizontal ? args.offsetX : args.offsetY;\r\n    const startCoordinate = isHorizontal ? rect.left : rect.top;\r\n    const endCoordinate = isHorizontal ? rect.right : rect.bottom;\r\n\r\n    if (offset <= 0 && startCoordinate < clientCoordinate) {\r\n      return;\r\n    }\r\n\r\n    if (offset >= 0 && endCoordinate > clientCoordinate) {\r\n      return;\r\n    }\r\n\r\n    this.dragOffset += offset;\r\n\r\n    if (this.flyoutLocation) {\r\n      this.constrainFlyoutResize();\r\n    } else {\r\n      this.constrainSplitPaneResize();\r\n    }\r\n  }\r\n\r\n  private constrainFlyoutResize() {\r\n    const paneSize = this.paneSizes[0];\r\n    const isStartLocation = this.flyoutLocation === IgcUnpinnedLocation.left || this.flyoutLocation === IgcUnpinnedLocation.top;\r\n    const offset = isStartLocation ?\r\n      this.dragOffset :\r\n      -this.dragOffset;\r\n\r\n    if (paneSize + offset < IGC_RESIZING_MIN_SIZE) {\r\n      const minOffset = paneSize - IGC_RESIZING_MIN_SIZE;\r\n      this.dragOffset = isStartLocation ? -minOffset : minOffset;\r\n    } else if (paneSize + offset > this.flyoutMaxSize) {\r\n      const maxOffset = this.flyoutMaxSize - paneSize;\r\n      this.dragOffset = isStartLocation ? maxOffset : -maxOffset;\r\n    }\r\n  }\r\n\r\n  private constrainSplitPaneResize() {\r\n    let rtl = false;\r\n    const dockmanager = this.closestElement('igc-dockmanager', this.element);\r\n    if (dockmanager.dir !== '') {\r\n      rtl = dockmanager.dir === 'rtl';\r\n    } else {\r\n      let parent = dockmanager.parentElement;\r\n      while (parent) {\r\n        if (parent.dir !== '') {\r\n          rtl = parent.dir === 'rtl';\r\n          break;\r\n        }\r\n\r\n        parent = parent.parentElement;\r\n      }\r\n    }\r\n\r\n    const isVertical = this.splitPaneOrientation === IgcSplitPaneOrientation.vertical;\r\n    if (this.dragOffset < 0) {\r\n      const referencePaneSize = !rtl || isVertical ? this.paneSizes[0] : this.paneSizes[1];\r\n      if (referencePaneSize > IGC_RESIZING_MIN_SIZE) {\r\n        if (referencePaneSize + this.dragOffset < IGC_RESIZING_MIN_SIZE) {\r\n          this.dragOffset = -(referencePaneSize - IGC_RESIZING_MIN_SIZE);\r\n        }\r\n      } else {\r\n        this.dragOffset = 0;\r\n      }\r\n    } else {\r\n      const referencePaneSize = !rtl || isVertical ? this.paneSizes[1] : this.paneSizes[0];\r\n      if (referencePaneSize > IGC_RESIZING_MIN_SIZE) {\r\n        if (referencePaneSize - this.dragOffset < IGC_RESIZING_MIN_SIZE) {\r\n          this.dragOffset = referencePaneSize - IGC_RESIZING_MIN_SIZE;\r\n        }\r\n      } else {\r\n        this.dragOffset = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  private closestElement(selector: string, el: any): HTMLIgcDockmanagerElement {\r\n    return (\r\n      (el && el.closest(selector)) ||\r\n        this.closestElement(selector, el.getRootNode().host)\r\n    );\r\n  }\r\n\r\n  handleSlotChange() {\r\n    const handleSlot = this.element.shadowRoot.querySelector('slot[name=\"splitterHandle\"]') as HTMLSlotElement;\r\n    const isVertical = this.splitPaneOrientation === IgcSplitPaneOrientation.vertical;\r\n    this.hasCustomSplitterHandle = handleSlot.assignedElements().length > 0;\r\n\r\n    if (this.hasCustomSplitterHandle) {\r\n      const handle = this.element.querySelector('[part=\"splitter-handle\"]');\r\n      const parts = Utils.partNameMap({\r\n        'splitter-handle': true,\r\n        'vertical': isVertical,\r\n        'horizontal': !isVertical\r\n      });\r\n      handle.setAttribute('part', parts);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isVertical = this.splitPaneOrientation === IgcSplitPaneOrientation.vertical;\r\n    const splitterClasses = {\r\n      'splitter': true,\r\n      'splitter--vertical': isVertical,\r\n      'splitter--custom-handle': this.hasCustomSplitterHandle\r\n    };\r\n\r\n    const ghostClasses = {\r\n      'splitter-ghost': true,\r\n      'splitter-ghost--vertical': isVertical\r\n    };\r\n\r\n    return (\r\n      <Host\r\n        part=\"splitter\"\r\n        exportparts=\"splitter,\r\n        splitter-base,\r\n        splitter-ghost\"\r\n      >\r\n        <div part=\"splitter-base\" class={splitterClasses} tabIndex={0} role=\"separator\" aria-orientation={this.splitPaneOrientation.toString()}>\r\n            <slot name=\"splitterHandle\" onSlotchange={this.handleSlotChange.bind(this)}></slot>\r\n        </div>\r\n        {this.showDragGhost &&\r\n          <div\r\n            part=\"splitter-ghost\"\r\n            class={ghostClasses}\r\n            style={{\r\n              left: `${isVertical ? 0 : this.dragOffset}px`,\r\n              top: `${isVertical ? this.dragOffset : 0}px`\r\n            }}\r\n            ref={el => this.ghostElement = el}\r\n          />}\r\n      </Host>);\r\n  }\r\n}\r\n"]}